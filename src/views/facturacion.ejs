<%- include('partials/_header_facturacion') %>

    <div class="containere mx-5">
        <div class="row">
            <div class="col-md-12">

                <div class="col-md-12 row ">
                    <div class="col-md-9 mt-4">
                        <div class="col-md-12 table-responsive"
                            style="max-height: 58vh; height: 58vh; overflow-y: auto;">
                            <table class="table table-bordered table-hover detalleDeFacturacion">
                                <thead class="bg-dark text-white ">
                                    <tr>
                                        <th class="d-none">ID</th>
                                        <th>CÓDIGO</th>
                                        <th>DESCRIPCIÓN</th>
                                        <th>PRECIO</th>
                                        <th>CANTIDAD</th>
                                        <th>UNIDAD</th>
                                        <th>DESCUENTO</th>
                                        <th>ITBIS</th>
                                        <th>SUBTOTAL</th>
                                        <th>IMPORTE</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="detalleFacturacion">

                                </tbody>
                            </table>
                        </div>
                        <hr>
                        <div class="card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="row col-md-9">
                                        <div class="col-md-3">
                                            <label for="subTotal" class="form-label text-black"><strong>Sub
                                                    Total:</strong></label>
                                            <input type="text" style='text-align: right; font-size: 24px;'
                                                class="form-control ml-5 mx-2" name="subTotal" id="subTotal"
                                                placeholder="" readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="subTotal" class="form-label text-black"><strong>Más
                                                    Itbis:</strong></label>
                                            <input type="text" style='text-align: right; font-size: 24px;'
                                                class="form-control ml-5 mx-2" name="masItbis" id="masItbis"
                                                placeholder="" readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="subTotal"
                                                class="form-label text-black"><strong>Descuento:</strong></label>
                                            <input type="text" style='text-align: right; font-size: 24px;'
                                                class="form-control ml-5 mx-2" name="descuento" id="descuento"
                                                placeholder="" readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="servicio" class="form-label text-black"><strong>10%
                                                    servicio</strong></label>
                                            <input type="checkbox" class="form-check-input ml-5 mx-2" name="servicio"
                                                id="servicio" placeholder="" readonly>
                                            <input type="text" style='text-align: right; font-size: 24px;'
                                                class="form-control ml-5 mx-2" name="maselservicio" id="maselservicio"
                                                placeholder="" readonly>
                                        </div>
                                    </div>


                                    <div class="col-md-3">
                                        <label for="subTotal" class="form-label text-black"><strong>Total a
                                                Cobrar:</strong></label>
                                        <input type="text"
                                            style='text-align: right; background-color: green;color: white; font-size: 24px;'
                                            class="form-control ml-5 mx-2" name="totalCobrar" id="totalCobrar"
                                            placeholder="" readonly>
                                    </div>


                                </div>
                            </div>
                        </div>

                        <div class="card mt-2">

                            <div class="card-body col-md-12">
                                <div class="col-md-12" style="margin:0 auto">
                                    <form class="row" action="empresa/add" method="post">
                                        <div class="col-6">
                                            <input type="hidden" class="form-control" name="id_cliente" id="id_cliente"
                                                placeholder="">
                                            <label for="totalCobrar" class="form-label text-black">Cliente</label>
                                            <input type="text" class="form-control" name="nombre_cliente"
                                                id="nombre_cliente" placeholder="">
                                        </div>

                                        <div class="col-md-3">
                                            <label for="totalCobrar" class="form-label text-black">RNC</label>
                                            <input type="text" class="form-control" name="rnc_cliente" id="rnc_cliente"
                                                placeholder="0000000">
                                        </div>

                                        <div class="col-md-3">
                                            <label for="celular_cliente" class="form-label text-black"><i
                                                    class="fa fa-whatsapp" aria-hidden="true"></i>Whatsapp</label>
                                            <input type="text" class="form-control" name="celular_cliente"
                                                id="celular_cliente" maxlength="15"
                                                onkeypress="handleMask(event, '999-999-9999')" size=13
                                                placeholder="Aquí se ve el numero de Whatsapp">
                                        </div>

                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mt-4">
                        <div class="card">
                            <div class="card-header">
                                <h5>FACTURACIÓN - <strong>CAJA: <%= caja.nombre %></strong></h5>
                            </div>
                            <div class="card-body col-md-12">
                                <div class="col-md-12" style="margin:0 auto">

                                    <form class="row g-3" action="ejecutivo/add" method="post">


                                        <div class="col-md-12">
                                            <button class="btn btn-lg btn-primary col-md-12" id="btnCuadreDeCaja"
                                                type="button">Cuadre de
                                                caja</button>
                                        </div>

                                        <div class="col-md-6">
                                            <button class="btn btn-lg btn-primary col-md-12"
                                                type="button">Pedidos</button>
                                        </div>
                                        <div class="col-md-6">
                                            <button class="btn btn-lg btn-primary col-md-12" id="btnNuevo"
                                                type="button">Nuevo</button>
                                        </div>
                                        <div class="col-md-12">
                                            <button class="btn btn-lg btn-primary col-md-12" id="btnFraccionarFactura"
                                                type="button">Fraccionar</button>
                                        </div>

                                        <div class="col-md-6">
                                            <input type="hidden" class="form-control" id="id_mesa" value="0">
                                            <input type="text" class="form-control mt-1 py-2" name="mesa" id="mesa"
                                                maxlength="15" placeholder="Mesa" value="Caja">
                                        </div>
                                        <div class="col-md-6">
                                            <button class="btn btn-lg btn-primary col-md-12" id="btnMesa"
                                                type="button">Mesa</button>
                                        </div>

                                        <div class="col-md-12">
                                            <input type="hidden" class="form-control" id="id_camarero" value="0">
                                            <input type="text" class="form-control" name="camarero" id="camarero"
                                                style='font-size:18px;color:rgba(75, 5, 241, 0.732)'
                                                placeholder="Nombre del camarero">
                                        </div>


                                        <div class="col-md-12">
                                            <button class="btn btn-lg btn-primary col-md-12" name="btnMovimientoEnCaja"
                                                id="btnMovimientoEnCaja" type="button">Movimiento en Caja</button>
                                        </div>

                                        <div class="col-md-12">
                                            <button class="btn btn-lg btn-primary col-md-12" id="btnFactura"
                                                type="button">Facturas</button>
                                        </div>

                                        <div class="col-md-12">
                                            <button class="btn btn-lg btn-primary col-md-12" id="btnImprimeCobra"
                                                type="button">Imprime y
                                                cobra</button>
                                        </div>

                                        <div class="col-md-12">
                                            <button class="btn btn-lg btn-primary col-md-12" id="btnCliente"
                                                type="button">Clientes</button>
                                        </div>

                                        <div class="col-md-12">
                                            <input type="hidden" class="form-control" id="codncf" value="2">
                                            <input type="text" class="form-control" name="comprobante" id="comprobante"
                                                maxlength="15" placeholder="Seleccione comprobante"
                                                value="Factura de Consumo (B02)" readonly>
                                        </div>


                                        <div class="col-md-12">
                                            <button class="btn btn-lg btn-primary col-md-12" style='color: white'
                                                name="btnBuscarProducto" id="btnBuscarProducto"
                                                type="button">Productos</button>
                                        </div>

                                        <div class="col-md-12">
                                            <input type="text" class="form-control" name="buscarProducto"
                                                id="buscarProducto" style='font-size:18px;color:rgba(75, 5, 241, 0.732)'
                                                placeholder="Código del Producto">
                                        </div>



                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalBuscarProducto" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered anchotabla" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Lista de producto</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="input-group mb-3">
                        <input type="hidden" class="form-control" id="id_producto_componente">
                        <input type="text" class="form-control" placeholder="Buscar producto: Codigo Ó Descripción"
                            id="buscarProductoP" aria-label="Buscar componente" aria-describedby="btnBuscar">
                    </div>
                    <table class="table table-bordered table-hover">
                        <thead class="bg-dark text-white">
                            <tr>
                                <th>No.</th>
                                <th>CÓDIGO</th>
                                <th>DESCRIPCIÓN</th>
                                <th>REFERENCIA</th>
                                <th>MARCA</th>
                                <th>CATEGORIA</th>
                                <th>CLASE</th>
                                <th>EXISTENCIA</th>
                                <th>CANTIDAD</th>
                                <th>UNIDAD</th>
                                <th>ACCIÓN</th>
                            </tr>
                        </thead>
                        <tbody id="tabla_productos">
                            <!-- Aquí se cargarán los resultados de la búsqueda -->
                        </tbody>
                    </table>
                    <script>
                        //           function componenteList(producto) { // el id que llega es el id del departamento

                        // $.get(`/producto/componentes/${producto}`, function (data) {
                        //     console.log(data)
                        //     var elementTabla_empleado = document.getElementById("tabla_pedido_list");
                        //     if(data=='Este producto no contiene componentes'){
                        //       document.getElementById("precio_costoc").value ='';
                        //       elementTabla_empleado.innerHTML = "<tr class='text-center'><td colspan='9'>"+data+"</td></tr>";
                        //     } else{
                        //     var html = "";
                        //     let k = 1;
                        //     let precio = 0;
                        //     for(var i =0;i < data.length;i++){ 
                        //           //`id_producto`, `codigo`, `codigo_barra`, `descripcion`, `referencia`, `factor_conversion`, `existencia`, `precio_compra`, `precio_venta`, `itbis`, `descuento`, `margen_ganancia`, `cantidad_minima`, `cantidad_maxima`, `ubicacion`, `color`, `id_estado`, `idmarca`, `idcategoria`
                        //           html +="<tr>";
                        //             //`id_script`, `titulo`, `contenido`, `fecha_creacion`, `id_tipo_producto`, `id_estado`
                        //             html +="<td>"+ k +"</td>";
                        //           html +=`<td>`+ data[i].codigo +"</td>";
                        //           // html +="<td>"+ data[i].empresa +"</td>";
                        //           html +="<td>"+ data[i].descripcion +"</td>";
                        //           html +="<td>"+ data[i].referencia +"</td>";
                        //           html +="<td>"+ data[i].existencia +"</td>";
                        //           html +="<td>"+ data[i].cantidad +"</td>";
                        //           html +="<td>"+ data[i].precio_compra +"</td>";
                        //           html +="<td>"+(data[i].precio_compra * data[i].cantidad) +"</td>";
                        //           html +=`<td class='text-center' onclick='componenteElimina(${data[i].id_producto})' style='color:red;'>`+ "<i class='fas fa-trash'></i>" +"</td>";
                        //           html +="</tr>";  

                        //           k++;  
                        //           precio += (data[i].precio_compra * data[i].cantidad)
                        //           }
                        //           document.getElementById("precio_costoc").value = precio;

                        //     elementTabla_empleado.innerHTML = html;
                        //     document.getElementById("registrostotalesc").innerText = data.length;
                        //   }
                        //     // cargaPaginacion(data[data.length-1].registros[0].total,inicio)
                        // });

                        // }
                        function productosList(valor, inicio) { // el id que llega es el id del departamento

                            $.get(`/facturacion/filtro/${valor}/${inicio}`, async function (data) {
                                // console.log(data[data.length-1].registros)
                                // document.getElementById('registrostotales').innerText = data[data.length-1].registros[0].total;
                                var html = "";
                                let k = 1;
                                for (var i = 0; i < data.length - 1; i++) {
                                    // `id_producto`, `codigo`, `codigo_barra`, `descripcion`, `referencia`, `factor_conversion`, `existencia`, `precio_compra`, `precio_venta`, `itbis`, `descuento`, `margen_ganancia`, `cantidad_minima`, `cantidad_maxima`, `ubicacion`, `color`, `id_estado`, `idmarca`, `idcategoria`
                                    html += "<tr>";
                                    //`id_script`, `titulo`, `contenido`, `fecha_creacion`, `id_tipo_producto`, `id_estado`
                                    html += "<td>" + k + "</td>";
                                    html += `<td>` + data[i].codigo + "</td>";
                                    // html +="<td>"+ data[i].empresa +"</td>";
                                    html += "<td>" + data[i].descripcion + "</td>";
                                    html += "<td>" + data[i].referencia + "</td>";
                                    html += "<td>" + data[i].marca + "</td>";
                                    html += "<td>" + data[i].categoria + "</td>";
                                    html += "<td>" + data[i].clase + "</td>";
                                    html += "<td>" + data[i].existencia + "</td>";

                                    html += `<td>` + `<input type="number" inputmode="decimal" name='cantidadProducto' class='cantidadProducto' min="1" style="text-align: right; padding-right: 5px; width: 100px" pattern="[0-9,.]*" title="Solo se permiten números, puntos y comas" />` + "</td>";

                                    html += "<td>";
                                    html += "<select name='units'>";

                                    const unidades = await $.get(`/producto/unidad_producto/${data[i].id_producto}`);

                                    for (let j = 0; j < unidades.length; j++) {
                                        html += "<option value=" + unidades[j].id_unidad + ">" + unidades[j].unidad + "</option>";
                                    }

                                    html += "</select>";
                                    html += "</td>";
                                    html += `<td><button type="button" onclick='productoAdd("${data[i].id_producto}",${i}, this)' style="display: none;" class="btn btn-primary agregarTexto">Agregar</button></td>`

                                    html += "</tr>";

                                    k++;
                                }

                                var elementTabla_empleado = document.getElementById("tabla_productos");
                                elementTabla_empleado.innerHTML = html;
                                ///////////////////////////////////////////////////////////////////////////
                                var table = document.getElementById("tabla_productos");
                                var inputs = table.querySelectorAll(".cantidadProducto");
                                var agregarTextos = table.querySelectorAll(".agregarTexto");

                                for (var i = 0; i < inputs.length; i++) {
                                    inputs[i].addEventListener("input", createInputHandler(i));
                                    inputs[i].addEventListener("click", function () {
                                        var previousInput = document.querySelector(".cantidadProducto.active");
                                        var previousBoton = document.querySelector(".agregarBoton.active");

                                        if (previousInput !== null && previousInput !== this) {
                                            previousInput.value = "";
                                            previousInput.classList.remove("active");
                                        }

                                        for (var i = 0; i < agregarTextos.length; i++) {
                                            var boton = agregarTextos[i];
                                            if (boton.style.display === "inline") {
                                                boton.style.display = "none";
                                            }
                                        }
                                        this.classList.add("active");
                                    });
                                }

                                // Suponiendo que tienes un arreglo llamado 'data' con la información de los productos

                                function createInputHandler(index) {
                                    return function (event) {
                                        var currentInput = inputs[index];
                                        var currentBoton = agregarTextos[index];

                                        for (var i = 0; i < agregarTextos.length; i++) {
                                            var boton = agregarTextos[i];

                                            if (i !== index) {
                                                if (boton.style.display === "inline") {
                                                    boton.style.display = "none";
                                                }
                                            }
                                        }

                                        // if (event.key === "Enter" && currentInput.value !== "") {
                                        //     productoAdd(data[index].codigo, index);
                                        //     currentInput.value = "";
                                        // }

                                        if (currentInput.value !== "") {
                                            currentBoton.style.display = "inline";
                                        } else {
                                            currentBoton.style.display = "none";
                                        }
                                    };
                                }

                                // Asignar event listeners a los inputs
                                for (var i = 0; i < inputs.length; i++) {
                                    inputs[i].addEventListener("input", createInputHandler(i));
                                    inputs[i].addEventListener("keypress", createInputHandler(i));
                                    inputs[i].addEventListener("keydown", createInputHandler(i));
                                    inputs[i].addEventListener("click", function () {
                                        // Resto del código
                                    });
                                }




                                // cargaPaginacion(data[data.length-1].registros[0].total,inicio)
                            });

                        }

                        productosList("aaaaaaaaaaaa", '1')
                        document.getElementById("buscarProductoP").onkeyup = function (e) {
                            let valor = e.target.value;
                            if (valor == "") {
                                valor = "aaaaaaaaaaaa"
                            }
                            // console.log(valor)
                            productosList(valor, '1')
                            // document.getElementById("empresa").value = this.value;
                        };

                        async function productoAdd(id_producto, i, button) {
                            const cantidad = document.querySelector(`#tabla_productos tr:nth-child(${i + 1}) .cantidadProducto`).value;

                            let selectElement = button.parentNode.previousElementSibling.querySelector('select');
                            const id_unidad = selectElement.value;
                            // console.log(id_unidad)
                            let almacen = "<%= caja.id_almacen %>";
                            // let id_cliente = 1;
                            let suma = 0;

                            await $.get(`/facturacion/buscarCodigoUnidadProducto/${id_unidad}/${id_producto}`, async function (data) {
                                let codigo = data[0].codigo_barras;
                                // console.log('Muestro el codigo ===> ',codigo)
                                // alert(document.getElementById('id_camarero').value)
                                // alert(caja)
                                // alert(`el idCliente ${id_cliente} y el numero de pedido ${N_pedido}`)
                                await buscarProctoPorCodigo(codigo, almacen, cantidad, id_unidad, id_cliente, suma, caja);
                            });


                            document.getElementById('buscarProducto').value = '';
                            $('#modalBuscarProducto').modal('hide');
                            // buscarCodigoProducto(codigo,cantidad);        
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA INGRSAR PRODUCTOS////////////////////////////////////////////////////// -->


    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalBuscarComprobante" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered " role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Lista de Comprobantes</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Buscar comprobante" id="buscarNCF"
                            aria-label="Buscar comprobante" aria-describedby="btnBuscar">
                    </div>
                    <table class="table table-bordered table-hover mt-2">
                        <thead class="bg-dark text-white">
                            <tr>
                                <th>ID</th>
                                <th>DESCRIPCIÓN</th>
                            </tr>
                        </thead>
                        <tbody id="tabla_ncf">

                        </tbody>
                    </table>
                    <script>

                        async function seleccionarComprobante(codncf, descripcion) {
                            // alert(descripcion)
                            //comprobarDisponibilidadDeSecuencia(codncf)
                            $.get(`/ncf/comprobarDisponibilidadDeSecuencia/${codncf}`, function (data) {
                                // console.log(data.total)
                                if (data.total > 0) {
                                    if (data.total == 1) {
                                        // alert(`Solo queda ${data.total} ${descripcion}`)/

                                        notificacion('top-end', 'warning', `Solo queda ${data.total} ${descripcion}`, true)
                                    } else if (data.total <= 10) {
                                        // alert(`Solo quedan ${data.total} ${descripcion}`)
                                        notificacion('top-end', 'warning', `Solo quedan ${data.total} ${descripcion}`, true)
                                    }
                                    document.getElementById('codncf').value = codncf;
                                    document.getElementById('comprobante').value = descripcion;
                                    document.getElementById("buscarNCF").value = "";
                                } else {
                                    // alert(`No quedan ${descripcion}`);
                                    notificacion('top-end', 'error', `No quedan ${descripcion}`, true)
                                    document.getElementById('codncf').value = '';
                                    document.getElementById('comprobante').value = '';
                                    document.getElementById("buscarNCF").value = "";
                                }
                            });


                            $('#modalBuscarComprobante').modal('hide');
                        }
                        function ncfList(valor, inicio) { // el id que llega es el id del departamento
                            //'UPDATE `jr_ncf` SET `descncf`=?,`tipncf`=?,`parfij`=?,`estado`=? WHERE  `codncf`=?';
                            $.get(`/ncf/filtro/${valor}/${inicio}`, function (data) {
                                // console.log(data[data.length-1].registros)
                                // document.getElementById('registrostotales').innerText = data[data.length-1].registros[0].total;
                                var html = "";
                                let k = 1;
                                for (var i = 0; i < data.length - 1; i++) {
                                    let comprobante = `${data[i].descncf} (${data[i].tipncf}${data[i].parfij})`;
                                    html += `<tr onclick='seleccionarComprobante("${data[i].codncf}","${comprobante}")'>`;
                                    html += "<td>" + data[i].codncf + "</td>";
                                    html += `<td>` + comprobante + "</td>";
                                    html += "</tr>";

                                    k++;
                                }

                                var elementTabla_empleado = document.getElementById("tabla_ncf");
                                elementTabla_empleado.innerHTML = html;
                                // cargaPaginacion(data[data.length - 1].registros[0].total, inicio)
                            });

                        }
                        ncfList("aaaaaaaaaaaa", '1');

                        // productosList("aaaaaaaaaaaa", '1')
                        document.getElementById("buscarNCF").onkeyup = function (e) {
                            let valor = e.target.value;
                            if (valor == "") {
                                valor = "aaaaaaaaaaaa"
                            }
                            // console.log(valor)
                            ncfList(valor, '1')
                            // document.getElementById("empresa").value = this.value;
                        };

                        function productoAddX(codigo, i) {
                            const cantidad = document.querySelector(`#tabla_productos tr:nth-child(${i + 1}) .cantidadProducto`).value;
                            let almacen = "<%= caja.id_almacen %>";
                            // let id_cliente = 1;
                            let suma = 0;
                            // console.log('por modal')
                            buscarProctoPorCodigo(codigo, almacen, cantidad, id_cliente, suma, caja);
                            document.getElementById('buscarProducto').value = '';
                            $('#modalBuscarProducto').modal('hide');
                            // buscarCodigoProducto(codigo,cantidad);        
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA BUSCAR COMPROBANTE////////////////////////////////////////////////////// -->


    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalFraccionarFactura" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered anchotabla" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Fraccionar Factura</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="input-group mb-3">

                    </div>
                    <div class="modal-header bg-secondary">
                        <h5 class="modal-title text-white" id="exampleModalCenterTitle">Factura Actual</h5>
                    </div>
                    <table class="table table-bordered table-hover detalleDeFacturacion">
                        <thead class="bg-dark text-white ">
                            <tr>
                                <th class="d-none">ID</th>
                                <th>CÓDIGO</th>
                                <th>DESCRIPCIÓN</th>
                                <th>PRECIO</th>
                                <th>CANTIDAD</th>
                                <th>UNIDAD</th>
                                <th>DESCUENTO</th>
                                <th>ITBIS</th>
                                <th>SUBTOTAL</th>
                                <th>IMPORTE</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="facturaAFraccionar">

                        </tbody>
                    </table>


                    <div class="input-group mb-3">

                    </div>
                    <div class="modal-header bg-secondary">
                        <h5 class="modal-title text-white" id="exampleModalCenterTitle">Fraccion</h5>
                    </div>
                    <table class="table table-bordered table-hover detalleDeFacturacion">
                        <thead class="bg-dark text-white ">
                            <tr>
                                <th class="d-none">ID</th>
                                <th>CÓDIGO</th>
                                <th>DESCRIPCIÓN</th>
                                <th>PRECIO</th>
                                <th>CANTIDAD</th>
                                <th>UNIDAD</th>
                                <th>DESCUENTO</th>
                                <th>ITBIS</th>
                                <th>SUBTOTAL</th>
                                <th>IMPORTE</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="fraccion">

                        </tbody>
                    </table>
                    <div class="card mt-2">

                        <div class="card-body col-md-12">
                            <div class="col-md-12" style="margin:0 auto">
                                <form class="row" action="empresa/add" method="post">
                                    <div class="col-6">
                                        <input type="hidden" class="form-control" name="id_clienteFraccion"
                                            id="id_clienteFraccion" placeholder="">
                                        <label for="totalCobrar" class="form-label text-black">Cliente</label>
                                        <input type="text" class="form-control" name="nombre_clienteFraccion"
                                            id="nombre_clienteFraccion" placeholder="">
                                    </div>

                                    <div class="col-md-3">
                                        <label for="totalCobrar" class="form-label text-black">RNC</label>
                                        <input type="number" class="form-control" name="rnc_clienteFraccion"
                                            id="rnc_clienteFraccion" placeholder="0000000">
                                    </div>

                                    <div class="col-md-3">
                                        <label for="celular_clienteFraccion" class="form-label text-black"><i
                                                class="fa fa-whatsapp" aria-hidden="true"></i>Whatsapp</label>
                                        <input type="text" class="form-control" name="celular_clienteFraccion"
                                            id="celular_clienteFraccion" maxlength="15"
                                            onkeypress="handleMask(event, '999-999-9999')" size=13
                                            placeholder="Aquí se ve el numero de Whatsapp">
                                    </div>

                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 text-center py-4">
                        <button type="button" id="btnClienteFraccion" class="btn btn-warning col-4">SELECCIONAR
                            CLIENTE</button>
                        <button type="button" onclick="separarFactura()" class="btn btn-primary col-4">SEPARAR</button>
                    </div>
                    <script>

                        // async function seleccionarCliente(cliente, nombre, rnc, celular) {
                        //     // Obtener la referencia al tbody de la tabla
                        //     var tbody = document.getElementById('detalleFacturacion');

                        //     // Verificar si el tbody de la tabla contiene filas
                        //     if (tbody.rows.length > 0) {
                        //         if (id_cliente != cliente) {
                        //             let del = false;
                        //             Swal.fire({
                        //                 title: '¿Deseas asignar este cliente a la factura actual?',
                        //                 showDenyButton: true,
                        //                 // showCancelButton: true,
                        //                 confirmButtonText: 'Si',
                        //                 denyButtonText: `No`,
                        //             }).then((result) => {
                        //                 /* Read more about isConfirmed, isDenied below */
                        //                 if (result.isConfirmed) {
                        //                     let url = `/facturacion/cambiarCliente`;
                        //                     const data = {
                        //                         id_cliente: id_cliente,
                        //                         id_cliente_nuevo: cliente,
                        //                     };

                        //                     fetch(url, {
                        //                         method: 'POST',
                        //                         headers: {
                        //                             'Content-Type': 'application/json',
                        //                         },
                        //                         body: JSON.stringify(data),
                        //                     })
                        //                         .then(response => response.json())
                        //                         .then(data => {
                        //                             // document.getElementById('id_cliente').value = data;
                        //                             // document.getElementById('nombre_cliente').value = nombres + " " + apellidos;
                        //                             // document.getElementById('rnc_cliente').value = rnc ? rnc : cedula;
                        //                             // document.getElementById('celular_cliente').value = celular;
                        //                             // Aquí puedes manejar la respuesta recibida del servidor
                        //                             // console.log(data);
                        //                             // $('#modalRegistrarCliente').modal('hide');
                        //                             if (data) {
                        //                                 buscarVentaTemporal();
                        //                             }
                        //                         })
                        //                         .catch(error => {
                        //                             // Aquí puedes manejar cualquier error que ocurra durante la solicitud
                        //                             console.error(error);
                        //                         });
                        //                     id_cliente = cliente;
                        //                     // Swal.fire('Saved!', '', 'success')
                        //                 } else if (result.isDenied) {
                        //                     // alert(`"busco cliente" ${id_cliente} Y  ${cliente}`)
                        //                     id_cliente = cliente;
                        //                     buscarVentaTemporal();
                        //                     // Swal.fire('Changes are not saved', '', 'info')
                        //                 }
                        //             });
                        //         }
                        //     } else {
                        //         id_cliente = cliente;
                        //         buscarVentaTemporal();
                        //     }

                        //     // alert(descripcion)("${data[i].nombre_completo}","${data[i].rnc}","${data[i].cedula}")
                        //     document.getElementById('id_cliente').value = cliente;
                        //     document.getElementById('nombre_cliente').value = nombre;
                        //     document.getElementById('rnc_cliente').value = rnc || '';
                        //     document.getElementById("celular_cliente").value = celular || '';

                        //     document.getElementById("buscarCliente").value = '';
                        //     $('#modalBuscarCliente').modal('hide');
                        // }

                        // function clienteList(valor, inicio) { // el id que llega es el id del departamento

                        //     const jsonAccesos = '<%- JSON.stringify(accesos) %>';
                        //     var accesos = JSON.parse(jsonAccesos);
                        //     //////
                        //     let cartera = 0;
                        //     let sucursal = 0;
                        //     let elestado_cliente = 2;
                        //     //  let estado = 2;:
                        //     $.get("/cliente/filtro_list/" + sucursal + '/' + cartera + '/' + elestado_cliente + '/' + inicio + '/' + valor, function (data) {
                        //         // console.log('no VEO LA DATA ========>',data[data.length-1].registros[0].total)
                        //         var html = "";
                        //         let k = 1;
                        //         if (data) {
                        //             for (var i = 0; i < data.length - 1; i++) {

                        //                 //console.log(data.length);

                        //                 html += `<tr onclick='seleccionarCliente("${data[i].id_cliente}","${data[i].nombre_completo}","${data[i].rnc || ''}","${data[i].celular || ''}")'>`;
                        //                 html += "<td>" + k + "</td>";
                        //                 html += "<td>" + data[i].cedula + " / " + data[i].pasaporte + "</td>";
                        //                 html += "<td>" + data[i].nombre_completo + "</td>";
                        //                 html += "<td>" + (data[i].apodo || '') + "</td>";
                        //                 html += "<td>" + (data[i].rnc || '') + "</td>";
                        //                 html += "<td>" + (data[i].celular || '') + "</td>";
                        //                 html += "<td>" + (data[i].correo || '') + "</td>";
                        //                 html += "</tr>";

                        //                 k++;
                        //             }
                        //         }
                        //         document.getElementById("tabla_cliente").innerHTML = html;
                        //         // cargaPaginacion(data[data.length-1].registros[0].total,inicio)
                        //     });

                        // }
                        // clienteList("aaaaaaaaaaaa", '1');

                        // productosList("aaaaaaaaaaaa", '1')
                        // document.getElementById("buscarCliente").onkeyup = function (e) {
                        //     let valor = e.target.value;
                        //     if (valor == "") {
                        //         valor = "aaaaaaaaaaaa"
                        //     }
                        //     // console.log(valor)
                        //     clienteList(valor, '1')
                        //     // document.getElementById("empresa").value = this.value;
                        // };

                        // function productoAddX(codigo, i) {
                        //     const cantidad = document.querySelector(`#tabla_productos tr:nth-child(${i + 1}) .cantidadProducto`).value;
                        //     let almacen = "<%= caja.id_almacen %>";
                        //     // let id_cliente = 1;
                        //     let suma = 0;
                        //     // console.log('por modal')
                        //     buscarProctoPorCodigo(codigo, almacen, cantidad, id_cliente, suma);
                        //     document.getElementById('buscarProducto').value = '';
                        //     $('#modalBuscarProducto').modal('hide');
                        //     // buscarCodigoProducto(codigo,cantidad);
                        // }
                    </script>

                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL FRACCIONAR FACTURA ////////////////////////////////////////////////////// -->



    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalMesa" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered ancho" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Lista de Mesas</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header text-black">
                                    <h5>LISTA DE MESAS</h5>
                                </div>
                            </div>
                        </div>

                        <div class="col-12 mt-3 d-flex text-right">
                            <label for="buscarMesa" class="form-label text-black">Buscar:</label>
                            <input type="text" class="form-control ml-5 mx-2" name="buscarMesa" id="buscarMesa"
                                placeholder="Mesa">
                            <% if(accesos.modulo_negocio) {%>
                                <a class="btn btn-primary"><i class='fas fa-plus mx-3'
                                        style='font-size:18px;color:white'> Crear Mesa</i></a>
                                <% } %>
                        </div>

                        <div class="btn-group  mt-4 fs-6 d-none" role="group" aria-label="bs-component">
                            <% if(accesos.modulo_negocio) {%>
                                <div class="form-check mx-4">
                                    <input class="form-check-input" type="radio" name="optionsRadios" value=""
                                        id="todasLasMesas" checked>
                                    <label class="form-check-label" for="todasLasMesas">
                                        TODAS
                                    </label>
                                </div>
                                <% } %>
                                    <% if(accesos.modulo_negocio) {%>
                                        <div class="form-check mx-4">
                                            <input class="form-check-input" type="radio" name="optionsRadios" value=""
                                                id="abierta">
                                            <label class="form-check-label" for="abierta">
                                                ABIERTAS
                                            </label>
                                        </div>
                                        <% } %>
                                            <% if(accesos.modulo_negocio) {%>
                                                <div class="form-check mx-4">
                                                    <input class="form-check-input" type="radio" name="optionsRadios"
                                                        value="" id="cerrada">
                                                    <label class="form-check-label" for="cerrada">
                                                        CERRADAS
                                                    </label>
                                                </div>
                                                <% } %>

                        </div>


                        <div class="col-12 mt-3 d-flex text-right">
                            <table class="table table-bordered table-hover">
                                <thead class="bg-dark text-white">
                                    <tr>
                                        <th>NO.</th>
                                        <th>MESA</th>
                                        <th>CLIENTE</th>
                                        <th>ESTADO</th>
                                        <th>ATENDIDA POR</th>
                                    </tr>
                                </thead>
                                <tbody id="tabla_mesa">

                                </tbody>
                            </table>
                        </div>
                    </div>
                    <script>
                        // ,"${data[i].id_cliente || ''}","${data[i].cliente || ''}","${data[i].rnc || ''}","${data[i].celular || ''}"
                        async function seleccionarCamarero(id_mesa, mesa, id_camarero, camarero, id_cliente, cliente, rnc, celular, numero_pedido) {
                            camareroList(id_mesa, mesa, id_camarero, camarero, id_cliente, cliente, rnc, celular, numero_pedido);
                            $('#modalCamarero').modal('show');
                        }

                        function mesaList(valor, inicio) { // el id que llega es el id del departamento

                            const jsonAccesos = '<%- JSON.stringify(accesos) %>';
                            var accesos = JSON.parse(jsonAccesos);
                            //////
                            let cartera = 0;
                            let sucursal = 0;
                            let elestado_cliente = 2;
                            //  let estado = 2;:
                            $.get("/facturacion/consultaMesa", function (data) {
                                // console.log('no VEO LA DATA ========>',data[data.length-1].registros[0].total)
                                var html = "";
                                let k = 1;
                                if (data) {
                                    for (var i = 0; i < data.length; i++) {

                                        console.log(data);

                                        html += `<tr>`;
                                        html += "<td>" + k + "</td>";
                                        html += "<td>" + data[i].mesa + "</td>";
                                        html += "<td>" + (data[i].cliente || '') + "</td>";
                                        html += "<td>" + (data[i].estado || '') + "</td>";
                                        html += "<td>" + (data[i].nombre_camarero || '') + "</td>";
                                        html += `<td><button type="button" onclick='asignarMesa("${data[i].id_mesa}","${data[i].mesa}","${data[i].id_camarero}","${data[i].nombre_camarero || ''}","${data[i].id_cliente || ''}","${data[i].cliente || ''}","${data[i].rnc || ''}","${data[i].celular || ''}","${data[i].numero_pedido || ''}","${data[i].estado || ''}")' class="btn btn-success">
                                                VER MESA
                                                </button>
                                                <button type="button" onclick='seleccionarCamarero("${data[i].id_mesa}","${data[i].mesa}","${data[i].id_camarero}","${data[i].nombre_camarero || ''}","${data[i].id_cliente || ''}","${data[i].cliente || ''}","${data[i].rnc || ''}","${data[i].celular || ''}","${data[i].numero_pedido || ''}")' class="btn btn-primary">
                                                ASIGNAR CAMARERO
                                                </button></td>`
                                        html += `</tr>`;


                                        k++;
                                    }
                                }
                                document.getElementById("tabla_mesa").innerHTML = html;
                                // cargaPaginacion(data[data.length-1].registros[0].total,inicio)     
                            });

                        }



                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA INGRSAR PRODUCTOS////////////////////////////////////////////////////// -->


    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalCamarero" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered ancho" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Lista de Camareros</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header text-black">
                                    <h5>LISTA DE CAMAREROS</h5>
                                </div>
                            </div>
                        </div>

                        <div class="col-12 mt-5 d-flex text-right">
                            <label for="buscarCamarero" class="form-label text-black">Buscar:</label>
                            <input type="text" class="form-control ml-5 mx-2" name="buscarCamarero" id="buscarCamarero"
                                placeholder="Nombre, codigo">

                        </div>

                        <div class="col-12 mt-3 d-flex text-right">
                            <table class="table table-bordered table-hover">
                                <thead class="bg-dark text-white">
                                    <tr>
                                        <th>NO.</th>
                                        <th>CODIGO</th>
                                        <th>NOMBRE</th>
                                    </tr>
                                </thead>
                                <tbody id="tabla_camarero">

                                </tbody>
                            </table>
                        </div>
                    </div>
                    <script>

                        async function asignarMesa(id_mesa, lamesa, id_camarero, camarero, idDelCliente, cliente, rnc, celular, numeroDelPedido, estado) {
                            // alert(id_mesa)
                            pedidoOriginal = numeroDelPedido;
                            if (estado == "abierta") {
                                fraccionarMesaCliente = 1;
                                document.getElementById("id_mesa").value = id_mesa;
                                document.getElementById("mesa").value = lamesa;
                                mesa = id_mesa;
                                N_pedido = numeroDelPedido;
                                // alert(id_camarero)celular_cliente
                                id_cliente = idDelCliente;
                                document.getElementById('id_cliente').value = idDelCliente;
                                document.getElementById('nombre_cliente').value = cliente;
                                document.getElementById('rnc_cliente').value = rnc;
                                document.getElementById("celular_cliente").value = celular;

                                document.getElementById("id_camarero").value = id_camarero;
                                document.getElementById("camarero").value = camarero;
                                buscarVentaTemporal('', mesa, idDelCliente)
                                $('#modalCamarero').modal('hide');
                                $('#modalMesa').modal('hide');
                            } else {
                                alert("La mesa esta cerrada!");
                            }
                        }

                        function camareroList(id_mesa, mesa, id_camarero, camarero, id_cliente, cliente, rnc, celular, numero_pedido) { // el id que llega es el id del departamento

                            const jsonAccesos = '<%- JSON.stringify(accesos) %>';
                            var accesos = JSON.parse(jsonAccesos);
                            //////
                            let cartera = 0;
                            let sucursal = 0;
                            let elestado_cliente = 2;
                            //  let estado = 2;:
                            $.get("/facturacion/consultaCamarero", function (data) {
                                console.log('no VEO LA DATA ========>', data)
                                var html = "";
                                let k = 1;
                                if (data) {
                                    for (var i = 0; i < data.length; i++) {

                                        console.log(data);

                                        html += `<tr onclick='asignarMesa("${id_mesa}","${mesa}","${data[i].id_empleado}","${data[i].camarero || ''}","${id_cliente}","${cliente}","${rnc}","${celular}","${numero_pedido}","abierta")'>`;
                                        html += "<td>" + k + "</td>";
                                        html += "<td>" + data[i].codigo + "</td>";
                                        html += "<td>" + (data[i].camarero || '') + "</td>";
                                        html += "<td>" + (data[i].puesto || '') + "</td>";
                                        html += `</tr>`;


                                        k++;
                                    }
                                }
                                document.getElementById("tabla_camarero").innerHTML = html;
                                // cargaPaginacion(data[data.length-1].registros[0].total,inicio)     
                            });

                        }

                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA INGRSAR PRODUCTOS////////////////////////////////////////////////////// -->
    <!-- ///////////////////////FINAL DEL MODAL PARA INGRSAR PRODUCTOS////////////////////////////////////////////////////// -->


    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalBuscarCliente" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered anchotabla" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Lista de Clientes</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Buscar cliente" id="buscarCliente"
                            aria-label="Buscar cliente" aria-describedby="btnBuscar">
                        <button id="btnNuevoCliente" class="btn btn-warning col-md-4" type="button">Nuevo
                            cliente</button>
                    </div>
                    <table class="table table-bordered table-hover mt-2">
                        <thead class="bg-dark text-white">
                            <tr>
                                <th>No.</th>
                                <th>CÉDULA / PASAPORTE</th>
                                <th>NOMBRE</th>
                                <th>APODO</th>
                                <th>RNC</th>
                                <th>CELULAR</th>
                                <th>CORREO</th>
                            </tr>
                        </thead>
                        <tbody id="tabla_cliente">

                        </tbody>
                    </table>
                    <script>
                        async function clienteConFacturaTemporalF(cliente) {
                            try {
                                let url = `/facturacion/clienteConFacturaTemporal`;
                                const data = {
                                    id_cliente: cliente
                                };

                                const response = await fetch(url, {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(data),
                                });

                                const dataJson = await response.json();
                                // console.log("Data cliente venta consulta", dataJson[0].existe_cliente);
                                return dataJson;
                            } catch (error) {
                                // Aquí puedes manejar cualquier error que ocurra durante la solicitud
                                console.error(error);
                                throw error; // Lanza el error para que sea manejado por la llamada a la función
                            }
                        }
                        // html += `<tr onclick='seleccionarClienteListo("","${cliente}","${nombre}","${rnc}","${celular || ''}","${data[i].numero_pedido || ''}","${data[i].id_mesa || ''}","${data[i].mesa || ''}")'>`;
                        async function seleccionarClienteListo(pedido, cliente, nombre, rnc, celular, numeroPedido, id_mesa, veomesa) {
                            pedidoFraccionCliente = numeroPedido;
                            $('#modalPedido').modal('hide');
                            // var clienteConFacturaTemporal = await clienteConFacturaTemporalF(cliente);
                            // console.log(clienteConFacturaTemporal)
                            // if(pedido =="nuevoPedido"){
                            var tbody = document.getElementById('detalleFacturacion');
                            if (tbody.rows.length == 0) {
                                // alert("Es mesa nueva")
                            } else
                                if (veomesa == "") {
                                    // alert('ID MESA es nula')

                                    if (fraccionarMesaCliente == 0) {
                                        //     id_mesa = 0;
                                        // mesa = 0;
                                        // document.getElementById('id_mesa').value = 0;
                                        // document.getElementById('id_camarero').value = '0';
                                        // document.getElementById('mesa').value = "Caja";
                                        // document.getElementById('camarero').value = "";
                                    }
                                }
                            if (id_mesa != '') {
                                mesa = id_mesa;
                            }
                            // mesa = document.getElementById("id_mesa").value
                            // alert('ID MESA ' + document.getElementById("id_mesa").value)
                            //     id_mesa = 0;
                            //     mesa = 0;
                            //     id_camarero = 0;
                            //     document.getElementById('id_mesa').value = 0;
                            //     document.getElementById('id_camarero').value = '';
                            //     document.getElementById('mesa').value = "Caja";
                            //     document.getElementById('camarero').value = "";
                            // }
                            // alert("Muestro mi numero de pedido ===>" +numeroPedido)
                            // alert("Muestro mi id mesa ===>" +mesa)
                            //CL
                            let agregarAlPedido = 'no';
                            // $.get(`/facturacion/clienteConFacturaTemporal/${cliente}`, async function (data) {
                            //     if (data) {

                            //         clienteConFacturaTemporal = data;

                            //     }
                            // if (clienteConFacturaTemporal.length >= 1) {
                            //     if (clienteConFacturaTemporal.length == 1) {

                            //         alert(`El cliente tiene una Factura abierta => ` + clienteConFacturaTemporal[0].numero_pedido)
                            //     } else {
                            //         const numerosPedido = clienteConFacturaTemporal.map(result => result.numero_pedido).join(', ');

                            //         // Muestra los números de pedido en una alerta
                            //         alert(`Números de pedido: ${numerosPedido}`);
                            //     }

                            // }
                            // console.log("Data cliente venta temporal ya ",)
                            // });
                            if (fraccionarMesaCliente == 0) {
                                // document.getElementById("id_mesa").value = 0;
                                // document.getElementById("mesa").value = "Caja";
                                // mesa = 0;

                                // document.getElementById("id_camarero").value = 0;
                                // document.getElementById("camarero").value = "";

                                // Obtener la referencia al tbody de la tabla


                                // Verificar si el tbody de la tabla contiene filas
                                // document.getElementById("servicio").checked = false;
                                // alert(tbody.rows.length > 0)
                                if (tbody.rows.length > 0) {
                                    if (id_cliente != cliente) {
                                        let del = false;
                                        Swal.fire({
                                            title: '¿Deseas asignar este cliente a la factura actual?',
                                            showDenyButton: true,
                                            // showCancelButton: true,
                                            confirmButtonText: 'Si',
                                            denyButtonText: `No`,
                                        }).then((result) => {
                                            /* Read more about isConfirmed, isDenied below */
                                            if (result.isConfirmed) {
                                                agregarAlPedido = 'si';
                                                if (cliente == 1) {
                                                    // alert('Vale 1 ek ckuebte')
                                                    numeroPedido = 0;
                                                }
                                                // N_pedido = id_cliente ==1?0:N_pedido;
                                                if (id_cliente == '') {
                                                    id_cliente = 1;
                                                }
                                                // alert(mesa)
                                                let url = `/facturacion/cambiarCliente`;
                                                const data = {
                                                    id_cliente: id_cliente,
                                                    id_cliente_nuevo: cliente,
                                                    caja: caja,
                                                    pedido_abierto: N_pedido,
                                                    pedido_nuevo: numeroPedido,
                                                    lamesa: mesa
                                                };

                                                fetch(url, {
                                                    method: 'POST',
                                                    headers: {
                                                        'Content-Type': 'application/json',
                                                    },
                                                    body: JSON.stringify(data),
                                                })
                                                    .then(response => response.json())
                                                    .then(data => {
                                                        // document.getElementById('id_cliente').value = data;
                                                        // document.getElementById('nombre_cliente').value = nombres + " " + apellidos;
                                                        // document.getElementById('rnc_cliente').value = rnc ? rnc : cedula;
                                                        // document.getElementById('celular_cliente').value = celular;
                                                        // Aquí puedes manejar la respuesta recibida del servidor
                                                        // console.log(data);
                                                        // $('#modalRegistrarCliente').modal('hide');
                                                        N_pedido = numeroPedido;
                                                        if (data) {
                                                            buscarVentaTemporal('', mesa, cliente);
                                                        }
                                                        if (id_mesa > 0) {
                                                            // asignarMesa(id_mesa,veomesa==''?0>veomesa,)
                                                        }
                                                    })
                                                    .catch(error => {
                                                        // Aquí puedes manejar cualquier error que ocurra durante la solicitud
                                                        console.error(error);
                                                    });
                                                id_cliente = cliente;

                                                // Swal.fire('Saved!', '', 'success')
                                            } else if (result.isDenied) {
                                                N_pedido = numeroPedido;
                                                // alert("Numero de pedido = " + N_pedido)
                                                agregarAlPedido = 'no';

                                                // document.getElementById("id_mesa").value = 0;
                                                // document.getElementById("mesa").value = "";
                                                // mesa = id_mesa;
                                                // alert(id_camarero)celular_cliente
                                                // id_cliente = 1;
                                                // document.getElementById('id_cliente').value = 1;

                                                // document.getElementById("id_camarero").value = 0;
                                                // document.getElementById("camarero").value = '';
                                                // alert("Pedido abierto == " + N_pedido)
                                                // N_pedido = clienteConFacturaTemporal[clienteConFacturaTemporal.length - 1].numero_pedido + 1;
                                                // alert(`"busco cliente viejo ===>" ${id_cliente} Y cliente nuevo===> ${cliente}`)
                                                // alert(`"Nuevo pedido ===>" ${N_pedido}`)
                                                id_cliente = cliente;
                                                buscarVentaTemporal('', id_mesa, id_cliente);
                                                // Swal.fire('Changes are not saved', '', 'info')
                                            }
                                        });
                                    } else {
                                        id_cliente = cliente;
                                        N_pedido = numeroPedido;
                                        mesa = id_mesa;
                                        buscarVentaTemporal('', mesa, cliente);
                                    }
                                } else {
                                    N_pedido = numeroPedido;
                                    id_cliente = cliente;
                                    mesa = id_mesa;
                                    buscarVentaTemporal('', mesa, id_cliente);
                                }

                                // alert(descripcion)("${data[i].nombre_completo}","${data[i].rnc}","${data[i].cedula}")
                                document.getElementById('id_cliente').value = cliente;
                                document.getElementById('nombre_cliente').value = nombre;
                                document.getElementById('rnc_cliente').value = rnc || '';
                                document.getElementById("celular_cliente").value = celular || '';

                                document.getElementById("buscarCliente").value = '';
                            } else {

                                document.getElementById('id_clienteFraccion').value = cliente;
                                document.getElementById('nombre_clienteFraccion').value = nombre;
                                document.getElementById('rnc_clienteFraccion').value = rnc || '';
                                document.getElementById("celular_clienteFraccion").value = celular || '';

                                document.getElementById("buscarCliente").value = '';


                            }
                            $('#modalBuscarCliente').modal('hide');
                        }

                        function clienteList(valor, inicio) { // el id que llega es el id del departamento

                            const jsonAccesos = '<%- JSON.stringify(accesos) %>';
                            var accesos = JSON.parse(jsonAccesos);
                            //////
                            let cartera = 0;
                            let sucursal = 0;
                            let elestado_cliente = 2;
                            //  let estado = 2;:
                            $.get("/cliente/filtro_list/" + sucursal + '/' + cartera + '/' + elestado_cliente + '/' + inicio + '/' + valor, function (data) {
                                // console.log('no VEO LA DATA ========>',data[data.length-1].registros[0].total)
                                var html = "";
                                let k = 1;
                                if (data) {
                                    for (var i = 0; i < data.length - 1; i++) {

                                        //console.log(data.length);  

                                        html += `<tr onclick='seleccionarCliente("${data[i].id_cliente}","${data[i].nombre_completo}","${data[i].rnc || ''}","${data[i].celular || ''}")'>`;
                                        html += "<td>" + k + "</td>";
                                        html += "<td>" + data[i].cedula + " / " + data[i].pasaporte + "</td>";
                                        html += "<td>" + data[i].nombre_completo + "</td>";
                                        html += "<td>" + (data[i].apodo || '') + "</td>";
                                        html += "<td>" + (data[i].rnc || '') + "</td>";
                                        html += "<td>" + (data[i].celular || '') + "</td>";
                                        html += "<td>" + (data[i].correo || '') + "</td>";
                                        html += "</tr>";

                                        k++;
                                    }
                                }
                                document.getElementById("tabla_cliente").innerHTML = html;
                                // cargaPaginacion(data[data.length-1].registros[0].total,inicio)     
                            });

                        }
                        clienteList("aaaaaaaaaaaa", '1');

                        // productosList("aaaaaaaaaaaa", '1')
                        document.getElementById("buscarCliente").onkeyup = function (e) {
                            let valor = e.target.value;
                            if (valor == "") {
                                valor = "aaaaaaaaaaaa"
                            }
                            // console.log(valor)
                            clienteList(valor, '1')
                            // document.getElementById("empresa").value = this.value;
                        };

                        function productoAddX(codigo, i) {
                            const cantidad = document.querySelector(`#tabla_productos tr:nth-child(${i + 1}) .cantidadProducto`).value;
                            let almacen = "<%= caja.id_almacen %>";
                            // let id_cliente = 1;
                            let suma = 0;
                            // console.log('por modal')
                            buscarProctoPorCodigo(codigo, almacen, cantidad, id_cliente, suma, caja);
                            document.getElementById('buscarProducto').value = '';
                            $('#modalBuscarProducto').modal('hide');
                            // buscarCodigoProducto(codigo,cantidad);        
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA BUSCAR CLIENTE////////////////////////////////////////////////////// -->

    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalRegistrarCliente" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Registrar cliente</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="row g-2">

                        <div class="col-md-12">
                            <label for="celular" class="form-label text-black">Nombres <strong
                                    style="color: red;">*</strong></label>
                            <input type="text" class="form-control" name="nombres" id="nombres"
                                placeholder="Escriba los nombres" required>
                        </div>
                        <div class="col-md-12">
                            <label for="celular" class="form-label text-black">Apellidos <strong
                                    style="color: red;">*</strong></label>
                            <input type="text" class="form-control" name="apellidos" id="apellidos"
                                placeholder="Escriba los apellidos" required>
                        </div>

                        <div class="col-md-12">
                            <label for="celular" class="form-label text-black">Cédula <strong
                                    style="color: red;">*</strong></label>
                            <input type="text" class="form-control" name="cedula" id="cedula"
                                onkeypress="handleMask(event, '999-9999999-9')" size=13 placeholder="000-0000000-0"
                                required>
                        </div>

                        <div class="col-md-12">
                            <label for="celular" class="form-label text-black">RNC</label>
                            <input type="text" class="form-control" name="rnc" id="rnc" value=""
                                placeholder="Escriba el rnc">
                        </div>


                        <div class="col-md-12">
                            <label for="celular" class="form-label text-black">Celular</label>
                            <input type="text" class="form-control" name="celular" id="celular" value="" placeholder=""
                                required>
                        </div>

                        <div class="col-md-12">
                            <label for="celular" class="form-label text-black">Correo</label>
                            <input type="email" class="form-control" name="correo" id="correo" value="" placeholder=""
                                required>
                        </div>
                    </div>
                    <div class="col-12 text-center py-4">
                        <button type="button" onclick="guardarClienteNuevo()"
                            class="btn btn-primary col-4">GUARDAR</button>
                    </div>
                    <script>

                        function guardarClienteNuevo() {

                            const url = '/facturacion/guardarClienteBasico'; // Reemplaza con la URL del endpoint a donde deseas enviar los datos

                            const nombres = document.getElementById('nombres').value;
                            const apellidos = document.getElementById('apellidos').value;
                            const cedula = document.getElementById('cedula').value;
                            const rnc = document.getElementById('rnc').value;
                            const celular = document.getElementById('celular').value;
                            const correo = document.getElementById('correo').value;

                            const data = {
                                nombres: nombres,
                                apellidos: apellidos,
                                cedula: cedula,
                                rnc: rnc,
                                celular: celular,
                                correo: correo,
                            };

                            fetch(url, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(data),
                            })
                                .then(response => response.json())
                                .then(data => {
                                    document.getElementById('id_cliente').value = data;
                                    document.getElementById('nombre_cliente').value = nombres + " " + apellidos;
                                    document.getElementById('rnc_cliente').value = rnc ? rnc : cedula;
                                    document.getElementById('celular_cliente').value = celular;
                                    // Aquí puedes manejar la respuesta recibida del servidor
                                    // console.log(data);
                                    $('#modalRegistrarCliente').modal('hide');
                                })
                                .catch(error => {
                                    // Aquí puedes manejar cualquier error que ocurra durante la solicitud
                                    console.error(error);
                                });
                        }


                        function seleccionarNuevoCliente(nombre, rnc, celular) {
                            // alert(descripcion)("${data[i].nombre_completo}","${data[i].rnc}","${data[i].cedula}")
                            document.getElementById('id_cliente').value = cliente;
                            document.getElementById('nombre_cliente').value = nombre;
                            document.getElementById('rnc_cliente').value = rnc || '';
                            document.getElementById("celular_cliente").value = celular || '';

                            document.getElementById("buscarCliente").value = '';
                            $('#modalBuscarCliente').modal('hide');
                        }

                        function clienteList(valor, inicio) { // el id que llega es el id del departamento

                            const jsonAccesos = '<%- JSON.stringify(accesos) %>';
                            var accesos = JSON.parse(jsonAccesos);
                            //////
                            let cartera = 0;
                            let sucursal = 0;
                            let elestado_cliente = 2;
                            //  let estado = 2;:
                            $.get("/cliente/filtro_list/" + sucursal + '/' + cartera + '/' + elestado_cliente + '/' + inicio + '/' + valor, function (data) {
                                // console.log('no VEO LA DATA ========>',data[data.length-1].registros[0].total)
                                var html = "";
                                let k = 1;
                                if (data) {
                                    for (var i = 0; i < data.length - 1; i++) {

                                        //console.log(data.length);  

                                        html += `<tr onclick='seleccionarCliente("${data[i].id_cliente}","${data[i].nombre_completo}","${data[i].rnc || ''}","${data[i].celular || ''}")'>`;
                                        html += "<td>" + k + "</td>";
                                        html += "<td>" + data[i].cedula + " / " + data[i].pasaporte + "</td>";
                                        html += "<td>" + data[i].nombre_completo + "</td>";
                                        html += "<td>" + (data[i].apodo || '') + "</td>";
                                        html += "<td>" + (data[i].rnc || '') + "</td>";
                                        html += "<td>" + (data[i].celular || '') + "</td>";
                                        html += "<td>" + (data[i].correo || '') + "</td>";
                                        html += "</tr>";

                                        k++;
                                    }
                                }
                                document.getElementById("tabla_cliente").innerHTML = html;
                                // cargaPaginacion(data[data.length-1].registros[0].total,inicio)     
                            });

                        }
                        clienteList("aaaaaaaaaaaa", '1');

                        // productosList("aaaaaaaaaaaa", '1')
                        document.getElementById("buscarCliente").onkeyup = function (e) {
                            let valor = e.target.value;
                            if (valor == "") {
                                valor = "aaaaaaaaaaaa"
                            }
                            // console.log(valor)
                            clienteList(valor, '1')
                            // document.getElementById("empresa").value = this.value;
                        };

                        function productoAddX(codigo, i) {
                            const cantidad = document.querySelector(`#tabla_productos tr:nth-child(${i + 1}) .cantidadProducto`).value;
                            let almacen = "<%= caja.id_almacen %>";
                            // let id_cliente = 1;
                            let suma = 0;
                            // console.log('por modal')
                            buscarProctoPorCodigo(codigo, almacen, cantidad, id_cliente, suma, caja);
                            document.getElementById('buscarProducto').value = '';
                            $('#modalBuscarProducto').modal('hide');
                            // buscarCodigoProducto(codigo,cantidad);        
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA NUEVO CLIENTE////////////////////////////////////////////////////// -->

    <!-- ///////////////////////FINAL DEL MODAL PARA BUSCAR CLIENTE////////////////////////////////////////////////////// -->

    <!-- Modal Buscar Producto -->
    <div class="modal fade" id="modalMovimientoEnCaja" tabindex="100" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Movimiento en caja <%= caja.nombre
                            %>
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="row g-2">
                        <div class="card">
                            <div class="card-header text-danger">
                                <h5><b>DETALLE DEL MOVIMIENTO</b></h5>
                            </div>
                        </div>
                        <input type="hidden" class="form-control" name="cajaDetalle" id="cajaDetalle"
                            value="<%= caja.id_caja_detalle %>">

                        <div class="btn-group  mt-4 fs-6" role="group" aria-label="bs-component">

                            <div class="form-check mx-4">
                                <input class="form-check-input" type="radio" name="optionsRadiosMovimientoEnCaja"
                                    value="" id="entrada" checked>
                                <label class="form-check-label" for="entrada">
                                    Entrada de efectivo
                                </label>
                            </div>

                            <div class="form-check mx-4">
                                <input class="form-check-input" type="radio" name="optionsRadiosMovimientoEnCaja"
                                    value="" id="salida">
                                <label class="form-check-label" for="salida">
                                    Salida de Efectivo
                                </label>
                            </div>
                        </div>



                        <div class="col-md-12">
                            <label for="efectivoMovimientoCaja" class="form-label text-black">Efectivo</label>
                            <input type="text" class="form-control" name="efectivoMovimientoCaja"
                                id="efectivoMovimientoCaja" value="" placeholder="Escriba el monto">
                        </div>


                        <div class="col-md-12">
                            <label for="detalle" class="form-label text-black">Detalle</label>
                            <textarea class="col-md-12" name="detalle" id="detalle" cols="auto" rows="3"></textarea>
                        </div>
                    </div>

                    <div class="col-12 text-center py-4">
                        <button type="button" id="btnGuardarMovimiento" onclick="autorizarMovimiento()"
                            class="btn btn-primary col-4">GUARDAR</button>
                    </div>
                    <script>

                        function autorizarMovimiento() {
                            quevalida = 'guardarMovimiento'
                            mostrarModalAutorizacion();
                            return;
                        }

                        function guardarMovimiento(id_supervisor) {
                            // alert(id_suplidor)
                            const url = '/facturacion/guardarMovimientoEnCaja'; // Reemplaza con la URL del endpoint a donde deseas enviar los datos

                            const cajaDetalle = document.getElementById('cajaDetalle').value;

                            // Obtener el tipo de movimiento (entrada o salida)
                            const tipoMovimiento = document.querySelector('input[name="optionsRadiosMovimientoEnCaja"]:checked').id;

                            // Obtener el monto y detalle
                            const monto = document.getElementById('efectivoMovimientoCaja').value;
                            const detalle = document.getElementById('detalle').value;

                            const data = {
                                cajaDetalle: cajaDetalle,
                                tipoMovimiento: tipoMovimiento,
                                monto: monto,
                                detalle: detalle,
                                id_supervisor: id_supervisor
                            };

                            fetch(url, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(data),
                            })
                                .then(response => response.json())
                                .then(data => {
                                    // Aquí puedes manejar la respuesta del servidor si es necesario
                                    // console.log('Respuesta del servidor:', data);

                                    // Limpiar los campos después de la solicitud exitosa
                                    document.getElementById('cajaDetalle').value = '';
                                    document.getElementById('efectivoMovimientoCaja').value = '';
                                    document.getElementById('detalle').value = '';

                                    // Cerrar el modal
                                    $('#modalMovimientoEnCaja').modal('hide');
                                })
                                .catch(error => {
                                    // Aquí puedes manejar cualquier error que ocurra durante la solicitud
                                    console.error('Error en la solicitud:', error);
                                });
                        }


                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA NUEVO CLIENTE////////////////////////////////////////////////////// -->


    <!-- Modal Buscar Producto PED -->
    <div class="modal fade" id="modalPedido" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered ancho" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitle">Lista de pedidos del cliente</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header text-black">
                                    <h5>LISTA DE PEDIDOS DEL CLIENTE</h5>
                                </div>
                            </div>
                        </div>

                        <div class="col-12 mt-5 d-flex text-right" id="contenedorCliente">
                            <label for="nombreDelCliente" class="form-label text-black">Cliente</label>
                            <input type="text" class="form-control ml-5 mx-2" name="nombreDelCliente"
                                id="nombreDelCliente" placeholder="Nombre, codigo">

                        </div>

                        <div class="col-12 mt-3 d-flex text-right">
                            <table class="table table-bordered table-hover">
                                <thead class="bg-dark text-white">
                                    <tr>
                                        <th>NO.</th>
                                        <th>CAJA</th>
                                        <th>MESA</th>
                                        <th>TIPO PEDIDO</th>
                                    </tr>
                                </thead>
                                <tbody id="tabla_pedido">

                                </tbody>
                            </table>
                        </div>
                    </div>
                    <script>

                        async function seleccionarCliente(cliente, nombre, rnc, celular) {
                            if (document.getElementById('id_cliente').value != cliente || fraccionarMesaCliente == 0) {
                                var clienteConFacturaTemporal = await clienteConFacturaTemporalF(cliente);
                                if (clienteConFacturaTemporal.length > 0) {
                                    document.getElementById("nombreDelCliente").value = `${nombre}, RNC: ${rnc}`;

                                    // Obtén el elemento contenedor donde deseas agregar el botón
                                    var contenedor = document.getElementById('contenedorCliente');

                                    // Elimina el botón existente si existe
                                    var botonExistente = document.getElementById('btnNuevoPedido');
                                    if (botonExistente) {
                                        contenedor.removeChild(botonExistente);
                                    }

                                    // Crea un nuevo elemento de botón
                                    var botonNuevoPedido = document.createElement('button');

                                    // Asigna el ID, clases y texto al botón
                                    botonNuevoPedido.id = 'btnNuevoPedido';
                                    botonNuevoPedido.className = 'btn btn-warning col-md-4';
                                    botonNuevoPedido.type = 'button';
                                    botonNuevoPedido.textContent = 'Nuevo pedido';

                                    // Obtén el número de pedido más grande del array clienteConFacturaTemporal
                                    const numeroPedidoMayor = clienteConFacturaTemporal.reduce((max, pedido) => {
                                        const numeroPedido = parseFloat(pedido.numero_pedido || 0);
                                        return numeroPedido > max ? numeroPedido : max;
                                    }, 0);

                                    // Suma 1 al número de pedido mayor encontrado
                                    const nuevoNumeroPedido = numeroPedidoMayor + 1;

                                    // Asigna el nuevo número de pedido al botón
                                    botonNuevoPedido.setAttribute('onclick', `seleccionarClienteListo("nuevoPedido","${cliente}","${nombre}","${rnc}","${celular || ''}","${nuevoNumeroPedido}","","")`);
                                    if (fraccionarMesaCliente == 1) {
                                        seleccionarClienteListo("nuevoPedido", cliente, nombre, rnc, celular, nuevoNumeroPedido, "", "")
                                        $('#modalPedido').modal('hide');
                                        return;
                                    }

                                    // Asigna el atributo onclick con la función deseada
                                    //botonNuevoPedido.setAttribute('onclick', `seleccionarClienteListo("nuevoPedido","${cliente}","${nombre}","${rnc}","${celular || ''}","${parseFloat(clienteConFacturaTemporal.length || 0) + 1 || ''}","")`);

                                    // Agrega el botón al contenedor
                                    contenedor.appendChild(botonNuevoPedido);

                                    // console.log(clienteConFacturaTemporal)
                                    let data = clienteConFacturaTemporal
                                    var html = "";

                                    let k = 1;
                                    if (data && fraccionarMesaCliente == 0) {
                                        for (var i = 0; i < data.length; i++) {

                                            // console.log(data);
                                            // mesa = data[i].id_mesa;
                                            html += `<tr onclick='seleccionarClienteListo("","${cliente}","${nombre}","${rnc}","${celular || ''}","${data[i].numero_pedido || ''}","${data[i].id_mesa || ''}","${data[i].mesa || ''}")'>`;
                                            html += "<td>" + data[i].numero_pedido + "</td>";
                                            html += "<td>" + data[i].caja + "</td>";
                                            html += "<td>" + (data[i].mesa || '') + "</td>";
                                            html += "<td>" + ("Local" || '') + "</td>";
                                            html += `</tr>`;


                                            k++;
                                        }
                                    }
                                    document.getElementById("tabla_pedido").innerHTML = html;

                                    $('#modalPedido').modal('show');
                                } else {
                                    seleccionarClienteListo("", cliente, nombre, rnc, celular, 1, "", "")
                                    $('#modalPedido').modal('hide');
                                }
                            } else {
                                alert("Debe elegir un cliente diferente al cliente diferente a " + nombre)
                            }


                        }
                        async function seleccionarPedido(id_cliente, id_pedido) {
                            $('#modalBuscarProducto').modal('hide');
                        }

                        function pedidoList(id_cliente) { // el id que llega es el id del departamento

                            const jsonAccesos = '<%- JSON.stringify(accesos) %>';
                            var accesos = JSON.parse(jsonAccesos);
                            //////
                            let cartera = 0;
                            let sucursal = 0;
                            let elestado_cliente = 2;
                            //  let estado = 2;:
                            $.get("/facturacion/consultaCamarero", function (data) {
                                // console.log('no VEO LA DATA ========>', data)
                                var html = "";
                                let k = 1;
                                if (data) {
                                    for (var i = 0; i < data.length; i++) {

                                        console.log(data);

                                        html += `<tr onclick='asignarMesa("${id_mesa}","${mesa}","${data[i].id_empleado}","${data[i].camarero || ''}","abierta")'>`;
                                        html += "<td>" + k + "</td>";
                                        html += "<td>" + data[i].codigo + "</td>";
                                        html += "<td>" + (data[i].camarero || '') + "</td>";
                                        html += "<td>" + (data[i].puesto || '') + "</td>";
                                        html += `</tr>`;


                                        k++;
                                    }
                                }
                                document.getElementById("tabla_camarero").innerHTML = html;
                                // cargaPaginacion(data[data.length-1].registros[0].total,inicio)     
                            });

                        }

                    </script>
                </div>
            </div>
        </div>
    </div>


    <!-- Segundo Modal -->
    <div class="modal fade" id="modalFacturas" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitleProcesarOrden" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered anchotablafull" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitleProcesarOrden">Facturas</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="card">

                        <div class="card-body row g-3">



                            <div class="col-12 row g-3">

                                <div class="col-md-2">
                                    <label for="fecha_inicial" class="form-label text-black">Fecha desde</label>
                                    <input type="datetime-local" class="form-control" name="fecha_inicial"
                                        id="fecha_inicial">
                                </div>

                                <div class="col-md-2">
                                    <label for="fecha_final" class="form-label text-black">Fecha hasta</label>
                                    <input type="datetime-local" class="form-control" name="fecha_final"
                                        id="fecha_final">
                                </div>

                                <div class="col-md-2">

                                    <label for="estadoFactura" class="form-label text-black">Estado</label>
                                    <select class="form-control" name="estadoFactura" id="estadoFactura" required>
                                        <option selected value="Procesada">Procesada</option>
                                        <option value="Anulada">Anulada</option>
                                    </select>
                                </div>

                                <div class="col-md-4">
                                    <label for="buscarFacturas" class="form-label text-black">Filtro:</label>
                                    <input type="text" class="form-control" name="buscarFacturas" id="buscarFacturas"
                                        placeholder="Ingrese código, descripción ó referencia">
                                </div>
                                <div class="col-md-2 mt-4">
                                    <button class="btn btn-success col-md-12 pt-2 mt-4" id="btnIngresarProducto"
                                        type="button">BUSCAR</button>
                                </div>



                            </div>
                            <div class="col-12 mt-2">
                                <label for="buscarFacturas" class="form-label text-black"
                                    style="color: black; font-size: 20px;">Total de registros: <strong
                                        id="registrostotales" style="color: black; font-size: 20px;"></strong></label>
                            </div>
                            <table class="table table-bordered table-hover">
                                <thead class="bg-dark text-white">
                                    <tr>

                                        <th>No.</th>
                                        <th>FECHA</th>
                                        <th>FACTURA</th>
                                        <th>CLIENTE</th>
                                        <th>RNC</th>
                                        <th>COMPROBANTE</th>
                                        <th>CONDICIÓN</th>
                                        <th>FECHA VENCIMIENTO</th>
                                        <th>IMPORTE</th>
                                        <th>CAJERO</th>
                                        <th>ACCIÓN</th>
                                    </tr>
                                </thead>
                                <tbody id="tabla_facturas">

                                </tbody>
                            </table>
                            <div id="paginacion" class="btn-toolbar" role="toolbar"
                                aria-label="Toolbar with button groups">

                            </div>
                        </div>
                    </div>

                    <script>


                        function establecerFechas() {
                            const ahora = new Date();
                            const dosDiasAtras = new Date(ahora);
                            dosDiasAtras.setDate(ahora.getDate() - 1);

                            const formatearFecha = fecha => {
                                return fecha.toISOString().slice(0, 16);
                            };

                            const fechaActual = formatearFecha(ahora);
                            const fechaInicial = formatearFecha(dosDiasAtras);

                            document.getElementById('fecha_final').value = fechaActual;
                            document.getElementById('fecha_inicial').value = fechaInicial;
                        }

                        function reimprimirFactura(id_venta, estado) { // el id que llega es el id del departamento

                            $.post(`/facturacion/reimprimirFactura/${id_venta}/${estado}`, async function (data) {
                                if (data != "Algo anda mal en la venta temproral") {

                                    id_cliente = 1;
                                    // console.log(respo)
                                    document.getElementById("servicio").checked = false;
                                    buscarVentaTemporal(caja, mesa, '1');
                                    $('#modalFacturas').modal('hide');
                                    var jsonData = JSON.stringify(data);
                                    // console.log("datos  que van para la factura =======>", jsonData)
                                    fetch("http://localhost:8081?printer=" + "POS80", {
                                        method: "POST",
                                        body: data
                                    })
                                        .then(response => {
                                            if (response.ok) {
                                                console.log("Texto enviado a imprimir.");
                                            } else {
                                                console.log("Error al enviar el texto a imprimir:", response.status);
                                            }
                                        })
                                        .catch(error => {
                                            console.log("Error al enviar el texto a imprimir:", error);
                                        });
                                }
                            });

                        }

                        // Función para seleccionar el contenido del campo editable al hacer clic
                        function selectContent(element) {
                            const range = document.createRange();
                            range.selectNodeContents(element);
                            const selection = window.getSelection();
                            selection.removeAllRanges();
                            selection.addRange(range);
                        }



                        function verFactura(id_venta, estado) {
                            // alert(id_venta)
                            $('#modalFacturaCompleta').modal('show');
                            let url = `/facturacion/verFacturaConDetalle`;
                            const data = {
                                id_venta: id_venta,
                                estado: estado,
                            };

                            fetch(url, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(data),
                            })
                                .then(response => response.json())
                                .then(data => {
                                    // document.getElementById('id_cliente').value = data;
                                    // document.getElementById('nombre_cliente').value = nombres + " " + apellidos;
                                    // document.getElementById('rnc_cliente').value = rnc ? rnc : cedula;
                                    // document.getElementById('celular_cliente').value = celular;
                                    // Aquí puedes manejar la respuesta recibida del servidor
                                    // console.log("Imprimo datos de la factura =======> ", data);
                                    // Datos del primer array
                                    document.getElementById("idVentaDevolver").value = id_venta;
                                    const dataHeader = data[0];/* tu primer array */

                                    // Datos del segundo array
                                    const dataDetalle = data[1];/* tu segundo array */

                                    // Tabla Factura Header
                                    const tablaFacturaHeader = document.getElementById("tablaFacturaHeader");
                                    tablaFacturaHeader.innerHTML = ""; // Limpiar contenido previo

                                    dataHeader.forEach((factura, index) => {
                                        const row = `
                                            <tr>
                                            <td>${index + 1}</td>
                                            <td>${factura.fecha}</td>
                                            <td>${factura.factura}</td>
                                            <td>${factura.cliente}</td>
                                            <td>${factura.rnc}</td>
                                            <td>${factura.secncf}</td>
                                            <td>${factura.condicion}</td>
                                            <td>${factura.fecha_vencimiento}</td>
                                            <td style="text-align: right;">${formatearNumero(factura.total_importe)}</td>
                                            
                                            <td>${factura.cajero}</td>
                                            <td>
                                                <button type="button" onclick='reimprimirFactura("${factura.id_venta}","${factura.estatusventa}")' class="btn btn-primary">
                                                <i class="fas fa-print"></i>
                                                </button>
                                            </td>
                                            </tr>
                                        `;
                                        tablaFacturaHeader.innerHTML += row;
                                    });

                                    // Tabla Factura Detalle
                                    const tablaFacturaDetalle = document.getElementById("tablaFacturaDetalle");
                                    tablaFacturaDetalle.innerHTML = ""; // Limpiar contenido previo

                                    dataDetalle.forEach(async detalle => {
                                        const unidades = await $.get(`/producto/unidad_producto/${detalle.id_producto}`);
                                        let row = `<tr> <td class="d-none">${detalle.id_producto}</td>
                                            <td>${detalle.codigo}</td>
                                            <td>${detalle.descripcion}</td>
                                            <td style="text-align: right;">${formatearNumero(detalle.precio_venta / detalle.cantidad)}</td>
                                            <td style="text-align: right;">${detalle.cantidad}</td> 
                                            <td style="text-align: right;">${detalle.cantidad_pendiente}</td> 
                                            <td contenteditable='true' style="text-align: right;" onclick="selectContent(this)" data-original-quantity="${detalle.cantidad_pendiente}" onblur="calcularYActualizarCampos()">${detalle.cantidad_pendiente}</td> 
                                            <td> <select name='unidades'>`;

                                        //las unidades consultadas arriba las itero para colocar cual es la unidad seleccionada
                                        let id_unidad = 0;
                                        for (let j = 0; j < unidades.length; j++) {
                                            // console.log('Muestro las Unidades ===> ',data[i].id_unidad)
                                            if (unidades[j].id_unidad == detalle.id_unidad) {
                                                id_unidad = unidades[j].id_unidad;
                                                row += "<option selected value=" + unidades[j].id_unidad + ">" + unidades[j].unidad + "</option>";
                                            } else {
                                                //row += "<option value=" + unidades[j].id_unidad + ">" + unidades[j].unidad + "</option>";
                                            }
                                        }

                                        row += "</select>";
                                        row += "</td>";
                                        row += `<td style="text-align: right;">${formatearNumero(detalle.descuento)}</td>
                                            <td style="text-align: right;">${formatearNumero(detalle.itbis)}</td>
                                            <td style="text-align: right;">${formatearNumero(detalle.precio_venta)}</td>
                                            <td style="text-align: right;">${formatearNumero(detalle.importe)}</td>
                                            </tr>
                                        `;
                                        tablaFacturaDetalle.innerHTML += row;
                                        calcularYActualizarCampos()
                                    });
                                })
                                .catch(error => {
                                    // Aquí puedes manejar cualquier error que ocurra durante la solicitud
                                    console.error(error);
                                });

                            // Escuchar cambios en el campo editable de cantidad devuelta
                            tablaFacturaDetalle.addEventListener('input', function (event) {
                                if (event.target.dataset.originalQuantity) {
                                    const inputValue = parseFloat(event.target.textContent);
                                    const originalQuantity = parseFloat(event.target.dataset.originalQuantity);

                                    // Validar que inputValue sea mayor o igual a cero
                                    if (isNaN(inputValue) || inputValue < 0) {
                                        event.target.textContent = "0"; // Establecer el valor a cero si es negativo o no es un número
                                    } else if (inputValue > originalQuantity) {
                                        event.target.textContent = originalQuantity.toFixed(2); // Limitar el valor al originalQuantity con hasta 2 decimales
                                    } else {
                                        const decimalPlaces = (inputValue.toString().split('.')[1] || '').length;
                                        if (decimalPlaces > 2) {
                                            event.target.textContent = inputValue.toFixed(2); // Redondear a 2 decimales si es necesario
                                        }
                                    }
                                }
                            });


                        }

                        // Función para realizar los cálculos y llenar los campos
                        // Función para realizar los cálculos y llenar los campos
                        function calcularYActualizarCampos() {
                            // Obtener el nuevo valor del campo editable
                            // const nuevoValor = parseFloat(campo.textContent.replace(/,/g, ''));

                            // Definir elementos HTML
                            const tablaFacturaDetalle = document.getElementById("tablaFacturaDetalle");
                            const subTotalDevolverInput = document.getElementById("subTotal_devolver");
                            const masItbisDevolverInput = document.getElementById("masItbis_devolver");
                            const descuentoDevolverInput = document.getElementById("descuento_devolver");
                            const totalDevueltoInput = document.getElementById("totalDevuelto");

                            // Calcular y llenar los campos
                            let descuentoTotal = 0;
                            let itbisTotal = 0;
                            let precioTotal = 0;

                            let importeTotal = 0;

                            const filas = tablaFacturaDetalle.getElementsByTagName("tr");

                            for (let i = 0; i < filas.length; i++) {
                                const celdas = filas[i].getElementsByTagName("td");
                                // console.log(celdas[2].textContent)
                                if (celdas.length >= 9) {
                                    const descuento = (parseFloat(celdas[8].textContent.replace(/,/g, '')) / parseFloat(celdas[4].textContent.replace(/,/g, ''))) * parseFloat(celdas[6].textContent.replace(/,/g, ''));
                                    const itbis = (parseFloat(celdas[9].textContent.replace(/,/g, '')) / parseFloat(celdas[4].textContent.replace(/,/g, ''))) * parseFloat(celdas[6].textContent.replace(/,/g, ''));
                                    const precio = (parseFloat(celdas[10].textContent.replace(/,/g, '')) / parseFloat(celdas[4].textContent.replace(/,/g, ''))) * parseFloat(celdas[6].textContent.replace(/,/g, ''));
                                    // console.log('descuento ====> ', descuento)
                                    // console.log('itbis ====> ', itbis)
                                    // console.log('precio ====> ', precio)

                                    importeTotal += precio + itbis - descuento;
                                    descuentoTotal += descuento;
                                    itbisTotal += itbis;
                                    precioTotal += precio;
                                }
                            }
                            //.......................................................// debe de recorrer totda la tabla para hacer el calculo y si es null sustituir ese campo por cero de manera virtual
                            //const totalDevuelto = (precioTotal * nuevoValor) + itbisTotal - descuentoTotal;

                            subTotalDevolverInput.value = formatearNumero(precioTotal);
                            masItbisDevolverInput.value = formatearNumero(itbisTotal);
                            descuentoDevolverInput.value = formatearNumero(descuentoTotal);
                            totalDevueltoInput.value = formatearNumero(importeTotal);
                        }

                        //'/facturas/:fecha_inicial/:fecha_final/:valor/:inicio', facturacionController.facturas);

                        function facturasList(valor, inicio) { // el id que llega es el id del departamento
                            let fecha_inicial = document.getElementById("fecha_inicial").value;
                            let fecha_final = document.getElementById("fecha_final").value;
                            let estado = document.getElementById("estadoFactura").value;
                            $.get(`/facturacion/facturas/${fecha_inicial}/${fecha_final}/${estado}/${valor}/${inicio}`, async function (data) {
                                // console.log(data[data.length-1].registros)
                                // document.getElementById('registrostotales').innerText = data[data.length-1].registros[0].total;
                                var html = "";
                                let k = 1;
                                for (var i = 0; i < data.length - 1; i++) {
                                    // `id_producto`, `codigo`, `codigo_barra`, `descripcion`, `referencia`, `factor_conversion`, `existencia`, `precio_compra`, `precio_venta`, `itbis`, `descuento`, `margen_ganancia`, `cantidad_minima`, `cantidad_maxima`, `ubicacion`, `color`, `id_estado`, `idmarca`, `idcategoria`
                                    html += "<tr>";
                                    //`id_script`, `titulo`, `contenido`, `fecha_creacion`, `id_tipo_producto`, `id_estado`
                                    html += "<td>" + k + "</td>";
                                    html += `<td>` + data[i].fecha + "</td>";
                                    html += `<td>` + data[i].factura + "</td>";
                                    // html +="<td>"+ data[i].empresa +"</td>";
                                    html += "<td>" + data[i].cliente + "</td>";
                                    html += "<td>" + data[i].rnc + "</td>";
                                    html += "<td>" + data[i].secncf + "</td>";
                                    html += "<td>" + data[i].condicion + "</td>";
                                    html += "<td>" + data[i].fecha_vencimiento + "</td>";
                                    html += "<td>" + data[i].total_importe + "</td>";
                                    html += "<td>" + data[i].cajero + "</td>";

                                    html += `<td>`;
                                    html += `<i class="fas fa-print col-6" onclick='reimprimirFactura("${data[i].id_venta}","${data[i].estatusventa}")'></i>`;

                                    html += `<i class="fas fa-eye col-6" onclick='verFactura("${data[i].id_venta}","${data[i].estatusventa}")'></i>`;

                                    html += "</td></tr>";

                                    k++;
                                }

                                var elementTabla_empleado = document.getElementById("tabla_facturas");
                                elementTabla_empleado.innerHTML = html;
                                ///////////////////////////////////////////////////////////////////////////

                                // cargaPaginacion(data[data.length-1].registros[0].total,inicio)
                            });

                        }

                        // facturasList("aaaaaaaaaaaa", '1')
                        document.getElementById("buscarFacturas").onkeyup = function (e) {
                            let valor = e.target.value;
                            if (valor == "") {
                                valor = "aaaaaaaaaaaa"
                            }
                            // console.log(valor)
                            facturasList(valor, '1')
                            // document.getElementById("empresa").value = this.value;
                        };

                        // document.getElementById('btnGuardarOrden').addEventListener('click', obtenerDatosTabla);


                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA PROCESAR VENTA////////////////////////////////////////////////////// -->


    <!-- ///////////////////////FINAL DEL MODAL PARA NUEVO CLIENTE////////////////////////////////////////////////////// -->

    <!-- Segundo Modal -->
    <div class="modal fade" id="modalFacturaCompleta" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitleProcesarOrden" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered anchotablafull" role="document">
            <div class="modal-content border border-primary border-5">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitleProcesarOrden">Devolución de Factura
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="">

                        <div class="card-body row g-3">

                            <table class="table table-bordered table-hover">
                                <thead class="bg-dark text-white">
                                    <tr>
                                        <th>No.</th>
                                        <th>FECHA</th>
                                        <th>FACTURA</th>
                                        <th>CLIENTE</th>
                                        <th>RNC</th>
                                        <th>COMPROBANTE</th>
                                        <th>CONDICIÓN</th>
                                        <th>FECHA VENCIMIENTO</th>
                                        <th>IMPORTE</th>
                                        <th>CAJERO</th>
                                        <th>ACCIÓN</th>
                                    </tr>
                                </thead>
                                <tbody id="tablaFacturaHeader">

                                </tbody>
                            </table>

                            <div class="card boder">
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="row col-md-12">
                                            <div class="col-md-3">
                                                <label for="subTotal" class="form-label text-black"><strong>Sub
                                                        Total:</strong></label>
                                                <input type="text" style='text-align: right;' class="form-control"
                                                    name="subTotal_devolver" id="subTotal_devolver" placeholder=""
                                                    readonly>
                                            </div>

                                            <div class="col-md-3">
                                                <label for="subTotal"
                                                    class="form-label text-black"><strong>Descuento:</strong></label>
                                                <input type="text" style='text-align: right;' class="form-control"
                                                    name="descuento_devolver" id="descuento_devolver" placeholder=""
                                                    readonly>
                                            </div>

                                            <div class="col-md-3">
                                                <label for="subTotal" class="form-label text-black"><strong>
                                                        Itbis:</strong></label>
                                                <input type="text" style='text-align: right;' class="form-control"
                                                    name="masItbis_devolver" id="masItbis_devolver" placeholder=""
                                                    readonly>
                                            </div>

                                            <div class="col-md-3">
                                                <label for="subTotal" class="form-label text-black"><strong>Total
                                                        a Devolver:</strong></label>
                                                <input type="text"
                                                    style='text-align: right; background-color: green;color: white;'
                                                    class="form-control" name="totalDevuelto" id="totalDevuelto"
                                                    placeholder="" readonly>
                                                <input type="hidden" class="form-control" name="idVentaDevolver"
                                                    id="idVentaDevolver" readonly>
                                            </div>
                                        </div>





                                    </div>
                                </div>
                            </div>
                            <table class="table table-bordered table-hover">
                                <thead class="bg-dark text-white">
                                    <tr>
                                        <th class="d-none">ID</th>
                                        <th>CÓDIGO</th>
                                        <th>DESCRIPCIÓN</th>
                                        <th>PRECIO</th>
                                        <th>CANTIDAD</th>
                                        <th>CANTIDAD PENDIENTE</th>
                                        <th>CANTIDAD DEVUELTA</th>
                                        <th>UNIDAD</th>
                                        <th>DESCUENTO</th>
                                        <th>ITBIS</th>
                                        <th>SUBTOTAL</th>
                                        <th>IMPORTE</th>
                                    </tr>
                                </thead>
                                <tbody id="tablaFacturaDetalle">

                                </tbody>
                            </table>

                            <div id="paginacion" class="btn-toolbar" role="toolbar"
                                aria-label="Toolbar with button groups">

                            </div>
                            <div class="col-md-12">
                                <label for="celular" class="form-label text-black">Comentario</label>
                                <textarea class="col-md-12" name="comentario" id="comentario" cols="auto"
                                    rows="3"></textarea>
                            </div>

                            <div class="col-md-3">
                                <input type="checkbox" name="llevaNotaCredito" id="llevaNotaCredito">
                                <label for="llevaNotaCredito" class="form-label text-black">Nota de Crédito</label>

                            </div>
                        </div>
                        <div class="col-md-12 text-center pt-1">
                            <button type="button" id="btnProcesar"
                                class="btn btn-warning col-md-4 my-3">PROCESAR</button>
                        </div>
                    </div>

                    <script>


                    </script>
                </div>
            </div>
        </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA PROCESAR VENTA////////////////////////////////////////////////////// -->


    <!-- Segundo Modal -->
    <div class="modal fade" id="modalDetalleDelPago" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitleProcesarOrden" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered ancho" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitleProcesarOrden">Detalles del pago</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="card">

                        <div class="card-body row g-3">

                            <div class="col-md-3">
                                <label for="fechaDeVencimiento" class="form-label text-black">Fecha Vencimiento</label>
                                <input type="datetime-local" class="form-control" name="fechaDeVencimiento"
                                    id="fechaDeVencimiento">
                            </div>



                            <div class="col-md-3">
                                <label for="tarjetaDebito" class="form-label text-black">Tarjeta de Débito</label>
                                <input type="text" class="form-control" name="tarjetaDebito" id="tarjetaDebito"
                                    placeholder="Monto en tarjeta de débito" style='text-align: right;'>
                            </div>

                            <div class="col-md-3">
                                <label for="pagoConBono" class="form-label text-black">Pago con Bono</label>
                                <input type="text" class="form-control" name="pagoConBono" id="pagoConBono"
                                    style='text-align: right;'>
                            </div>

                            <div class="col-md-3">
                                <label for="cheque" class="form-label text-black">Cheque</label>
                                <input type="text" class="form-control" name="cheque" id="cheque"
                                    placeholder="Monto del cheque" style='text-align: right;'>
                            </div>

                            <div class="col-md-3">
                                <label for="condicionVenta" class="form-label text-black">Condición</label>
                                <select class="form-control" name="condicionVenta" id="condicionVenta" required>
                                    <option value="">Seleccione</option>
                                    <option selected value="CONTADO">CONTADO</option>
                                    <option value="15">A 15 DÍAS</option>
                                    <option value="30">A 30 DÍAS</option>
                                    <option value="45">A 45 DÍAS</option>
                                    <option value="60">A 60 DÍAS</option>
                                    <option value="120">A 120 DÍAS</option>
                                    <option value="presentacion">A PRESENTACIÓN</option>
                                    <option value="cajaChica">CAJA CHICA</option>
                                </select>
                            </div>

                            <div class="col-md-3">
                                <label for="tarjetaCredito" class="form-label text-black">Tarjeta de Crédito</label>
                                <input type="text" class="form-control" name="tarjetaCredito" id="tarjetaCredito"
                                    placeholder="Monto en tarjeta de crédito" style='text-align: right;'>
                            </div>

                            <div class="col-md-3">
                                <input type="checkbox" name="notaDeCredito" id="notaDeCredito">
                                <label for="notaDeCredito" class="form-label text-black">Nota de Crédito</label>
                                <input type="text" class="form-control" name="notaCredito" id="notaCredito"
                                    placeholder="Número de nota Crédito">
                            </div>
                            <div class="col-md-3">
                                <label for="montoNotaCredito" class="form-label text-black">Monto de Nota</label>
                                <input type="text" class="form-control" name="montoNotaCredito" id="montoNotaCredito"
                                    style='text-align: right;'>
                            </div>

                            <div class="col-md-3">
                                <input type="checkbox" name="laCuentaPorCobrar" id="laCuentaPorCobrar">
                                <label for="laCuentaPorCobrar" class="form-label text-black">Cuenta por Cobrar</label>
                                <input type="text" class="form-control" name="cuentaPorCobrar" id="cuentaPorCobrar"
                                    style='text-align: right;'>
                            </div>

                            <div class="col-md-3">
                                <label for="monto_a_cobrar" class="form-label text-black">Monto a Cobrar</label>
                                <input type="text" class="form-control"
                                    style='text-align: right; background-color: green;color: white;'
                                    name="monto_a_cobrar" id="monto_a_cobrar" readonly>
                            </div>

                            <div class="col-md-3">
                                <label for="efectivo" class="form-label text-black">Efectivo</label>
                                <input type="text" class="form-control" name="efectivo" id="efectivo"
                                    style='text-align: right;'>
                            </div>


                            <div class="col-md-3">
                                <label for="devolver" class="form-label text-black">Devolver</label>
                                <input type="text" class="form-control" name="devolver" id="devolver"
                                    style='text-align: right;' disabled>
                            </div>
                            <!-- aqui va el desglose -->
                            <!-- Sección de Desglose de Dinero -->
                            <div class="row my-3 mx-5 <%= caja.desglose ? '' : 'd-none' %>">

                                <div id="desgloseEntrada" style="display: flex;" class="col-3">
                                    <div class="row">
                                        <label for="dosmil_entrada"
                                            class="form-label text-black col-md-12 text-center">Entrada de
                                            Dinero: <strong id="labelEntrada"></strong></label>
                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="dosmil_entrada" class="form-label text-black col-md-12">2000
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="dosmil_entrada" id="dosmil_entrada"
                                                    class="form-control text-end" data-amount="2000" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_dosmil_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_dosmil_entrada" id="total_dosmil_entrada"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="mil_entrada" class="form-label text-black col-md-12">1000
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="mil_entrada" id="mil_entrada"
                                                    class="form-control text-end" data-amount="1000" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_mil_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_mil_entrada" id="total_mil_entrada"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="quinientos_entrada"
                                                    class="form-label text-black col-md-12">500 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="quinientos_entrada" id="quinientos_entrada"
                                                    class="form-control text-end" data-amount="500" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_quinientos_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_quinientos_entrada"
                                                    id="total_quinientos_entrada" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="doscientos_entrada"
                                                    class="form-label text-black col-md-12">200 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="doscientos_entrada" id="doscientos_entrada"
                                                    class="form-control text-end" data-amount="200" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_doscientos_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_doscientos_entrada"
                                                    id="total_doscientos_entrada" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cien_entrada" class="form-label text-black col-md-12">100
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cien_entrada" id="cien_entrada"
                                                    class="form-control text-end" data-amount="100" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_cien_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_cien_entrada" id="total_cien_entrada"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cincuenta_entrada"
                                                    class="form-label text-black col-md-12">50 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cincuenta_entrada" id="cincuenta_entrada"
                                                    class="form-control text-end" data-amount="50" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_cincuenta_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_cincuenta_entrada"
                                                    id="total_cincuenta_entrada" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="veinticinco_entrada"
                                                    class="form-label text-black col-md-12">25 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="veinticinco_entrada" id="veinticinco_entrada"
                                                    class="form-control text-end" data-amount="25" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_veinticinco_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_veinticinco_entrada"
                                                    id="total_veinticinco_entrada" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="diez_entrada" class="form-label text-black col-md-12">10
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="diez_entrada" id="diez_entrada"
                                                    class="form-control text-end" data-amount="10" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_diez_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_diez_entrada" id="total_diez_entrada"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cinco_entrada" class="form-label text-black col-md-12">5
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cinco_entrada" id="cinco_entrada"
                                                    class="form-control text-end" data-amount="5" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_cinco_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_cinco_entrada" id="total_cinco_entrada"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="uno_entrada" class="form-label text-black col-md-12">1
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="uno_entrada" id="uno_entrada"
                                                    class="form-control text-end" data-amount="1" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_uno_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_uno_entrada" id="total_uno_entrada"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="decimal_entrada"
                                                    class="form-label text-black col-md-12">Decimal</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="decimal_entrada" id="decimal_entrada"
                                                    class="form-control text-end" data-amount="0.01" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_decimal_entrada"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_decimal_entrada"
                                                    id="total_decimal_entrada" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                                <div class="col-1 ml-2">

                                </div>


                                <div id="desgloseEnCaja" style="display: flex;" class="col-2">
                                    <div class="row">
                                        <label for="dosmil_entrada"
                                            class="form-label text-black col-md-12 text-center"><strong>Desglose en
                                                Caja</strong></label>
                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="dosmil_caja" class="form-label text-black col-md-12">2000
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="dosmil_caja" id="dosmil_caja"
                                                    class="form-control text-end" data-amount="2000" min="0" readonly>
                                            </div>
                                        </div>
                                        <!-- Resto de los campos con sufijo "_caja" -->
                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="mil_caja" class="form-label text-black col-md-12">1000
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="mil_caja" id="mil_caja"
                                                    class="form-control text-end" data-amount="1000" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="quinientos_caja" class="form-label text-black col-md-12">500
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="quinientos_caja" id="quinientos_caja"
                                                    class="form-control text-end" data-amount="500" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="doscientos_caja" class="form-label text-black col-md-12">200
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="doscientos_caja" id="doscientos_caja"
                                                    class="form-control text-end" data-amount="200" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="cien_caja" class="form-label text-black col-md-12">100
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="cien_caja" id="cien_caja"
                                                    class="form-control text-end" data-amount="100" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="cincuenta_caja" class="form-label text-black col-md-12">50
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="cincuenta_caja" id="cincuenta_caja"
                                                    class="form-control text-end" data-amount="50" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="veinticinco_caja" class="form-label text-black col-md-12">25
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="veinticinco_caja" id="veinticinco_caja"
                                                    class="form-control text-end" data-amount="25" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="diez_caja" class="form-label text-black col-md-12">10
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="diez_caja" id="diez_caja"
                                                    class="form-control text-end" data-amount="10" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="cinco_caja" class="form-label text-black col-md-12">5
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="cinco_caja" id="cinco_caja"
                                                    class="form-control text-end" data-amount="5" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="uno_caja" class="form-label text-black col-md-12">1
                                                    X</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="uno_caja" id="uno_caja"
                                                    class="form-control text-end" data-amount="1" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-5 text-end pt-2">
                                                <label for="decimal_caja"
                                                    class="form-label text-black col-md-12">Decimal</label>
                                            </div>
                                            <div class="col-md-7 mx-3">
                                                <input type="number" name="decimal_caja" id="decimal_caja"
                                                    class="form-control text-end" data-amount="0.1" min="0" readonly>
                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <div class="col-1">

                                </div>







                                <div id="desgloseSalida" style="display: flex;" class="col-3">
                                    <div class="row">
                                        <label for="dosmil_entrada"
                                            class="form-label text-black col-md-12 text-center">Salida de
                                            Dinero: <strong id="labelSalida"></strong></label>
                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="dosmil_salida" class="form-label text-black col-md-12">2000
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="dosmil_salida" id="dosmil_salida"
                                                    class="form-control text-end" data-amount="2000" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_dosmil_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_dosmil_salida" id="total_dosmil_salida"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="mil_salida" class="form-label text-black col-md-12">1000
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="mil_salida" id="mil_salida"
                                                    class="form-control text-end" data-amount="1000" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_mil_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_mil_salida" id="total_mil_salida"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="quinientos_salida"
                                                    class="form-label text-black col-md-12">500 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="quinientos_salida" id="quinientos_salida"
                                                    class="form-control text-end" data-amount="500" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_quinientos_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_quinientos_salida"
                                                    id="total_quinientos_salida" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="doscientos_salida"
                                                    class="form-label text-black col-md-12">200 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="doscientos_salida" id="doscientos_salida"
                                                    class="form-control text-end" data-amount="200" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_doscientos_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_doscientos_salida"
                                                    id="total_doscientos_salida" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cien_salida" class="form-label text-black col-md-12">100
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cien_salida" id="cien_salida"
                                                    class="form-control text-end" data-amount="100" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_cien_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_cien_salida" id="total_cien_salida"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cincuenta_salida" class="form-label text-black col-md-12">50
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cincuenta_salida" id="cincuenta_salida"
                                                    class="form-control text-end" data-amount="50" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_cincuenta_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_cincuenta_salida"
                                                    id="total_cincuenta_salida" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="veinticinco_salida"
                                                    class="form-label text-black col-md-12">25 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="veinticinco_salida" id="veinticinco_salida"
                                                    class="form-control text-end" data-amount="25" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_veinticinco_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_veinticinco_salida"
                                                    id="total_veinticinco_salida" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="diez_salida" class="form-label text-black col-md-12">10
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="diez_salida" id="diez_salida"
                                                    class="form-control text-end" data-amount="10" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_diez_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_diez_salida" id="total_diez_salida"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cinco_salida" class="form-label text-black col-md-12">5
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cinco_salida" id="cinco_salida"
                                                    class="form-control text-end" data-amount="5" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_cinco_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_cinco_salida" id="total_cinco_salida"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="uno_salida" class="form-label text-black col-md-12">1
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="uno_salida" id="uno_salida"
                                                    class="form-control text-end" data-amount="1" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_uno_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_uno_salida" id="total_uno_salida"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="decimal_salida"
                                                    class="form-label text-black col-md-12">Decimal</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="decimal_salida" id="decimal_salida"
                                                    class="form-control text-end" data-amount="0.01" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="total_decimal_salida"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="total_decimal_salida" id="total_decimal_salida"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                    </div>
                                </div>



                            </div>
                            <!-- Final del desglose -->
                            <div class="col-md-12">
                                <label for="notaVenta" class="form-label text-black">Nota<strong
                                        style="color: red;">*</strong></label>
                                <textarea class="col-md-12" name="notaVenta" id="notaVenta" cols="auto" rows="3"
                                    maxlength="225" required></textarea>
                            </div>


                        </div>
                        <div class="col-md-12 text-center pt-1">
                            <button type="button" id="btnGuardarVenta" class="btn btn-warning col-md-4 my-3"
                                disabled>GUARDAR
                                VENTA</button>
                        </div>

                    </div>
                </div>





                <!-- Modal para cambiar la imagen del cliente-->
                <div class="modal fade" id="modalVerificarNotaCredito" tabindex="-1" role="dialog"
                    aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">

                            <!-- Modal body -->

                            <div class="card">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalCenterTitle">Consulta de nota de crédito
                                    </h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">×</span>
                                    </button>
                                </div>
                                <div class="card-body col-md-12">
                                    <div class="col-md-10" style="margin:0 auto">
                                        <form class="row g-3" action="caja/add" method="post">



                                            <div class="mb-3">
                                                <label for="fechaParametro">Fecha</label>
                                                <input type="date" class="form-control" id="fechaParametro"
                                                    name="fechaParametro" value="2023-09-27">
                                            </div>
                                            <!-- Campo para secncf_afectado -->
                                            <div class="mb-3">
                                                <label for="secncfAfectadoParametro">NCF Afectado</label>
                                                <input type="text" class="form-control" id="secncfAfectadoParametro"
                                                    value="B0100000002">
                                            </div>
                                            <!-- Campo para secncf_nota -->
                                            <div class="mb-3">
                                                <label for="secncfNotaParametro">NCF Nota</label>
                                                <input type="text" class="form-control" id="secncfNotaParametro"
                                                    value="B0400000003">
                                            </div>
                                            <!-- Campo para id_devolucion -->
                                            <div class="mb-3">
                                                <label for="numeroNota">Número de Nota de Crédito</label>
                                                <input type="text" class="form-control" id="numeroNota" value="3">
                                            </div>

                                            <strong> La Nota de Crédito debe ser menor o igual al total a pagar
                                            </strong>


                                            <div class="col-12 text-center">
                                                <button type="button" id="btnVerificarNotaCredito"
                                                    class="btn btn-primary col-8 my-3">GUARDAR</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <script>
                    async function desgloseEnCaja() {
                        let id_caja_detalle = "<%= caja.id_caja_detalle %>";
                        // console.log('mi detall de caja ', id_caja_detalle)
                        await $.get(`/facturacion/desgloseEnCaja/${id_caja_detalle}`, function (data) {
                            document.getElementById("dosmil_caja").value = data.suma_2000 || 0;
                            document.getElementById("mil_caja").value = data.suma_1000 || 0;
                            document.getElementById("quinientos_caja").value = data.suma_500 || 0;
                            document.getElementById("doscientos_caja").value = data.suma_200 || 0;
                            document.getElementById("cien_caja").value = data.suma_100 || 0;
                            document.getElementById("cincuenta_caja").value = data.suma_50 || 0;
                            document.getElementById("veinticinco_caja").value = data.suma_25 || 0;
                            document.getElementById("diez_caja").value = data.suma_10 || 0;
                            document.getElementById("cinco_caja").value = data.suma_5 || 0;
                            document.getElementById("uno_caja").value = data.suma_1 || 0;
                            document.getElementById("decimal_caja").value = data.suma_decimales || 0;

                            // Calcular la suma total
                            // let sumaTotal = 0;
                            // Object.values(data).forEach(value => {
                            //     if (typeof value === 'number') {
                            //         sumaTotal += value;
                            //     }
                            // });

                            // document.getElementById("labelEntrada").textContent = `Entrada de Dinero: $ ${formatearNumero(sumaTotal)}`;
                        });
                    }

                    function calcularTotalesEntrada() {
                        const inputsEntrada = document.querySelectorAll('#desgloseEntrada input[data-amount]');
                        let totalEntrada = 0;

                        inputsEntrada.forEach(input => {
                            const cantidad = input.value ? parseInt(input.value) : 0;
                            const monto = parseFloat(input.dataset.amount);
                            const total = cantidad * monto;

                            const totalField = document.querySelector(`#total_${input.name}`);
                            if (totalField) {
                                totalField.value = formatearNumero(total);
                            }

                            totalEntrada += total;
                        });

                        document.getElementById('efectivo').value = formatearNumero(totalEntrada);
                        const labelEntrada = document.querySelector('#labelEntrada');
                        if (labelEntrada) {
                            labelEntrada.textContent = `$ ${formatearNumero(totalEntrada)}`;
                        }
                        validarFormatoPagado();
                        calcularAutomaticoDevuelta()
                    }

                    function calcularAutomaticoDevuelta() {

                        let CAN = parseFloat(document.getElementById('devolver').value.replace(/,/g, ''));
                        //   console.log("CAN " +CAN)
                        let C2000 = 0;
                        let C1000 = 0;
                        let C500 = 0;
                        let C200 = 0;
                        let C100 = 0;
                        let C50 = 0;
                        let C25 = 0;
                        let C10 = 0;
                        let C5 = 0;
                        let C1 = 0;
                        let D25 = 0;
                        let D10 = 0;
                        let D05 = 0;
                        let Decimales = 0;

                        if (CAN >= 2000) {
                            C2000 = Math.floor(CAN / 2000);
                            if (parseFloat(document.getElementById('dosmil_caja').value) >= C2000) {
                                CAN -= C2000 * 2000;
                            } else {
                                C2000 = parseFloat(document.getElementById('dosmil_caja').value);
                                CAN -= C2000 * 2000;
                            }
                        }

                        if (CAN >= 1000) {
                            C1000 = Math.floor(CAN / 1000);
                            if (parseFloat(document.getElementById('mil_caja').value) >= C1000) {
                                CAN -= C1000 * 1000;
                            } else {
                                C1000 = parseFloat(document.getElementById('mil_caja').value);
                                CAN -= C1000 * 1000;
                            }
                        }

                        if (CAN >= 500) {
                            C500 = Math.floor(CAN / 500);
                            if (parseFloat(document.getElementById('quinientos_caja').value) >= C500) {
                                CAN -= C500 * 500;
                            } else {
                                C500 = parseFloat(document.getElementById('quinientos_caja').value);
                                CAN -= C500 * 500;
                            }
                        }

                        if (CAN >= 200) {
                            C200 = Math.floor(CAN / 200);
                            if (parseFloat(document.getElementById('doscientos_caja').value) >= C200) {
                                CAN -= C200 * 200;
                            } else {
                                C200 = parseFloat(document.getElementById('doscientos_caja').value);
                                CAN -= C200 * 200;
                            }
                        }

                        if (CAN >= 100) {
                            C100 = Math.floor(CAN / 100);
                            if (parseFloat(document.getElementById('cien_caja').value) >= C100) {
                                CAN -= C100 * 100;
                            } else {
                                C100 = parseFloat(document.getElementById('cien_caja').value);
                                CAN -= C100 * 100;
                            }
                        }

                        if (CAN >= 50) {
                            C50 = Math.floor(CAN / 50);
                            if (parseFloat(document.getElementById('cincuenta_caja').value) >= C50) {
                                CAN -= C50 * 50;
                            } else {
                                C50 = parseFloat(document.getElementById('cincuenta_caja').value);
                                CAN -= C50 * 50;
                            }
                        }

                        if (CAN >= 25) {
                            C25 = Math.floor(CAN / 25);
                            if (parseFloat(document.getElementById('veinticinco_caja').value) >= C25) {
                                CAN -= C25 * 25;
                            } else {
                                C25 = parseFloat(document.getElementById('veinticinco_caja').value);
                                CAN -= C25 * 25;
                            }
                        }

                        if (CAN >= 10) {
                            C10 = Math.floor(CAN / 10);
                            if (parseFloat(document.getElementById('diez_caja').value) >= C10) {
                                CAN -= C10 * 10;
                            } else {
                                C10 = parseFloat(document.getElementById('diez_caja').value);
                                CAN -= C10 * 10;
                            }
                        }

                        if (CAN >= 5) {
                            C5 = Math.floor(CAN / 5);
                            if (parseFloat(document.getElementById('cinco_caja').value) >= C5) {
                                CAN -= C5 * 5;
                            } else {
                                C5 = parseFloat(document.getElementById('cinco_caja').value);
                                CAN -= C5 * 5;
                            }
                        }

                        if (CAN >= 1) {
                            C1 = Math.floor(CAN / 1);
                            if (parseFloat(document.getElementById('uno_caja').value) >= C1) {
                                CAN -= C1 * 1;
                            } else {
                                C1 = parseFloat(document.getElementById('uno_caja').value);
                                CAN -= C1 * 1;
                            }
                        }

                        if (CAN <= 1) {
                            Decimales = Math.floor(CAN / 0.01);
                            CAN -= Decimales * 0.01;
                        }

                        // Asignar los valores a los campos correspondientes
                        document.getElementById('dosmil_salida').value = C2000;
                        document.getElementById('mil_salida').value = C1000;
                        document.getElementById('quinientos_salida').value = C500;
                        document.getElementById('doscientos_salida').value = C200;
                        document.getElementById('cien_salida').value = C100;
                        document.getElementById('cincuenta_salida').value = C50;
                        document.getElementById('veinticinco_salida').value = C25;
                        document.getElementById('diez_salida').value = C10;
                        document.getElementById('cinco_salida').value = C5;
                        document.getElementById('uno_salida').value = C1;
                        document.getElementById('decimal_salida').value = Decimales;

                        calcularTotalesSalida()
                        // Mostrar alerta si no hay cambio suficiente
                        if (CAN > 0) {
                            // console.log(CAN)
                            alert('No hay suficiente cambio disponible en la caja.');
                        }
                    }


                    function calcularTotalesSalida() {
                        const inputsSalida = document.querySelectorAll('#desgloseSalida input[data-amount]');
                        let totalSalida = 0;

                        inputsSalida.forEach(input => {
                            const cantidad = input.value ? parseInt(input.value) : 0;
                            const monto = parseFloat(input.dataset.amount);
                            const total = cantidad * monto;

                            const totalField = document.querySelector(`#total_${input.name}`);
                            if (totalField) {
                                totalField.value = formatearNumero(total);
                            }

                            totalSalida += total;
                        });

                        const labelSalida = document.querySelector('#labelSalida');
                        if (labelSalida) {
                            labelSalida.textContent = `$ ${formatearNumero(totalSalida)}`;
                        }
                    }

                    const inputsEntrada = document.querySelectorAll('#desgloseEntrada input[data-amount]');
                    inputsEntrada.forEach(input => {
                        input.addEventListener('input', calcularTotalesEntrada);
                    });

                    const inputsSalida = document.querySelectorAll('#desgloseSalida input[data-amount]');
                    inputsSalida.forEach(input => {
                        input.addEventListener('input', calcularTotalesSalida);
                    });




                    /////////////////////////////////////////////////////////////////////////////////
                    // Obtener referencias a los campos
                    let completaEfectivo = 0;
                    var btnGuardarVenta = document.getElementById('btnGuardarVenta');
                    var cuentaPorCobrar = document.getElementById('cuentaPorCobrar');
                    var cheque = document.getElementById('cheque');
                    var tarjetaDebito = document.getElementById('tarjetaDebito');
                    var tarjetaCredito = document.getElementById('tarjetaCredito');

                    var monto_a_cobrar = document.getElementById('monto_a_cobrar');

                    // var valorReferencia = parseFloat(monto_a_cobrar.value);

                    // // Establecer el valor máximo del campo objetivo
                    // cheque.setAttribute("max", valorReferencia);
                    // tarjetaCredito.setAttribute("max", valorReferencia);
                    // tarjetaDebito.setAttribute("max", valorReferencia);

                    var devolver = document.getElementById('devolver');

                    var efectivo = document.getElementById('efectivo');
                    // // efectivo.addEventListener('keyup', validarFormatoPagado)
                    // Función para validar el formato del campo pagado
                    function validarFormatoPagado() {

                        // var importeString = monto_a_cobrar.value.replace(/,/g, '');
                        // var importe = parseFloat(importeString) || 0;
                        var pagado = efectivo.value.replace(/,/g, '');

                        pagado = pagado.replace(/[^0-9.]/g, ''); // Eliminar todos los caracteres no numéricos, excepto el punto

                        var partes = pagado.split('.');
                        partes[0] = partes[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","); // Agregar separadores de miles

                        if (partes[1] !== undefined) {
                            partes[1] = partes[1].slice(0, 2); // Limitar a dos decimales
                        }

                        efectivo.value = partes.join('.');

                        pagado = parseFloat(pagado) || 0;

                        // if (pagado > importe) {
                        //   efectivo.value = importe.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        //   pagado = importe;
                        // }

                        // var pendiente = pagado- importe;
                        // console.log(completaEfectivo)
                        var importeString = completaEfectivo.toString().replace(/,/g, '');
                        var importe = parseFloat(importeString) || 0;

                        var pendiente = pagado - importe;
                        devolverEfectivo(pendiente)
                    }

                    function devolverEfectivo(pendiente) {
                        // if(completaEfectivo == 0)
                        $('#cuentaPorCobrar').val(pendiente * (-1) > 0 ? (pendiente * (-1)).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") : 0)
                        devolver.value = pendiente >= 0 ? pendiente.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") : '';
                        if (devolver.value != '') {
                            btnGuardarVenta.removeAttribute("disabled");
                        } else {
                            btnGuardarVenta.setAttribute("disabled", "disabled");
                        }
                    }

                    /////////////////////los campos a calcular
                    function formatAndSetNumber(input) {
                        // console.log('El input ', input.value)
                        var importeString = monto_a_cobrar.value.replace(/,/g, '');
                        var importe = parseFloat(importeString) || 0;

                        var debitoString = tarjetaDebitoInput.value.replace(/,/g, '');
                        var debito = parseFloat(debitoString) || 0;

                        var creditoString = tarjetaCreditoInput.value.replace(/,/g, '');
                        var credito = parseFloat(creditoString) || 0;

                        var chequeString = chequeInput.value.replace(/,/g, '');
                        var cheque = parseFloat(chequeString) || 0;

                        var efectivoString = efectivoInput.value.replace(/,/g, '');
                        var efectivo = parseFloat(efectivoString) || 0;

                        var montoNotaCreditoString = montoNotaCreditoInput.value.replace(/,/g, '');
                        var montoNotaCredito = parseFloat(montoNotaCreditoString) || 0;

                        var pagoConBonoString = pagoConBonoInput.value.replace(/,/g, '');
                        var pagoConBono = parseFloat(pagoConBonoString) || 0;

                        var pendiente = importe - debito - credito - cheque - montoNotaCredito - pagoConBono;
                        pendienteR = importe - debito - credito - cheque - montoNotaCredito - pagoConBono;
                        completaEfectivo = pendiente > 0 ? pendiente.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") : 0;

                        var valorMaxEntero = Math.round(parseFloat(pendienteR));
                        pendiente - efectivo
                        // console.log('valor max ' + valorMaxEntero)
                        if (debito < pendienteR && input != tarjetaDebitoInput) {
                            tarjetaDebitoInput.setAttribute("maxlength", valorMaxEntero.toString());
                            // console.log('debito ' + debito)
                            // console.log('debito ' + valorMaxEntero)
                        }

                        if (credito < pendienteR && input != tarjetaCreditoInput) {
                            tarjetaCreditoInput.setAttribute("maxlength", valorMaxEntero.toString());
                            // console.log('credito ' + credito)
                            // console.log('credito ' + valorMaxEntero)
                        }
                        if (cheque < pendienteR && input != chequeInput) {
                            chequeInput.setAttribute("maxlength", valorMaxEntero.toString());
                            // console.log('cheque ' + cheque)
                            // console.log('cheque ' + valorMaxEntero)

                        }


                        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                        var formatInput = input.value.replace(/,/g, '');
                        formatInput = formatInput.replace(/[^0-9.]/g, ''); // Eliminar todos los caracteres no numéricos, excepto el punto

                        var partes = formatInput.split('.');
                        partes[0] = partes[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","); // Agregar separadores de miles

                        if (partes[1] !== undefined) {
                            partes[1] = partes[1].slice(0, 2); // Limitar a dos decimales
                        }

                        input.value = partes.join('.');
                        var importeString = completaEfectivo.toString().replace(/,/g, '');
                        var importe = parseFloat(importeString) || 0;

                        var pendienteD = efectivo - importe;
                        devolverEfectivo(pendienteD)

                        // $('#cuentaPorCobrar').val(pendienteR-efectivo)
                        // Validar si el valor excede el maxlength
                        if (0 > pendienteR) {
                            efectivoInput.value = '';
                            efectivoInput.setAttribute("disabled", "disabled");
                            devolver.value = '';
                            input.value = (parseFloat(formatInput) + parseFloat(pendienteR)).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            // console.log('Entro al kk')
                        } else {
                            efectivoInput.removeAttribute("disabled");
                        }
                    }

                    // Obtener los elementos del formulario
                    var tarjetaDebitoInput = document.getElementById("tarjetaDebito");
                    var tarjetaCreditoInput = document.getElementById("tarjetaCredito");
                    var chequeInput = document.getElementById("cheque");
                    var notaCreditoInput = document.getElementById("notaCredito");
                    var notaDeCreditoInput = document.getElementById("notaDeCredito");
                    var montoNotaCreditoInput = document.getElementById("montoNotaCredito");
                    var pagoConBonoInput = document.getElementById("pagoConBono");
                    var efectivoInput = document.getElementById("efectivo");
                    var montoACobrarInput = document.getElementById("monto_a_cobrar");

                    // Manejar el evento de cambio en el campo "efectivo"
                    efectivoInput.addEventListener("input", function () {
                        var efectivoValue = parseFloat(efectivoInput.value.replace(",", ""));
                        var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));
                        validarFormatoPagado();
                        formatAndSetNumber(efectivoInput);
                        if (efectivoValue >= montoACobrarValue) {
                            // Desactivar los campos restantes
                            tarjetaDebitoInput.disabled = true;
                            tarjetaCreditoInput.disabled = true;
                            chequeInput.disabled = true;
                            //   notaCreditoInput.disabled = true;
                            //   montoNotaCreditoInput.disabled = true;
                        } else {
                            // Habilitar los campos restantes
                            tarjetaDebitoInput.disabled = false;
                            tarjetaCreditoInput.disabled = false;
                            chequeInput.disabled = false;
                            //   notaCreditoInput.disabled = false;
                            //   montoNotaCreditoInput.disabled = false;
                        }
                    });


                    // Manejar el evento de cambio en el campo "efectivo"
                    tarjetaDebitoInput.addEventListener("input", function () {
                        var tarjetaDebitoValue = parseFloat(tarjetaDebitoInput.value.replace(",", ""));
                        var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));
                        validarFormatoPagado();
                        formatAndSetNumber(tarjetaDebitoInput);
                        if (tarjetaDebitoValue >= montoACobrarValue) {
                            // Desactivar los campos restantes
                            efectivoInput.disabled = true;
                            tarjetaCreditoInput.disabled = true;
                            chequeInput.disabled = true;
                            //   notaCreditoInput.disabled = true;
                            //   montoNotaCreditoInput.disabled = true;
                        } else {
                            // Habilitar los campos restantes
                            efectivoInput.disabled = false;
                            tarjetaCreditoInput.disabled = false;
                            chequeInput.disabled = false;
                            //   notaCreditoInput.disabled = false;
                            //   montoNotaCreditoInput.disabled = false;
                        }
                    });


                    // Manejar el evento de cambio en el campo "efectivo"
                    tarjetaCreditoInput.addEventListener("input", function () {
                        var tarjetaCreditoValue = parseFloat(tarjetaCreditoInput.value.replace(",", ""));
                        var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));
                        validarFormatoPagado();
                        formatAndSetNumber(tarjetaCreditoInput);
                        if (tarjetaCreditoValue >= montoACobrarValue) {
                            // Desactivar los campos restantes
                            efectivoInput.disabled = true;
                            tarjetaDebitoInput.disabled = true;
                            chequeInput.disabled = true;
                            //   notaCreditoInput.disabled = true;
                            //   montoNotaCreditoInput.disabled = true;
                        } else {
                            // Habilitar los campos restantes
                            efectivoInput.disabled = false;
                            tarjetaDebitoInput.disabled = false;
                            chequeInput.disabled = false;
                            //   notaCreditoInput.disabled = false;
                            //   montoNotaCreditoInput.disabled = false;
                        }
                    });

                    // Manejar el evento de cambio en el campo "efectivo"
                    chequeInput.addEventListener("input", function () {
                        var chequeValue = parseFloat(chequeInput.value.replace(",", ""));
                        var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));
                        validarFormatoPagado();
                        formatAndSetNumber(chequeInput);
                        if (chequeValue >= montoACobrarValue) {
                            // Desactivar los campos restantes
                            efectivoInput.disabled = true;
                            tarjetaDebitoInput.disabled = true;
                            tarjetaCreditoInput.disabled = true;
                            //   notaCreditoInput.disabled = true;
                            //   montoNotaCreditoInput.disabled = true;
                        } else {
                            // Habilitar los campos restantes
                            efectivoInput.disabled = false;
                            tarjetaDebitoInput.disabled = false;
                            tarjetaCreditoInput.disabled = false;
                            //   notaCreditoInput.disabled = false;
                            //   montoNotaCreditoInput.disabled = false;
                        }
                    });
                    // Manejar el evento de cambio en el campo "efectivo"
                    pagoConBonoInput.addEventListener("input", function () {
                        var pagoConBonoValue = parseFloat(pagoConBonoInput.value.replace(",", ""));
                        var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));
                        validarFormatoPagado();
                        formatAndSetNumber(pagoConBonoInput);
                        if (pagoConBonoValue >= montoACobrarValue) {
                            // Desactivar los campos restantes
                            efectivoInput.disabled = true;
                            tarjetaDebitoInput.disabled = true;
                            tarjetaCreditoInput.disabled = true;
                            //   notaCreditoInput.disabled = true;
                            //   montoNotaCreditoInput.disabled = true;
                        } else {
                            // Habilitar los campos restantes
                            efectivoInput.disabled = false;
                            tarjetaDebitoInput.disabled = false;
                            tarjetaCreditoInput.disabled = false;
                            //   notaCreditoInput.disabled = false;
                            //   montoNotaCreditoInput.disabled = false;
                        }
                    });

                    function consultarNotaDeCredito(numeroDeNota) { // el id que llega es el id del departamento

                        $.post(`/facturacion/consultarNotaDeCredito/${numeroDeNota}`, async function (data) {
                            if (data != "Algo anda mal en la venta temproral") {


                            }
                        });

                    }
                    // Nota de Creditos NC
                    // notaCreditoInput.addEventListener("keydown", function (e) {
                    //     if (e.key === 'Enter' || e.keyCode === 32) {
                    //         e.preventDefault(); // Evitar el comportamiento por defecto al presionar Enter o espacio
                    //         let codigo = $(this).val().trim();
                    //         if (codigo !== '') {
                    //             // buscarProctoPorCodigo(codigo);

                    //             montoNotaCreditoInput.value = $(this).val();
                    //             var notaDeCreditoValue = parseFloat(montoNotaCreditoInput.value.replace(",", ""));
                    //             var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));

                    //             validarFormatoPagado();
                    //             formatAndSetNumber(montoNotaCreditoInput);
                    //             notaCreditoInput
                    //             // $(this).val(''); // Limpiar el campo de búsqueda después de realizar la búsqueda
                    //         }
                    //     }
                    //     // var notaCreditoValue = parseFloat(notaCreditoInput.value.replace(",", ""));
                    //     // var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));
                    //     // validarFormatoPagado();
                    //     // formatAndSetNumber(notaCreditoInput);
                    //     // if (notaCreditoValue >= montoACobrarValue) {
                    //     //     // Desactivar los campos restantes
                    //     //     efectivoInput.disabled = true;
                    //     //     tarjetaDebitoInput.disabled = true;
                    //     //     tarjetaCreditoInput.disabled = true;
                    //     //     //   notaCreditoInput.disabled = true;
                    //     //     //   montoNotaCreditoInput.disabled = true;
                    //     // } else {
                    //     //     // Habilitar los campos restantes
                    //     //     efectivoInput.disabled = false;
                    //     //     tarjetaDebitoInput.disabled = false;
                    //     //     tarjetaCreditoInput.disabled = false;
                    //     //     //   notaCreditoInput.disabled = false;
                    //     //     //   montoNotaCreditoInput.disabled = false;
                    //     // }
                    // });

                    // Manejar el evento de cambio en el campo "efectivo"
                    // montoNotaCreditoInput.addEventListener("change", function () {

                    //     if (notaDeCreditoValue >= montoACobrarValue) {
                    //         // Desactivar los campos restantes
                    //         efectivoInput.disabled = true;
                    //         tarjetaDebitoInput.disabled = true;
                    //         tarjetaCreditoInput.disabled = true;
                    //         //   notaCreditoInput.disabled = true;
                    //         //   montoNotaCreditoInput.disabled = true;
                    //     } else {
                    //         // Habilitar los campos restantes
                    //         efectivoInput.disabled = false;
                    //         tarjetaDebitoInput.disabled = false;
                    //         tarjetaCreditoInput.disabled = false;
                    //         //   notaCreditoInput.disabled = false;
                    //         //   montoNotaCreditoInput.disabled = false;
                    //     }
                    // });

                    // Habilitar el campo de Monto de Nota al seleccionar Nota de Crédito
                    $('#notaDeCredito').change(function () {
                        var isChecked = $(this).prop('checked');
                        if (!isChecked) {
                            // $('#montoNotaCredito').val('');
                            montoNotaCreditoInput.value = '';
                            formatAndSetNumber(montoNotaCreditoInput);
                            document.getElementById("notaCredito").value = "";

                        } else {
                            $('#modalVerificarNotaCredito').modal('show');
                            document.getElementById("notaCredito").value = "";

                        }
                        // $('#notaCredito').prop('disabled', !isChecked).val('');
                        // document.getElementById('notaCredito').focus();
                        // $('#montoNotaCredito').prop('disabled', !isChecked).val('');
                        // efectivoInput.value = '';
                        // tarjetaDebitoInput.value = '';
                        // tarjetaCreditoInput.value = '';
                        // chequeInput.value = '';
                        // notaCreditoInput.value = '';
                        // montoNotaCreditoInput.value = '';
                        // devolver.value = '';

                    });

                    var pendienteR = 0;

                    // Agregar evento click al botón de guardar venta
                    btnGuardarVenta.addEventListener('click', function () {
                        // Verificar que al menos uno de los campos no sea nulo
                        if (!cuentaPorCobrar.value && !cheque.value && !tarjetaDebito.value && !tarjetaCredito.value && !efectivo.value) {
                            // Mostrar mensaje de error
                            alert('Debes ingresar al menos uno de los campos: cuenta por cobrar, cheque, tarjeta de débito, tarjeta de crédito o efectivo.');
                            return;
                        }

                        obtenerValoresCampos();
                        // Verificar si se ingresó dinero en efectivo
                        // if (efectivo.value) {
                        // Verificar que se haya ingresado el dinero recibido
                        // if (!recibido.value) {
                        //     alert('Debes ingresar el dinero recibido.');
                        //     recibido.focus();
                        //     return;
                        // }


                        // }

                        // Aquí puedes continuar con la lógica de guardar la venta
                    });

                    async function obtenerValoresCampos() {
                        // Obtengo los datos de la tabla y los paso al arreglo datos
                        let tabla = document.querySelector('.detalleDeFacturacion');
                        let filas = tabla.querySelectorAll('tbody tr');
                        let datos = [];

                        // Recorre cada fila de la tabla
                        filas.forEach((fila) => {
                            let celdas = fila.querySelectorAll('td');
                            let filaDatos = [];

                            // Recorre las celdas de la fila actual
                            celdas.forEach((celda) => {
                                // Verifica si la celda contiene un <select>
                                let select = celda.querySelector('select');
                                if (select) {
                                    // Obtiene el valor seleccionado (el ID del elemento)
                                    let valor = select.value;
                                    filaDatos.push(valor);
                                } else {
                                    // Si no es un <select>, obtiene el valor de texto normal
                                    let valor = celda.textContent.trim();
                                    filaDatos.push(valor);
                                }
                            });

                            datos.push(JSON.stringify(filaDatos));
                        });

                        // // Obtengo los datos de la tabla y los paso al arreglo datos
                        // const tabla = document.querySelector('.table');
                        // const filas = tabla.querySelectorAll('tbody tr');
                        // const datos = [];

                        // // Recorre cada fila de la tabla
                        // filas.forEach((fila) => {
                        //     const celdas = fila.querySelectorAll('td');
                        //     const filaDatos = [];

                        //     // Recorre las celdas de la fila actual
                        //     celdas.forEach((celda) => {
                        //         const valor = celda.textContent.trim();
                        //         filaDatos.push(valor);
                        //     });

                        //     datos.push(filaDatos);
                        // });



                        // Puedes realizar más acciones con los valores obtenidos aquí, como enviarlos a través de una solicitud AJAX o realizar cálculos adicionales.

                        if (datos != '') {
                            // Obtiene los valores de los campos adicionales
                            const subTotal = document.getElementById('subTotal').value;
                            const masItbis = document.getElementById('masItbis').value;
                            const descuento = document.getElementById('descuento').value;
                            const servicio = document.getElementById('servicio').checked;
                            const maselservicio = document.getElementById('maselservicio').value;
                            const totalCobrar = document.getElementById('totalCobrar').value;
                            const nombreCliente = document.getElementById('nombre_cliente').value;
                            const rncCliente = document.getElementById('rnc_cliente').value;
                            const celularCliente = document.getElementById('celular_cliente').value;
                            const codncf = document.getElementById('codncf').value;
                            const comprobante = document.getElementById('comprobante').value;

                            const fechaDeVencimiento = document.getElementById("fechaDeVencimiento").value;
                            const tarjetaDebito = document.getElementById("tarjetaDebito").value;
                            const pagoConBono = document.getElementById("pagoConBono").value;
                            const cheque = document.getElementById("cheque").value;
                            const condicionVenta = document.getElementById("condicionVenta").value;
                            const tarjetaCredito = document.getElementById("tarjetaCredito").value;
                            const notaDeCredito = document.getElementById("notaDeCredito").checked;
                            const notaCredito = document.getElementById("notaCredito").value;
                            const montoNotaCredito = document.getElementById("montoNotaCredito").value;
                            const cuentaPorCobrar = document.getElementById("cuentaPorCobrar").value;
                            const efectivo = document.getElementById("efectivo").value;
                            const devolver = document.getElementById("devolver").value;
                            const notaVenta = document.getElementById("notaVenta").value;

                            let id_caja_detalle = '<%= caja.id_caja_detalle %>';
                            let id_caja = '<%= caja.id_caja %>';
                            let id_turno = '<%= caja.id_turno %>';
                            let id_cajero = '<%= caja.id_cajero %>';
                            let id_supervisor = '<%= caja.id_supervisor %>';
                            let id_empresa = '<%= caja.id_empresa %>';
                            let caja = '<%= caja.nombre %>'


                            // cd.id_caja_detalle, cd.id_caja, cd.id_turno, cd.id_cajero, cd.id_supervisor, cd.id_empresa, cd.id_sucursal, cd.id_almacen
                            // Crea un objeto con los datos a enviar
                            const datosParaEnviar = {
                                id_almacen: id_almacen,
                                subTotal: subTotal,
                                masItbis: masItbis,
                                descuento: descuento,
                                servicio: servicio,
                                maselservicio: maselservicio,
                                totalCobrar: totalCobrar,
                                id_cliente: id_cliente,
                                nombreCliente: nombreCliente,
                                rncCliente: rncCliente,
                                celularCliente: celularCliente,
                                codncf: codncf,
                                comprobante: comprobante,
                                fechaDeVencimiento: fechaDeVencimiento,
                                tarjetaDebito: tarjetaDebito,
                                pagoConBono: pagoConBono,
                                cheque: cheque,
                                condicionVenta: condicionVenta,
                                tarjetaCredito: tarjetaCredito,
                                notaDeCredito: notaDeCredito,
                                notaCredito: notaCredito,
                                montoNotaCredito: montoNotaCredito,
                                cuentaPorCobrar: cuentaPorCobrar,
                                efectivo: efectivo,
                                devolver: devolver,
                                notaVenta: notaVenta,
                                tabla: datos,
                                id_mesa: document.getElementById('id_mesa').value,
                                mesa: document.getElementById('mesa').value,
                                id_camarero: document.getElementById('id_camarero').value,
                                numero_pedido: N_pedido,

                                id_caja_detalle: id_caja_detalle,
                                id_caja: id_caja,
                                caja: caja,
                                id_turno: id_turno,
                                id_cajero: id_cajero,
                                id_supervisor: id_supervisor,
                                id_empresa: id_empresa,

                                dosmil_entrada: document.getElementById("dosmil_entrada").value,
                                mil_entrada: document.getElementById("mil_entrada").value,
                                quinientos_entrada: document.getElementById("quinientos_entrada").value,
                                doscientos_entrada: document.getElementById("doscientos_entrada").value,
                                cien_entrada: document.getElementById("cien_entrada").value,
                                cincuenta_entrada: document.getElementById("cincuenta_entrada").value,
                                veinticinco_entrada: document.getElementById("veinticinco_entrada").value,
                                diez_entrada: document.getElementById("diez_entrada").value,
                                cinco_entrada: document.getElementById("cinco_entrada").value,
                                uno_entrada: document.getElementById("uno_entrada").value,
                                decimal_entrada: document.getElementById("decimal_entrada").value,

                                dosmil_salida: document.getElementById("dosmil_salida").value,
                                mil_salida: document.getElementById("mil_salida").value,
                                quinientos_salida: document.getElementById("quinientos_salida").value,
                                doscientos_salida: document.getElementById("doscientos_salida").value,
                                cien_salida: document.getElementById("cien_salida").value,
                                cincuenta_salida: document.getElementById("cincuenta_salida").value,
                                veinticinco_salida: document.getElementById("veinticinco_salida").value,
                                diez_salida: document.getElementById("diez_salida").value,
                                cinco_salida: document.getElementById("cinco_salida").value,
                                uno_salida: document.getElementById("uno_salida").value,
                                decimal_salida: document.getElementById("decimal_salida").value
                            };
                            console.log("datos para enviar ===>", datosParaEnviar)

                            // Envía los datos mediante fetch
                            // let response = await fetch('/facturacion/imprimeCobra', {
                            //     method: 'POST',
                            //     headers: {
                            //         'Content-Type': 'application/json'
                            //     },
                            //     body: JSON.stringify(datosParaEnviar)
                            // })

                            // if (response.ok) {
                            //     // id_cliente = cliente;
                            //     id_cliente = 0;
                            //     console.log(respo)
                            //     buscarVentaTemporal();
                            //     $('#modalDetalleDelPago').modal('hide');
                            // }

                            ////////////////////////////////////////////////////////////////////////////////////////////////////////
                            fetch('/facturacion/imprimeCobra', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(datosParaEnviar)
                            })
                                .then(response => response.json())
                                .then(data => {
                                    // Hacer algo con la respuesta del servidor si es necesario
                                    // console.log(data);
                                    if (data != "Algo anda mal en la venta temproral") {

                                        id_cliente = 0;
                                        // console.log(respo)
                                        document.getElementById("servicio").checked = false;
                                        buscarVentaTemporal(caja, mesa, 1);
                                        $('#modalDetalleDelPago').modal('hide');
                                        var jsonData = JSON.stringify(data);
                                        fetch("http://localhost:8081?printer=" + "POS80", {
                                            method: "POST",
                                            body: jsonData
                                        })
                                            .then(response => {
                                                if (response.ok) {
                                                    console.log("Texto enviado a imprimir.");
                                                    location.reload();
                                                } else {
                                                    console.log("Error al enviar el texto a imprimir:", response.status);
                                                }
                                            })
                                            .catch(error => {
                                                console.log("Error al enviar el texto a imprimir:", error);
                                            });
                                    }

                                })
                                .catch(error => {
                                    // Manejar errores en caso de que ocurra alguno durante la solicitud
                                    console.error('Error:', error);
                                });

                            ///////////////////////////////////////////////////////////////////////////////////////////////////////
                        } else {
                            console.log("No hay factura por imprimir")
                        }
                    }



                    $(document).ready(function () {
                        // Obtener fecha y hora actual
                        var now = new Date();
                        var formattedDate = now.toISOString().substring(0, 16); // Formato: YYYY-MM-DDTHH:mm
                        $('#fechaDeVencimiento').val(formattedDate);

                        // Al cargar la página, habilitar solo el campo de efectivo
                        $('#elEfectivo').prop('checked', true);
                        $('#efectivo').prop('disabled', false);

                        // Inhabilitar los demás radios y sus campos
                        // $('input[name="formaDePago"]').not('#elEfectivo').prop('checked', false);
                        // $('input[name="formaDePago"]').not('#elEfectivo').next('label').removeClass('active');
                        // $('input[name="formaDePago"]').not('#elEfectivo').nextAll('input[type="text"]').prop('disabled', true);
                        // Inhabilitar los campos de Abono, Nota de Crédito y Monto de Nota
                        $('#cuentaPorCobrar').prop('disabled', true);
                        $('#notaCredito').prop('disabled', true);
                        $('#montoNotaCredito').prop('disabled', true);


                        // Habilitar solo el campo correspondiente al método de pago seleccionado
                        // $('input[name="formaDePago"]').change(function () {
                        //     var selectedPaymentMethod = $(this).attr('id');
                        //     $('input[type="text"]').prop('disabled', true).val('');
                        //     $('label[for="' + selectedPaymentMethod + '"]').next('input[type="text"]').prop('disabled', false);
                        // });

                        // Habilitar el campo de Cuenta por Cobrar y requerir condición diferente a "contado"
                        $('#laCuentaPorCobrar').change(function () {
                            var isChecked = $(this).prop('checked');
                            $('#btnGuardarVenta').prop('disabled', !isChecked);
                            // $('#abono').prop('disabled', !isChecked || !$('#elAbono').prop('checked')).val('');
                            // $('#condicionVenta').prop('required', isChecked);
                            // $('#cuentaPorCobrar').val(pendienteR)
                            // if (!isChecked) {
                            //     // $('#abono').prop('disabled', true).val('');
                            //     $('#condicionVenta').val('');
                            // }
                        });

                        // Habilitar el campo de Abono solo cuando se marque la casilla correspondiente y se seleccione Cuenta por Cobrar
                        // $('#elAbono').change(function () {
                        //     var isChecked = $(this).prop('checked');
                        //     if ($('#laCuentaPorCobrar').prop('checked')) {
                        //         $('#abono').prop('disabled', !isChecked).val('');
                        //     } else {
                        //         $('#abono').prop('disabled', true).val('');
                        //         $(this).prop('checked', false);
                        //     }
                        // });

                        // Inhabilitar el campo de Abono al seleccionar otro radio que no sea Cuenta por Cobrar
                        // $('input[name="formaDePago"]').not('#laCuentaPorCobrar').change(function () {
                        //     $('#abono').prop('disabled', true).val('');
                        //     $('#elAbono').prop('checked', false);
                        // });


                    });

                </script>
            </div>
        </div>
    </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA PROCESAR VENTA////////////////////////////////////////////////////// -->
    
    <!-- ///////////////////////INICIO MODAL CUADRE DE CAJA////////////////////////////////////////////////////// -->

    <!-- Segundo Modal -->
    <div class="modal fade" id="modalCuadreDeCaja" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitleProcesarOrden" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered anchotablafull" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white" id="exampleModalCenterTitleProcesarOrden">CUADRE DE <strong>CAJA:
                            <%= caja.nombre %> - TURNO: <%= caja.id_turno %>
                        </strong></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="card">

                        <div class="card-body row g-3">

                            <!-- aqui va el desglose -->
                            <form id="formularioCuadreCaja" class="row g-3" action="facturacion/cerrarCaja"
                                method="POST">
                                <!-- Sección de Desglose de Dinero -->

                                <div id="desgloseEntrada" class="card col-8 mx-4">
                                    <input type="hidden" class="form-control" name="caja" id="caja"
                                        value="<%= caja.id_caja %>" readonly>

                                    <div class="row g-3 py-2">
                                        <div class="card-header">
                                            <h5>Movimiento en caja </h5>
                                        </div>
                                        <div class="col-md-3">
                                            <label for="tarjetaDebitoTotal" class="form-label text-black">Tarjeta de
                                                Débito (<strong id="cantidadDebito"></strong>)</label>
                                            <input type="text" class="form-control" name="tarjetaDebitoTotal"
                                                id="tarjetaDebitoTotal" placeholder="Monto en tarjeta de débito"
                                                style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="pagoConBonoTotal" class="form-label text-black">Pago con
                                                Bono (<strong id="cantidadBono"></strong>)</label>
                                            <input type="text" class="form-control" name="pagoConBonoTotal"
                                                id="pagoConBonoTotal" style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="chequeTotal" class="form-label text-black">Cheque (<strong
                                                    id="cantidadCheque"></strong>)</label>
                                            <input type="text" class="form-control" name="chequeTotal" id="chequeTotal"
                                                placeholder="Monto del cheque" style='text-align: right;' readonly>
                                        </div>


                                        <div class="col-md-3">
                                            <label for="tarjetaCreditoTotal" class="form-label text-black">Tarjeta
                                                de
                                                Crédito (<strong id="cantidadCredito"></strong>)</label>
                                            <input type="text" class="form-control" name="tarjetaCreditoTotal"
                                                id="tarjetaCreditoTotal" placeholder="Monto en tarjeta de crédito"
                                                style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="montoNotaCreditoTotal" class="form-label text-black">Monto
                                                de
                                                Nota (<strong id="cantidadNota"></strong>)</label>
                                            <input type="text" class="form-control" name="montoNotaCreditoTotal"
                                                id="montoNotaCreditoTotal" style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="laCuentaPorCobrar" class="form-label text-black">Cuenta por
                                                Cobrar (<strong id="cantidadPorCobrar"></strong>)</label>
                                            <input type="text" class="form-control" name="cuentaPorCobrarTotal"
                                                id="cuentaPorCobrarTotal" style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="efectivoTotal" class="form-label text-black">Efectivo</label>
                                            <input type="text" class="form-control" name="efectivoTotal"
                                                id="efectivoTotal" style='text-align: right;' readonly>
                                        </div>


                                        <div class="col-md-3">
                                            <label for="devolverTotal" class="form-label text-black">Devolver</label>
                                            <input type="text" class="form-control" name="devolverTotal"
                                                id="devolverTotal" style='text-align: right;' disabled>
                                        </div>
                                    </div>




                                    <div class="row g-3 py-5">
                                        <div class="card-header">
                                        </div>
                                        <div class="col-md-3">
                                            <label for="monto_inicial_en_caja" class="form-label text-black">Monto
                                                inicial en caja</label>
                                            <input type="text" class="form-control" name="monto_inicial_en_caja"
                                                id="monto_inicial_en_caja" placeholder="Monto inicial en caja"
                                                style='text-align: right;' readonly>
                                        </div>


                                        <div class="col-md-3">
                                            <label for="totalVendido" class="form-label text-black">Total
                                                vendido</label>
                                            <input type="text" class="form-control" name="totalVendido"
                                                id="totalVendido" placeholder="Monto del cheque"
                                                style='text-align: right;' readonly>
                                        </div>


                                        <div class="col-md-3">
                                            <label for="tarjetaCredito" class="form-label text-black">Total en
                                                banco</label>
                                            <input type="text" class="form-control" name="totalEnBanco"
                                                id="totalEnBanco" placeholder="Monto en tarjeta de crédito"
                                                style='text-align: right;' readonly>
                                        </div>



                                        <div class="col-md-3">
                                            <label for="laCuentaPorCobrar" class="form-label text-black">Total
                                                descuento</label>
                                            <input type="text" class="form-control" name="totalDescuento"
                                                id="totalDescuento" style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="efectivo" class="form-label text-black">Total Itbis</label>
                                            <input type="text" class="form-control" name="totalItbis" id="totalItbis"
                                                style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="diferencia" class="form-label text-black">Diferencia</label>
                                            <input type="text" class="form-control" name="diferencia" id="diferencia"
                                                style='text-align: right;' readonly>
                                        </div>

                                        <div class="col-md-3">
                                            <label for="pagoConBono" class="form-label text-black">Total en
                                                caja</label>
                                            <input type="text" class="form-control" name="totalFinalEnCaja"
                                                id="totalFinalEnCaja" style='text-align: right;' readonly>
                                        </div>

                                    </div>



                                </div>
                                <div id="desgloseFinalEnCaja" style="display: flex;" class="col-3 ">
                                    <div class="row">
                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="dosMilFinalEnCaja"
                                                    class="form-label text-black col-md-12">2000 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="dosMilFinalEnCaja" id="dosMilFinalEnCaja"
                                                    class="form-control text-end" data-amount="2000" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalDosMilFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalDosMilFinalEnCaja"
                                                    id="totalDosMilFinalEnCaja" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="milFinalEnCaja" class="form-label text-black col-md-12">1000
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="milFinalEnCaja" id="milFinalEnCaja"
                                                    class="form-control text-end" data-amount="1000" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalMilFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalMilFinalEnCaja" id="totalMilFinalEnCaja"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="quinientosFinalEnCaja"
                                                    class="form-label text-black col-md-12">500 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="quinientosFinalEnCaja"
                                                    id="quinientosFinalEnCaja" class="form-control text-end"
                                                    data-amount="500" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalQuinientosFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalQuinientosFinalEnCaja"
                                                    id="totalQuinientosFinalEnCaja" class="form-control text-end"
                                                    min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="doscientosFinalEnCaja"
                                                    class="form-label text-black col-md-12">200 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="doscientosFinalEnCaja"
                                                    id="doscientosFinalEnCaja" class="form-control text-end"
                                                    data-amount="200" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalDoscientosFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalDoscientosFinalEnCaja"
                                                    id="totalDoscientosFinalEnCaja" class="form-control text-end"
                                                    min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cienFinalEnCaja" class="form-label text-black col-md-12">100
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cienFinalEnCaja" id="cienFinalEnCaja"
                                                    class="form-control text-end" data-amount="100" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalCienFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalCienFinalEnCaja" id="totalCienFinalEnCaja"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cincuentaFinalEnCaja"
                                                    class="form-label text-black col-md-12">50 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cincuentaFinalEnCaja"
                                                    id="cincuentaFinalEnCaja" class="form-control text-end"
                                                    data-amount="50" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalCincuentaFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalCincuentaFinalEnCaja"
                                                    id="totalCincuentaFinalEnCaja" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="veinticincoFinalEnCaja"
                                                    class="form-label text-black col-md-12">25 X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="veinticincoFinalEnCaja"
                                                    id="veinticincoFinalEnCaja" class="form-control text-end"
                                                    data-amount="25" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalVeinticincoFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalVeinticincoFinalEnCaja"
                                                    id="totalVeinticincoFinalEnCaja" class="form-control text-end"
                                                    min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="diezFinalEnCaja" class="form-label text-black col-md-12">10
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="diezFinalEnCaja" id="diezFinalEnCaja"
                                                    class="form-control text-end" data-amount="10" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalDiezFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalDiezFinalEnCaja" id="totalDiezFinalEnCaja"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="cincoFinalEnCaja" class="form-label text-black col-md-12">5
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="cincoFinalEnCaja" id="cincoFinalEnCaja"
                                                    class="form-control text-end" data-amount="5" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalCincoFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalCincoFinalEnCaja"
                                                    id="totalCincoFinalEnCaja" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="unoFinalEnCaja" class="form-label text-black col-md-12">1
                                                    X</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="unoFinalEnCaja" id="unoFinalEnCaja"
                                                    class="form-control text-end" data-amount="1" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalUnoFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalUnoFinalEnCaja" id="totalUnoFinalEnCaja"
                                                    class="form-control text-end" min="0" readonly>
                                            </div>
                                        </div>

                                        <div class="col-md-12 d-flex">
                                            <div class="col-md-3 text-end pt-2">
                                                <label for="decimalFinalEnCaja"
                                                    class="form-label text-black col-md-12">Decimal</label>
                                            </div>
                                            <div class="col-md-3 mx-3">
                                                <input type="number" name="decimalFinalEnCaja" id="decimalFinalEnCaja"
                                                    class="form-control text-end" data-amount="0.01" min="0">
                                            </div>
                                            <div class="text-end pt-2">
                                                <label for="totalDecimalFinalEnCaja"
                                                    class="form-label text-black col-md-12">=</label>
                                            </div>
                                            <div class="col-md-6 mx-3">
                                                <input type="text" name="totalDecimalFinalEnCaja"
                                                    id="totalDecimalFinalEnCaja" class="form-control text-end" min="0"
                                                    readonly>
                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <!-- Final del desglose -->
                                <div class="col-md-12">
                                    <label for="notaVenta" class="form-label text-black">Nota<strong
                                            style="color: red;">*</strong></label>
                                    <textarea class="col-md-12" name="notaFinalVenta" id="notaFinalVenta" cols="auto"
                                        rows="3" maxlength="225" required></textarea>
                                </div>

                                
                                    <div class="col-md-12 text-center pt-1">
                                        <button type="button" id="btnCerrarCaja"
                                            class="btn btn-warning col-md-4 my-3">CERRAR CAJA</button>
                                    </div>
                            </form>
                        </div>


                    </div>
                </div>

                <script>


                    // document.getElementById('btnGuardarOrden').addEventListener('click', obtenerDatosTabla);


                </script>
            </div>
        </div>
    </div>
    </div>

    <!-- ///////////////////////FINAL DEL MODAL PARA PROCESAR VENTA////////////////////////////////////////////////////// -->
    <script>
        // Obtener el botón de guardar
        var btnCerrarCaja = document.getElementById('btnCerrarCaja');

        // Agregar el listener de eventos click al botón de guardar
        btnCerrarCaja.addEventListener('click', function (event) {
            event.preventDefault(); // Evitar el envío del formulario por defecto

            // Invocar la función para mostrar el modal de autorización
            quevalida = 'cuadreCaja'
            mostrarModalAutorizacion();
        });

        function validarAcceso(data, quevalida) {

            if (data.supervisa_caja && quevalida == 'cuadreCaja') {

                let formulario = document.getElementById('formularioCuadreCaja');

                Swal.fire({
                    title: `¿Deseas cerrar la caja <%= caja.nombre %>?`,
                    showDenyButton: true,
                    // showCancelButton: true,
                    confirmButtonText: 'Si',
                    denyButtonText: `No`,
                }).then(async (result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        const inputIdSupervisor = document.createElement('input');

                        // Asignar los atributos name y value al elemento input
                        inputIdSupervisor.setAttribute('type', 'hidden');
                        inputIdSupervisor.setAttribute('name', 'id_supervisor');
                        inputIdSupervisor.setAttribute('value', data.id_supervisor);

                        const inputIdCajaDetalle = document.createElement('input');

                        // Asignar los atributos name y value al elemento input
                        inputIdCajaDetalle.setAttribute('type', 'hidden');
                        inputIdCajaDetalle.setAttribute('name', 'id_caja_detalle');
                        inputIdCajaDetalle.setAttribute('value', '<%= caja.id_caja_detalle %>');


                        // Agregar el elemento input al formulario
                        formulario.appendChild(inputIdCajaDetalle);
                        // Agregar el elemento input al formulario
                        formulario.appendChild(inputIdSupervisor);
                        console.log("entra a enviar el formulario")
                        formulario.submit();
                        // id_cliente = cliente;
                        // Swal.fire('Saved!', '', 'success')
                    } else if (result.isDenied) {
                        // id_cliente = cliente;
                        // buscarVentaTemporal();
                        // Swal.fire('Changes are not saved', '', 'info')
                    }
                });


            }else if (data.supervisa_caja && quevalida == 'guardarMovimiento') {


Swal.fire({
    title: `¿Deseas realizar el movimiento de caja <%= caja.nombre %>?`,
    showDenyButton: true,
    // showCancelButton: true,
    confirmButtonText: 'Si',
    denyButtonText: `No`,
}).then(async (result) => {
    /* Read more about isConfirmed, isDenied below */
    if (result.isConfirmed) {

        guardarMovimiento(data.id_supervisor)

    } else if (result.isDenied) {
        // id_cliente = cliente;
        // buscarVentaTemporal();
        // Swal.fire('Changes are not saved', '', 'info')
    }
});


}
        }
        ///////////fin cerrar caja///////////////////////////////

        function calcularTotales(inputs) {
            //   var inputs = document.querySelectorAll('input[data-amount]');
            let totalEnCaja = 0;

            inputs.forEach(function (input) {
                let denominacion = input.getAttribute('name');
                // console.log(denominacion)
                let amount = parseFloat(input.getAttribute('data-amount'));
                let cantidad = input.value ? parseFloat(input.value) : '';
                let total = amount * cantidad;

                // let denominacion = input.getAttribute('name');
                let totalId = 'total' + denominacion.charAt(0).toUpperCase() + denominacion.slice(1);

                document.getElementById(totalId).value = total.toFixed(2);

                // document.getElementById('total' + denominacion).value = total.toFixed(2);
                totalEnCaja += total;
                // console.log(total.toFixed(2))
            });
            document.getElementById('totalFinalEnCaja').value = formatearNumero(totalEnCaja)

            let inicialEnCaja = parseFloat(document.getElementById('monto_inicial_en_caja').value.replace(/,/g, '') || 0);
            let montoEfectivoEnCaja = parseFloat(document.getElementById('efectivoTotal').value.replace(/,/g, '') || 0);
            let totalFinalEnCaja = parseFloat(document.getElementById('totalFinalEnCaja').value.replace(/,/g, '') || 0);
            let diferencia = totalFinalEnCaja - (montoEfectivoEnCaja + inicialEnCaja)
            let diferenciaInput = document.getElementById("diferencia");
            diferenciaInput.value = formatearNumero(diferencia);
            if (diferencia < 0) {
                document.getElementById("diferencia").style.backgroundColor = 'red';
                document.getElementById("diferencia").style.color = 'white';
            } else if (diferencia < 1 && diferencia > 0) {
                document.getElementById("diferencia").style.backgroundColor = 'green';
                // document.getElementById("diferencia").value = 0;
            } else {
                document.getElementById("diferencia").style.backgroundColor = 'blue';
            }
            //   document.getElementById('totalEnCaja').value = totalEnCaja.toFixed(2);
        }

        let divDesgloseFinal = document.getElementById("desgloseFinalEnCaja")

        let inputs = divDesgloseFinal.querySelectorAll('input[data-amount]');

        // Asignar el evento change a cada input
        inputs.forEach(function (input) {
            input.addEventListener('keyup', function () {
                calcularTotales(inputs);
            });
        });


        let id_cliente = 1;
        let caja = "<%= caja.nombre %>";
        let id_almacen = '<%= caja.id_almacen %>';
        let mesa = 0;
        let fraccionarMesaCliente = 0;
        let N_pedido = 0;

        document.getElementById('btnFraccionarFactura').addEventListener('click', function () {
            document.getElementById("fraccion").innerHTML = '';

            var tbodyOriginal = document.getElementById("detalleFacturacion");
            // tbodyOriginal.innerHTML=''
            console.log(" fraccionar ", fraccionarMesaCliente)
            // Obtén todas las filas del tbody original
            if (document.getElementById("mesa").value != 'Caja') {
                fraccionarMesaCliente = 1;
            }
            var filas = tbodyOriginal.getElementsByTagName("tr");
            if (filas.length > 0 && fraccionarMesaCliente == 1) {
                fraccionarFactura();
            } else {
                // alert("")
                notificacion('top-end', 'warning', "Solo se fraccionan las facturas de mesas que tengan productos asignados!", true)
            }

        });

        document.getElementById('btnCuadreDeCaja').addEventListener('click', function () {
            cuadrarCaja();
        });
        document.getElementById('btnNuevo').addEventListener('click', function () {
            //??
            location.reload();
        });


        document.getElementById('btnMovimientoEnCaja').addEventListener('click', function () {

            $('#modalMovimientoEnCaja').modal('show');
        });

        document.getElementById('btnMesa').addEventListener('click', function () {
            mesaList("aaaaaaaaaaaa", '1');
            $('#modalMesa').modal('show');
        });

        document.getElementById('btnFactura').addEventListener('click', function () {
            listaDeFacturas();

        });

        document.getElementById('btnImprimeCobra').addEventListener('click', function () {
            // buscarVentaTemporal("", mesa, id_cliente);// hago una consulta para ver que la factura no ha sido modificada
            if (mesa != 0) {
                buscarVentaTemporal('', mesa, id_cliente)
            } else if (id_cliente != 1) {
                buscarVentaTemporal('', 0, id_cliente);
            } else {
                buscarVentaTemporal(caja, mesa, id_cliente);
            }
            detalleDelPago();
        });

        document.getElementById('btnCliente').addEventListener('click', function () {
            fraccionarMesaCliente = 0;
            $('#modalBuscarCliente').modal('show');
        });

        document.getElementById('btnClienteFraccion').addEventListener('click', function () {
            fraccionarMesaCliente = 1;
            $('#modalBuscarCliente').modal('show');
        });

        document.getElementById('btnNuevoCliente').addEventListener('click', function () {
            $('#modalRegistrarCliente').modal('show');
            $('#modalBuscarCliente').modal('hide');
        });

        document.getElementById('comprobante').addEventListener('click', function () {

            $('#modalBuscarComprobante').modal('show');
        });
        document.getElementById('btnBuscarProducto').addEventListener('click', function () {

            $('#modalBuscarProducto').modal('show');
        });

        function listaDeFacturas() {
            $('#modalFacturas').modal('show');
            establecerFechas();
            document.getElementById('monto_a_cobrar').value = document.getElementById('totalCobrar').value;
            formatAndSetNumber(document.getElementById('efectivo'))
        }

        async function cuadrarCaja() {
            let id_caja_detalle = "<%= caja.id_caja_detalle %>";
            // console.log('mi detall de caja ', id_caja_detalle)// suma_efectivo,
            await $.get(`/facturacion/facturacionTotalEnCaja/${id_caja_detalle}`, function (data) {
                // console.log(data)
                document.getElementById("tarjetaDebitoTotal").value = formatearNumero(data.suma_tarjeta_debito || 0);
                document.getElementById("tarjetaCreditoTotal").value = formatearNumero(data.suma_tarjeta_credito || 0);
                document.getElementById("chequeTotal").value = formatearNumero(data.suma_cheque || 0);
                document.getElementById("montoNotaCreditoTotal").value = formatearNumero(data.suma_monto_nota || 0);
                document.getElementById("pagoConBonoTotal").value = formatearNumero(data.suma_bono || 0);
                document.getElementById("efectivoTotal").value = formatearNumero(data.suma_efectivo_neto || 0);
                document.getElementById("devolverTotal").value = formatearNumero(data.suma_devolver || 0);
                document.getElementById("cuentaPorCobrarTotal").value = formatearNumero(data.suma_cuenta_por_cobrar || 0);
                document.getElementById("totalVendido").value = formatearNumero((data.suma_tarjeta_debito || 0) + (data.suma_tarjeta_credito || 0) + (data.suma_cheque || 0) + (data.suma_monto_nota || 0) + (data.suma_bono || 0) + (data.suma_efectivo_neto || 0) + (data.suma_cuenta_por_cobrar || 0));

                document.getElementById("totalItbis").value = formatearNumero(data.suma_total_itbis || 0);
                document.getElementById("totalDescuento").value = formatearNumero(data.suma_total_descuento || 0);

                document.getElementById("cantidadDebito").innerText = (data.cantidad_tarjeta_debito || 0);
                document.getElementById("cantidadCredito").innerText = data.cantidad_tarjeta_credito || 0;
                document.getElementById("cantidadBono").innerText = data.cantidad_bono || 0;
                document.getElementById("cantidadCheque").innerText = data.cantidad_cheque || 0;
                document.getElementById("cantidadNota").innerText = data.cantidad_monto_nota || 0;
                document.getElementById("cantidadPorCobrar").innerText = data.cantidad_tarjeta_debito || 0;

                document.getElementById("monto_inicial_en_caja").value = formatearNumero(data.monto_inicial || 0);
                // document.getElementById("mil_caja").value = data.suma_1000 || 0;
                // document.getElementById("quinientos_caja").value = data.suma_500 || 0;
                // document.getElementById("doscientos_caja").value = data.suma_200 || 0;
                // document.getElementById("cien_caja").value = data.suma_100 || 0;
                // document.getElementById("cincuenta_caja").value = data.suma_50 || 0;
                // document.getElementById("veinticinco_caja").value = data.suma_25 || 0;
                // document.getElementById("diez_caja").value = data.suma_10 || 0;
                // document.getElementById("cinco_caja").value = data.suma_5 || 0;
                // document.getElementById("uno_caja").value = data.suma_1 || 0;
                // document.getElementById("decimal_caja").value = data.suma_decimales || 0;

                // Calcular la suma total
                // let sumaTotal = 0;
                // Object.values(data).forEach(value => {
                //     if (typeof value === 'number') {
                //         sumaTotal += value;
                //     }
                // });

                // document.getElementById("labelEntrada").textContent = `Entrada de Dinero: $ ${formatearNumero(sumaTotal)}`;
            });

            $('#modalCuadreDeCaja').modal('show');
            // document.getElementById('monto_a_cobrar').value = document.getElementById('totalCobrar').value;
            // formatAndSetNumber(document.getElementById('efectivo'))
            // desgloseEnCaja();
        }
        var pedidoOriginal = 0;
        var pedidoFraccionCliente = 0;
        function detalleDelPago() {
            // pedidoOriginal = N_pedido;
            $('#modalDetalleDelPago').modal('show');

            document.getElementById('monto_a_cobrar').value = document.getElementById('totalCobrar').value;
            formatAndSetNumber(document.getElementById('efectivo'))
            desgloseEnCaja();
        }
        function separarFactura() {
            if (document.getElementById('nombre_clienteFraccion').value == "") {
                alert("Debes seleccionar el cliente antes de de fraccionar!")
            } else {
                // alert("Cliente!")
                // Obtén los tbody de ambas tablas por sus IDs
                // var tbodyOriginal = document.getElementById("detalleFacturacion");
                var tablaFraccion = document.getElementById("fraccion");

                // // Limpia el contenido del tbody original
                // tbodyOriginal.innerHTML = '';

                // // Obtén todas las filas del tbody de fracción
                var filas = tablaFraccion.getElementsByTagName("tr");

                // // Variables para almacenar las sumas de las columnas 6, 7, 8 y 9
                // var totalDescuento = 0;
                // var totalItbis = 0;
                // var totalSubtotal = 0;
                // var totalImporte = 0;

                if (filas.length > 0) {
                    //     // Itera a través de las filas y agrégales a la nueva tabla
                    //     for (var i = 0; i < filas.length; i++) {

                    //         // Crea una nueva fila para la nueva tabla
                    //         var nuevaFila = tbodyOriginal.insertRow();
                    //         if (filas[i].getElementsByTagName("td")[4].textContent > 0) {
                    //             // Obtén todas las celdas de la fila actual
                    //             var celdas = filas[i].getElementsByTagName("td");

                    //             // Variables para sumar las columnas 6, 7, 8 y 9 de la fila actual
                    //             var descuento = parseFloat(celdas[6].textContent.replace(",", "")) || 0;
                    //             var itbis = parseFloat(celdas[7].textContent.replace(",", "")) || 0;
                    //             var subtotal = parseFloat(celdas[8].textContent.replace(",", "")) || 0;
                    //             var importe = parseFloat(celdas[9].textContent.replace(",", "")) || 0;

                    //             // Suma los valores de la fila actual a los totales
                    //             totalDescuento += descuento;
                    //             totalItbis += itbis;
                    //             totalSubtotal += subtotal;
                    //             totalImporte += importe;

                    //             // Itera a través de las celdas y agrégales a la nueva fila
                    //             for (var j = 0; j < celdas.length; j++) {
                    //                 // Crea una nueva celda para la nueva fila
                    //                 var nuevaCelda = nuevaFila.insertCell();
                    //                 if (j == 0) {
                    //                     nuevaCelda.classList.add("d-none");
                    //                 }
                    //                 if (j == celdas.length - 1) {
                    //                     nuevaCelda.classList.add("d-none");
                    //                 }
                    //                 // Asigna el contenido de la celda original a la nueva celda
                    //                 nuevaCelda.innerHTML = celdas[j].innerHTML;
                    //             }
                    //         }

                    //     }

                    //     // Calcula los totales
                    //     var subTotal = totalSubtotal;
                    //     var itbisTotal = totalItbis;
                    //     var descuentoTotal = totalDescuento;

                    //     // Asigna los totales a los campos correspondientes
                    //     document.getElementById("subTotal").value = formatearNumero(subTotal);
                    //     document.getElementById("masItbis").value = formatearNumero(itbisTotal);
                    //     document.getElementById("descuento").value = formatearNumero(descuentoTotal);

                    //     // Si el checkbox de servicio está marcado, calcula el monto del servicio y actualiza el total a cobrar
                    //     if (document.getElementById("servicio").checked) {
                    //         var montoServicio = subTotal * 0.1;
                    //         document.getElementById("maselservicio").value = formatearNumero(montoServicio);
                    //         document.getElementById("totalCobrar").value = formatearNumero(totalImporte + montoServicio);
                    //     } else {
                    //         // Si el checkbox de servicio no está marcado, deja el monto del servicio y el total a cobrar en blanco
                    //         document.getElementById("maselservicio").value = '';
                    //         document.getElementById("totalCobrar").value = formatearNumero(totalImporte);
                    //     }

                    //SELECT `id_empleado`, `id_cliente`, `caja`, `id_mesa`, `id_camarero`, `precio_venta`, `cantidad`, `id_unidad`, `id_producto`, `numero_pedido`, 
                    // Obtén los datos de la tabla original
                    let id_camarero = document.getElementById("id_camarero").value;
                    console.log("id_camarero es: ", id_camarero)
                    if (document.getElementById('id_cliente').value != document.getElementById('id_clienteFraccion').value && document.getElementById('id_clienteFraccion').value != "") {
                        var tablaOriginal = obtenerDatosFTabla(document.getElementById("facturaAFraccionar"), document.getElementById('id_cliente').value, caja, mesa, document.getElementById("id_camarero").value, '', pedidoOriginal);

                        // Obtén los datos de la tabla de fracción
                        var tablaFraccion = obtenerDatosFTabla(document.getElementById("fraccion"), document.getElementById('id_clienteFraccion').value, caja, mesa, document.getElementById("id_camarero").value, '', pedidoFraccionCliente);

                        //         // Crea un objeto con los datos a enviar
                        const datosParaEnviar = {
                            tablaOriginal: tablaOriginal,
                            tablaFraccion: tablaFraccion,
                            pedidoOriginal: pedidoOriginal,
                            id_camarero: document.getElementById("id_camarero").value,
                            id_mesa: document.getElementById("id_mesa").value,
                            caja: caja,
                            id_cliente: document.getElementById('id_cliente').value
                        };

                        // Envía los datos mediante fetch
                        fetch('/facturacion/fracionarFactura', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(datosParaEnviar)
                        })
                            .then(response => response.json())
                            .then(data => {
                                // Hacer algo con la respuesta del servidor si es necesario

                                console.log("data: ", data)
                                // document.getElementById("id_camarero").value,
                                // document.getElementById("id_mesa").value,
                                caja,
                                    N_pedido = pedidoFraccionCliente
                                document.getElementById('id_cliente').value = document.getElementById('id_clienteFraccion').value;
                                id_cliente = document.getElementById('id_clienteFraccion').value;
                                console.log("N_pedido: ", N_pedido)
                                console.log("id_cliente: ", id_cliente)
                                console.log("mesa: ", mesa)
                                console.log("caja: ", caja)

                                if (mesa != 0) {
                                    buscarVentaTemporal('', mesa, id_cliente)
                                } else if (id_cliente != 1) {
                                    buscarVentaTemporal('', 0, id_cliente);
                                } else {
                                    buscarVentaTemporal(caja, mesa, id_cliente);
                                }
                                notificacion('top-end', 'info', "Factura fraccionada con éxito!", true)
                                $('#modalFraccionarFactura').modal('hide');
                            })
                            .catch(error => {
                                // Manejar errores en caso de que ocurra alguno durante la solicitud
                                console.error('Error:', error);
                            });
                        console.log("Datos de la tabla Original =====> ", tablaOriginal)
                        console.log("Datos de la tabla Fraccion =====> ", tablaFraccion)
                        $('#modalFraccionarFactura').modal('hide');
                    } else {
                        // alert("Para fraccionar una factura debe seleccionar un cliente diferente al cliente de la factura")
                        $('#modalFraccionarFactura').modal('hide');
                        notificacion('top-end', 'info', "Para fraccionar una factura debe seleccionar un cliente diferente al cliente de la factura!", true)
                    }

                    // console.log("Cliente Original =====> ",document.getElementById('id_cliente').value)
                    // console.log("Cliente nuevo =====> ",document.getElementById('id_clienteFraccion').value)
                    document.getElementById('nombre_cliente').value = document.getElementById('nombre_clienteFraccion').value;
                    document.getElementById('rnc_cliente').value = document.getElementById('rnc_clienteFraccion').value;
                    document.getElementById("celular_cliente").value = document.getElementById("celular_clienteFraccion").value;

                    //                 console.log("N pedido Original =====> ",pedidoOriginal)
                    //                 console.log("N pedido Cliente nuevo =====> ",pedidoFraccionCliente)
                    //                 console.log("id_mesa =====> ",document.getElementById("id_mesa").value)
                    //                 console.log("mesa =====> ",document.getElementById("mesa").value)
                    //                 mesa = 0;
                    // alert(id_camarero)celular_cliente
                    // id_clienteFraccion = document.getElementById('id_clienteFraccion').value;


                    // document.getElementById("id_camarero").value = id_camarero;
                    // document.getElementById("camarero").value = camarero;


                    // Cierra el modal

                }
            }
        }


        // Función para obtener datos de una tabla y retornarlos como un array de objetos
        function obtenerDatosFTabla(tabla, id_cliente, caja, id_mesa, id_camarero, precio_venta, numeroDePedido) {
            var datos = [];
            // Itera sobre las filas de la tabla
            for (var i = 0; i < tabla.rows.length; i++) {
                var fila = tabla.rows[i];
                var celdas = fila.cells;

                // Obtén el valor seleccionado del select con nombre "unidades" en la celda 5
                var unidadSelect = celdas[5].querySelector('select[name="unidades"]');
                var unidadSeleccionada = unidadSelect ? unidadSelect.value : ''; // Valor seleccionado del select
                //.`id_empleado`, `id_cliente`, `caja`, `id_mesa`, `id_camarero`, `precio_venta`, `cantidad`, `id_unidad`, `id_producto`, `numero_pedido`, `estado_producto_pedido
                // Crea un objeto para cada fila y añade los datos correspondientes
                var filaDatos = {
                    id_empleado: 1,
                    id_cliente: id_cliente,
                    caja: caja,
                    id_mesa: id_mesa,
                    id_camarero: id_camarero,
                    precio_venta: precio_venta,
                    cantidad: celdas[4].textContent,
                    id_unidad: unidadSeleccionada,
                    id_producto: celdas[0].textContent,
                    numero_pedido: numeroDePedido,
                    estado_producto_pedido: null
                };
                // if(celdas[4].textContent !='' && celdas[4].textContent !=0){
                datos.push(filaDatos);
                // }
            }
            return datos;
        }


        function fraccionarFactura() {
            // Obtén los tbody de ambas tablas por sus IDs
            var tbodyOriginal = document.getElementById("detalleFacturacion");
            // tbodyOriginal.innerHTML=''

            var tbodyNueva = document.getElementById("facturaAFraccionar");
            tbodyNueva.innerHTML = ''
            // Obtén todas las filas del tbody original
            var filas = tbodyOriginal.getElementsByTagName("tr");

            // Itera a través de las filas y agrégales a la nueva tabla
            for (var i = 0; i < filas.length; i++) {
                // Crea una nueva fila para la nueva tabla
                var nuevaFila = tbodyNueva.insertRow();

                // Obtén todas las celdas de la fila actual
                var celdas = filas[i].getElementsByTagName("td");

                // Itera a través de las celdas y agrégales a la nueva fila
                for (var j = 0; j < celdas.length; j++) { // Comienza desde 1 para omitir la primera columna
                    // Crea una nueva celda para la nueva fila
                    var nuevaCelda = nuevaFila.insertCell();
                    if (j == 0) {
                        nuevaCelda.classList.add("d-none");
                    }
                    if (j == celdas.length - 1) {
                        nuevaCelda.classList.add("d-none");
                    }
                    // Asigna el contenido de la celda original a la nueva celda
                    nuevaCelda.innerHTML = celdas[j].innerHTML;
                }
            }

            document.getElementById('id_clienteFraccion').value = 1;
            document.getElementById('nombre_clienteFraccion').value = "";
            document.getElementById('rnc_clienteFraccion').value = "" || '';
            document.getElementById("celular_clienteFraccion").value = "" || '';
            // document.getElementById("id_cliente_fraccion").value = 1 || '';/

            document.getElementById("buscarCliente").value = '';
            $('#modalFraccionarFactura').modal('show');
        }

        var tablaFacturaAFraccionar = document.getElementById("facturaAFraccionar");
        var tablaFraccion = document.getElementById("fraccion");
        tablaFraccion.innerHTML = ''
        tablaFacturaAFraccionar.addEventListener("dblclick", function (event) {
            var fila = event.target.closest("tr");

            if (fila) {
                var celdas = fila.getElementsByTagName("td");
                var descripcion = celdas[2].textContent; // Suponiendo que la descripción está en la tercera columna
                var cantidadOriginal = parseInt(celdas[4].textContent); // Suponiendo que la cantidad está en la quinta columna
                var descuentoOriginal = parseFloat(celdas[6].textContent.replace(",", "")) || 0;
                var itbisOriginal = parseFloat(celdas[7].textContent.replace(",", "")) || 0;
                var subtotalOriginal = parseFloat(celdas[8].textContent.replace(",", "")) || 0;
                var importeOriginal = parseFloat(celdas[9].textContent.replace(",", "")) || 0;

                // Verifica si la descripción ya existe en la tabla 'fraccion'
                var existeEnFraccion = Array.from(tablaFraccion.rows).some(filaFraccion => {
                    var celdasFraccion = filaFraccion.getElementsByTagName("td");
                    return celdasFraccion[2].textContent === descripcion;
                });

                if (!existeEnFraccion) {
                    // Ajustar la cantidad en la fila original
                    // celdas[4].textContent = "0";

                    // Agregar fila a la tabla 'fraccion' y hacer la cantidad editable
                    var nuevaFila = tablaFraccion.insertRow();
                    for (var i = 0; i < celdas.length; i++) {
                        var nuevaCelda = nuevaFila.insertCell();

                        if (i == 0) {
                            nuevaCelda.classList.add("d-none");
                        }
                        if (i == celdas.length - 1) {
                            nuevaCelda.classList.add("d-none");
                        }

                        if (i == 4) {
                            // Agregar cantidad original como un atributo para referencia futura
                            nuevaCelda.dataset.cantidadOriginal = cantidadOriginal;
                            // Ajustar la cantidad en la fila original
                            nuevaCelda.contentEditable = true;

                            // Desseleccionar el texto al hacer clic en la celda
                            nuevaCelda.addEventListener("click", function (event) {
                                var range = document.createRange();
                                range.selectNodeContents(this);
                                var selection = window.getSelection();
                                selection.removeAllRanges();
                                selection.addRange(range);
                                // console.log("Hice click")
                            });
                            nuevaCelda.addEventListener("input", function (event) {
                                var cantidadNueva = parseInt(event.target.textContent) || 0;
                                var cantidadFaltante = cantidadOriginal - cantidadNueva;

                                if (cantidadFaltante >= 0) {
                                    // Ajustar la cantidad en la fila original
                                    celdas[4].textContent = cantidadFaltante.toString();

                                    // Calcular y actualizar los campos DESCUENTO, ITBIS, SUBTOTAL e IMPORTE
                                    var cantidadFactor = cantidadFaltante / cantidadOriginal;
                                    celdas[6].textContent = formatearNumero(descuentoOriginal * cantidadFactor);
                                    celdas[7].textContent = formatearNumero(itbisOriginal * cantidadFactor);
                                    celdas[8].textContent = formatearNumero(subtotalOriginal * cantidadFactor);
                                    celdas[9].textContent = formatearNumero(importeOriginal * cantidadFactor);
                                    // // Calcular y actualizar los campos DESCUENTO, ITBIS, SUBTOTAL e IMPORTE
                                    // var cantidadFactor = cantidadNueva ==0? cantidadOriginal:cantidadNueva / cantidadOriginal;
                                    // celdas[6].textContent = formatearNumero(cantidadNueva ==0? descuentoOriginal: cantidadNueva == cantidadOriginal? 0.00: descuentoOriginal * cantidadFactor);
                                    // celdas[7].textContent = formatearNumero(cantidadNueva ==0? itbisOriginal: cantidadNueva == cantidadOriginal? 0.00: itbisOriginal * cantidadFactor);
                                    // celdas[8].textContent = formatearNumero(cantidadNueva ==0? subtotalOriginal: cantidadNueva == cantidadOriginal? 0.00: subtotalOriginal * cantidadFactor); 
                                    // celdas[9].textContent = formatearNumero(cantidadNueva ==0? importeOriginal: cantidadNueva == cantidadOriginal? 0.00: importeOriginal * cantidadFactor);
                                } else {
                                    // Si la cantidad ingresada es mayor que la original, revertir a la original
                                    event.target.textContent = cantidadOriginal.toString();
                                    celdas[4].textContent = 0;

                                    celdas[6].textContent = formatearNumero(0.00);
                                    celdas[7].textContent = formatearNumero(0.00);
                                    celdas[8].textContent = formatearNumero(0.00);
                                    celdas[9].textContent = formatearNumero(0.00);
                                    console.log("es mayor")
                                }

                                var celdasFraccion = nuevaFila.getElementsByTagName("td");
                                if (cantidadNueva >= 0 && cantidadNueva <= cantidadOriginal) {
                                    // Calcular y actualizar los campos DESCUENTO, ITBIS, SUBTOTAL e IMPORTE en la tabla de fracción

                                    var cantidadFactor = cantidadNueva / cantidadOriginal;

                                    celdasFraccion[6].textContent = formatearNumero(descuentoOriginal * cantidadFactor);
                                    celdasFraccion[7].textContent = formatearNumero(itbisOriginal * cantidadFactor);
                                    celdasFraccion[8].textContent = formatearNumero(subtotalOriginal * cantidadFactor);
                                    celdasFraccion[9].textContent = formatearNumero(importeOriginal * cantidadFactor);
                                } else {
                                    celdasFraccion[6].textContent = formatearNumero(descuentoOriginal);
                                    celdasFraccion[7].textContent = formatearNumero(itbisOriginal);
                                    celdasFraccion[8].textContent = formatearNumero(subtotalOriginal);
                                    celdasFraccion[9].textContent = formatearNumero(importeOriginal);
                                }
                            });
                        } else if (i == 5) {
                            // alert("Celda 5 === "+ celdas[i].textContent)
                            nuevaCelda.innerHTML = celdas[i].innerHTML;
                        } else {

                            nuevaCelda.textContent = celdas[i].textContent;
                        }
                    }
                } else {
                    console.log("El producto ya existe en la tabla fraccion.");
                }
            }
        });


        function imprimeYCobra() {
            const tabla = document.querySelector('.table');
            const filas = tabla.querySelectorAll('tbody tr');
            const datos = [];

            // Recorre cada fila de la tabla
            filas.forEach((fila) => {
                const celdas = fila.querySelectorAll('td');
                const filaDatos = [];

                // Recorre las celdas de la fila actual
                celdas.forEach((celda) => {
                    const valor = celda.textContent.trim();
                    filaDatos.push(valor);
                });

                datos.push(filaDatos);
            });
            if (datos != '') {
                Swal.fire({
                    title: `Seleccione el tipo de venta!`,
                    showDenyButton: true,
                    showCancelButton: true,
                    confirmButtonText: 'Al contado',
                    denyButtonText: `A crédito`,
                }).then(async (result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        procesarVenta()
                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Venta al contado procesada!',
                            // showConfirmButton: false,
                            timer: 2000
                        })
                    } else if (result.isDenied) {
                        // // id_cliente = cliente;
                        // buscarVentaTemporal();

                        // Swal.fire('Changes are not saved', '', 'info')
                    }
                });
            }
        }
        // AQUI COMIENZA LA FUNCION IMPRIME Y COBRA
        // function procesarVenta(datos) {


        //     if (datos != '') {

        //         // Obtiene los valores de los campos adicionales
        //         const subTotal = document.getElementById('subTotal').value;
        //         const masItbis = document.getElementById('masItbis').value;
        //         const descuento = document.getElementById('descuento').value;
        //         const servicio = document.getElementById('servicio').checked;
        //         const maselservicio = document.getElementById('maselservicio').value;
        //         const totalCobrar = document.getElementById('totalCobrar').value;
        //         const nombreCliente = document.getElementById('nombre_cliente').value;
        //         const rncCliente = document.getElementById('rnc_cliente').value;
        //         const celularCliente = document.getElementById('celular_cliente').value;
        //         const codncf = document.getElementById('codncf').value;

        //         // Crea un objeto con los datos a enviar
        //         const datosParaEnviar = {
        //             tabla: datos,
        //             subTotal: subTotal,
        //             masItbis: masItbis,
        //             descuento: descuento,
        //             servicio: servicio,
        //             maselservicio: maselservicio,
        //             totalCobrar: totalCobrar,
        //             nombreCliente: nombreCliente,
        //             rncCliente: rncCliente,
        //             celularCliente: celularCliente,
        //             codncf: codncf,
        //             id_cliente: id_cliente
        //         };

        //         // Envía los datos mediante fetch
        //         fetch('/facturacion/imprimeCobra', {
        //             method: 'POST',
        //             headers: {
        //                 'Content-Type': 'application/json'
        //             },
        //             body: JSON.stringify(datosParaEnviar)
        //         })
        //             .then(response => response.json())
        //             .then(data => {
        //                 // Hacer algo con la respuesta del servidor si es necesario
        //                 console.log(data);
        //             })
        //             .catch(error => {
        //                 // Manejar errores en caso de que ocurra alguno durante la solicitud
        //                 console.error('Error:', error);
        //             });
        //     } else {
        //         alert("No hay factura por imprimir")
        //     }

        // }
        ////////////////////////////AQUI TERMINA IMPRIME Y COBRA///////////////////////////////////////////////////////////////////////////////////

        function formatearNumero(numero) {
            const separadorDecimal = ".";
            const separadorMiles = ",";
            const decimales = 2;

            let numeroFormateado = numero.toFixed(decimales).toString();

            let partes = numeroFormateado.split(".");
            partes[0] = partes[0].replace(/\B(?=(\d{3})+(?!\d))/g, separadorMiles);
            numeroFormateado = partes.join(separadorDecimal);

            return numeroFormateado;
        }

        function eliminarProductoEnFactura(id_cliente, id_producto, descripcion, id_unidad) {

            const lamesa = mesa;
            const lacaja = caja;
            Swal.fire({
                title: `¿Deseas quitar ${descripcion} de la factura actual?`,
                showDenyButton: true,
                // showCancelButton: true,
                confirmButtonText: 'Si',
                denyButtonText: `No`,
            }).then(async (result) => {
                document.getElementById("servicio").checked = false;
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    let url = `/facturacion/eliminarProductoAlCliente`;
                    const data = {
                        id_cliente: id_cliente,
                        id_producto: id_producto,
                        id_unidad: id_unidad,
                        caja: lacaja,
                        mesa: lamesa,
                        numero_pedido: N_pedido

                    };

                    let response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    })

                    if (response.ok) {
                        if (mesa != 0) {
                            buscarVentaTemporal('', mesa, id_cliente)
                        } else if (id_cliente != 1) {
                            buscarVentaTemporal('', 0, id_cliente);
                        } else {
                            buscarVentaTemporal(caja, mesa, id_cliente);
                        }
                        // id_cliente = cliente;
                        // buscarVentaTemporal(caja, '', id_cliente);
                    }
                    // id_cliente = cliente;
                    // Swal.fire('Saved!', '', 'success')
                } else if (result.isDenied) {
                    // id_cliente = cliente;
                    if (mesa != 0) {
                        buscarVentaTemporal('', mesa, id_cliente)
                    } else if (id_cliente != 1) {
                        buscarVentaTemporal('', 0, id_cliente);
                    } else {
                        buscarVentaTemporal(caja, mesa, id_cliente);
                    }
                    // buscarVentaTemporal(caja, '', id_cliente);
                    // Swal.fire('Changes are not saved', '', 'info')
                }
            });
        }

        function notificacion(posicion, icono, mensaje, notificacion) {
            Swal.fire({
                position: posicion,
                icon: icono,
                title: mensaje,
                showConfirmButton: false,
                toast: notificacion,
                timer: 2500
            })
        }
        $(document).ready(function () {
            $(document).on('keydown', function (e) {
                if (e.key === 'Enter') {
                    e.preventDefault(); // Evitar el comportamiento por defecto al presionar Enter
                    $('#buscarProducto').focus();
                }
            });

            $('#buscarProducto').on('keydown', function (e) {
                if (e.key === 'Enter' || e.keyCode === 32) {
                    e.preventDefault(); // Evitar el comportamiento por defecto al presionar Enter o espacio
                    let codigo = $(this).val().trim();
                    if (codigo !== '') {
                        // buscarProctoPorCodigo(codigo);
                        $(this).val(''); // Limpiar el campo de búsqueda después de realizar la búsqueda
                    }
                }
            });

            // Colocar el cursor en el campo de búsqueda al cargar la página
            $('#buscarProducto').focus();
            N_pedido = 0
            mesa = 0;
            buscarVentaTemporal(caja, 0, 1);
        });

        async function buscarVentaTemporal(caja, mesa, id_cliente) {
            // if(mesa>0){
            //     document.getElementById('servicio').checked = true;
            // }else{
            //     document.getElementById('servicio').checked = false;
            // // }
            // console.log("la caja: ", caja)
            // console.log("la mesa: ", mesa)
            // console.log("el id_cliente: ", id_cliente)
            // let id_cliente = 1;
            let id_empleado = "<%= caja.id_cajero %>";
            // let caja = "<%= caja.nombre %>";
            // let mesa = 1;
            // caja ="";
            id_empleado = ''
            if (N_pedido == "") {
                N_pedido = 0;
            }
            // alert(`Muestro el ID Cliente ${id_cliente}`)
            const datosCompletos = {
                id_empleado: id_empleado,
                id_cliente: id_cliente,
                caja: caja,
                mesa: mesa,
                numero_pedido: N_pedido
            };
            // console.log("Los datos de la consulta temporal ", datosCompletos)
            // Ahora puedes enviar el objeto 'datosCompletos' al servidor usando una solicitud Fetch
            fetch(`/facturacion/buscarVentaTemporal`, {
                method: 'POST', // Utiliza el método HTTP apropiado
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(datosCompletos), // Convierte los datos a JSON y envíalos
            })
                .then(response => response.json())
                .then(async data => {
                    // Hacer algo con la respuesta del servidor si es necesario
                    // console.log(data);


                    var html = "";
                    // console.log(data)
                    let k = 1;
                    let subTotal = 0;
                    let descuentoTotal = 0;
                    let itbisTotal = 0;
                    let totalCobrar = 0;
                    let precioVenta = 0;
                    let itbis = 0;
                    let descuento = 0;
                    let precio = 0;
                    let tipoVenta = 1;
                    let idMesa = 0;
                    let abrirCaja = 1;
                    if (data != "No tiene venta temporal") {
                        for (var i = 0; i < data.length; i++) {
                            abrirCaja = 0;
                            if (data[i].con_itbis == 1) {
                                itbis = data[i].itbis;
                            }
                            if (data[i].con_descuento == 1) {
                                descuento = data[i].descuento;
                            }

                            if (tipoVenta == 1) {
                                precio = Number(data[i].precio_detalle)
                            } else if (tipoVenta == 2) {
                                precio = Number(data[i].precio_al_por_mayor)
                            } else if (tipoVenta == 3) {
                                precio = Number(data[i].precio_especial)
                            }

                            ///////////////////////////////////////aqui consulto las unidades del producto y veo cual estan comprando
                            const unidades = await $.get(`/producto/unidad_producto/${data[i].id_producto}`);

                            let factorDeConversion = 0;
                            for (let k = 0; k < unidades.length; k++) {
                                if (unidades[k].id_unidad == data[i].id_unidad) {
                                    factorDeConversion = unidades[k].factor_conversion;
                                }
                            }

                            html += "<tr>";
                            const descuentoTotalProducto = (precio * descuento / 100) * (data[i].cantidad * factorDeConversion);
                            const itbisTotalProducto = (precio * itbis / 100) * (data[i].cantidad * factorDeConversion);
                            const importe = (precio * (data[i].cantidad * factorDeConversion)) - descuentoTotalProducto + itbisTotalProducto;
                            precio = precio * factorDeConversion * data[i].cantidad;// actualizo el preso con el factor de conversion
                            html += `<td class='d-none'>` + data[i].id_producto + "</td>";
                            html += `<td>` + data[i].codigo + "</td>";
                            html += "<td>" + data[i].descripcion + "</td>";
                            html += "<td style='text-align: right;'>" + formatearNumero(precio / data[i].cantidad) + "</td>";
                            html += "<td contenteditable='true' style='text-align: right;' onkeydown='handleBlurKeydown(event)' onblur='handleCantidadKeydown(event, " + data[i].id_producto + "," + data[i].id_unidad + ")'><b>" + data[i].cantidad + "</b></td>";
                            // html += "<td contenteditable='true' style='text-align: right; ' onkeydown='handleCantidadKeydown(event, " + data[i].id_producto + ")'><b>" + data[i].cantidad + "</b></td>";
                            html += "<td>";
                            html += `<select name='unidades' onchange='actualizaUnidad(this.value,"${data[i].id_producto}","${id_cliente}")'>`;
                            idMesa = data[i].id_mesa
                            //las unidades consultadas arriba las itero para colocar cual es la unidad seleccionada
                            let id_unidad = 0;
                            for (let j = 0; j < unidades.length; j++) {
                                // console.log('Muestro las Unidades ===> ',data[i].id_unidad)
                                if (unidades[j].id_unidad == data[i].id_unidad) {
                                    id_unidad = unidades[j].id_unidad;
                                    html += "<option selected value=" + unidades[j].id_unidad + ">" + unidades[j].unidad + "</option>";
                                } else {
                                    //html += "<option value=" + unidades[j].id_unidad + ">" + unidades[j].unidad + "</option>";
                                }
                            }

                            html += "</select>";
                            html += "</td>";

                            html += "<td style='text-align: right;'>" + formatearNumero(descuentoTotalProducto) + "</td>";
                            html += "<td style='text-align: right;'>" + formatearNumero(itbisTotalProducto) + "</td>";
                            html += "<td style='text-align: right;'>" + formatearNumero(precio) + "</td>";
                            html += "<td style='text-align: right;'>" + formatearNumero(importe) + "</td>";
                            html += `<td onclick='eliminarProductoEnFactura("${data[i].id_cliente}","${data[i].id_producto}","${data[i].descripcion}","${id_unidad}")'>` + "   <i class='fas fa-trash-alt' style='font-size:18px;color:red'></i></td>";
                            html += "</tr>";

                            k++;
                            // Calcular sub total
                            subTotal += parseFloat(precio);//parseFloat(data[i].cantidad) *

                            // Calcular descuento total
                            descuentoTotal += parseFloat(descuentoTotalProducto);

                            // Calcular ITBIS total
                            itbisTotal += parseFloat(itbisTotalProducto);

                            // Calcular total a cobrar
                            totalCobrar += parseFloat(importe);
                            itbis = 0;
                            descuento = 0;
                        }
                        // alert(`La mesa ${idMesa}`);
                        await $.get(`/facturacion/consultaMesaCliente/${idMesa}`, async function (data) {
                            // console.log(data)
                            // alert(data)
                            if (idMesa != 0) {
                                document.getElementById("mesa").value = data[0].mesa;
                                mesa = data[0].mesa;

                                document.getElementById("camarero").value = data[0].nombre_camarero;

                                document.getElementById("id_camarero").value = data[0].id_camarero;
                            } else {
                                if (abrirCaja == 0) {
                                    document.getElementById("mesa").value = "Caja";
                                    mesa = 0


                                    document.getElementById("camarero").value = ''

                                    document.getElementById("id_camarero").value = 0;
                                }
                            }

                            // if (buscarProductoInput) {
                            //     buscarProductoInput.focus();
                            // }

                        });
                    }



                    var elementTabla_empleado = document.getElementById("detalleFacturacion");
                    elementTabla_empleado.innerHTML = html;
                    // Establecer los valores calculados en los campos de entrada
                    document.getElementById("subTotal").value = formatearNumero(subTotal);
                    document.getElementById("masItbis").value = formatearNumero(itbisTotal);
                    document.getElementById("descuento").value = formatearNumero(descuentoTotal);
                    if (document.getElementById("servicio").checked == true) {
                        // alert(totalCobrar*0.1)
                        document.getElementById("maselservicio").value = formatearNumero(subTotal * 0.1);
                        document.getElementById("totalCobrar").value = formatearNumero(totalCobrar + (subTotal * 0.1));
                        // document.getElementById('monto_a_cobrar').value = formatearNumero(totalCobrar + (subTotal * 0.1));
                    } else {
                        document.getElementById("totalCobrar").value = formatearNumero(totalCobrar);
                        document.getElementById("maselservicio").value = '';
                        // document.getElementById('monto_a_cobrar').value = formatearNumero(totalCobrar);
                    }


                    // Obtener todos los campos de cantidad
                    var camposCantidad = document.querySelectorAll("td[contenteditable='true']");
                    camposCantidad.forEach(function (campoCantidad) {
                        campoCantidad.addEventListener("click", function (event) {
                            var range = document.createRange();
                            range.selectNodeContents(campoCantidad);
                            var selection = window.getSelection();
                            selection.removeAllRanges();
                            selection.addRange(range);
                        });
                    });

                    //////////////////////////////////////////////////////////////////////////////////////////////////
                })
                .catch(error => {
                    // Manejar errores en caso de que ocurra alguno durante la solicitud
                    console.error('Error:', error);
                });

            // await $.get(`/facturacion/buscarVentaTemporal/${id_empleado}/${id_cliente}/${caja}/${mesa}`, async function (data) {
            //     var html = "";
            //     console.log(data)
            //     let k = 1;
            //     let subTotal = 0;
            //     let descuentoTotal = 0;
            //     let itbisTotal = 0;
            //     let totalCobrar = 0;
            //     let precioVenta = 0;
            //     let itbis = 0;
            //     let descuento = 0;
            //     let precio = 0;
            //     let tipoVenta = 1;
            //     if (data != "No tiene venta temporal") {
            //         for (var i = 0; i < data.length; i++) {

            //             if (data[i].con_itbis == 1) {
            //                 itbis = data[i].itbis;
            //             }
            //             if (data[i].con_descuento == 1) {
            //                 descuento = data[i].descuento;
            //             }

            //             if (tipoVenta == 1) {
            //                 precio = Number(data[i].precio_detalle)
            //             } else if (tipoVenta == 2) {
            //                 precio = Number(data[i].precio_al_por_mayor)
            //             } else if (tipoVenta == 3) {
            //                 precio = Number(data[i].precio_especial)
            //             }

            //             ///////////////////////////////////////aqui consulto las unidades del producto y veo cual estan comprando
            //             const unidades = await $.get(`/producto/unidad_producto/${data[i].id_producto}`);

            //             let factorDeConversion = 0;
            //             for (let k = 0; k < unidades.length; k++) {
            //                 if (unidades[k].id_unidad == data[i].id_unidad) {
            //                     factorDeConversion = unidades[k].factor_conversion;
            //                 }
            //             }

            //             html += "<tr>";
            //             const descuentoTotalProducto = (precio * descuento / 100) * (data[i].cantidad * factorDeConversion);
            //             const itbisTotalProducto = (precio * itbis / 100) * (data[i].cantidad * factorDeConversion);
            //             const importe = (precio * (data[i].cantidad * factorDeConversion)) - descuentoTotalProducto + itbisTotalProducto;
            //             precio = precio * factorDeConversion * data[i].cantidad;// actualizo el preso con el factor de conversion
            //             html += `<td class='d-none'>` + data[i].id_producto + "</td>";
            //             html += `<td>` + data[i].codigo + "</td>";
            //             html += "<td>" + data[i].descripcion + "</td>";
            //             html += "<td style='text-align: right;'>" + formatearNumero(precio / data[i].cantidad) + "</td>";
            //             html += "<td contenteditable='true' style='text-align: right;' onkeydown='handleBlurKeydown(event)' onblur='handleCantidadKeydown(event, " + data[i].id_producto + "," + data[i].id_unidad + ")'><b>" + data[i].cantidad + "</b></td>";
            //             // html += "<td contenteditable='true' style='text-align: right; ' onkeydown='handleCantidadKeydown(event, " + data[i].id_producto + ")'><b>" + data[i].cantidad + "</b></td>";
            //             html += "<td>";
            //             html += `<select name='unidades' onchange='actualizaUnidad(this.value,"${data[i].id_producto}","${id_cliente}")'>`;

            //             //las unidades consultadas arriba las itero para colocar cual es la unidad seleccionada
            //             let id_unidad = 0;
            //             for (let j = 0; j < unidades.length; j++) {
            //                 // console.log('Muestro las Unidades ===> ',data[i].id_unidad)
            //                 if (unidades[j].id_unidad == data[i].id_unidad) {
            //                     id_unidad = unidades[j].id_unidad;
            //                     html += "<option selected value=" + unidades[j].id_unidad + ">" + unidades[j].unidad + "</option>";
            //                 } else {
            //                     //html += "<option value=" + unidades[j].id_unidad + ">" + unidades[j].unidad + "</option>";
            //                 }
            //             }

            //             html += "</select>";
            //             html += "</td>";

            //             html += "<td style='text-align: right;'>" + formatearNumero(descuentoTotalProducto) + "</td>";
            //             html += "<td style='text-align: right;'>" + formatearNumero(itbisTotalProducto) + "</td>";
            //             html += "<td style='text-align: right;'>" + formatearNumero(precio) + "</td>";
            //             html += "<td style='text-align: right;'>" + formatearNumero(importe) + "</td>";
            //             html += `<td onclick='eliminarProductoEnFactura("${data[i].id_cliente}","${data[i].id_producto}","${data[i].descripcion}","${id_unidad}")'>` + "   <i class='fas fa-trash-alt' style='font-size:18px;color:red'></i></td>";
            //             html += "</tr>";

            //             k++;
            //             // Calcular sub total
            //             subTotal += parseFloat(precio);//parseFloat(data[i].cantidad) *

            //             // Calcular descuento total
            //             descuentoTotal += parseFloat(descuentoTotalProducto);

            //             // Calcular ITBIS total
            //             itbisTotal += parseFloat(itbisTotalProducto);

            //             // Calcular total a cobrar
            //             totalCobrar += parseFloat(importe);
            //             itbis = 0;
            //             descuento = 0;
            //         }
            //     }



            //     var elementTabla_empleado = document.getElementById("detalleFacturacion");
            //     elementTabla_empleado.innerHTML = html;
            //     // Establecer los valores calculados en los campos de entrada
            //     document.getElementById("subTotal").value = formatearNumero(subTotal);
            //     document.getElementById("masItbis").value = formatearNumero(itbisTotal);
            //     document.getElementById("descuento").value = formatearNumero(descuentoTotal);
            //     if (document.getElementById("servicio").checked == true) {
            //         // alert(totalCobrar*0.1)
            //         document.getElementById("maselservicio").value = formatearNumero(subTotal * 0.1);
            //         document.getElementById("totalCobrar").value = formatearNumero(totalCobrar + (subTotal * 0.1));
            //     } else {
            //         document.getElementById("totalCobrar").value = formatearNumero(totalCobrar);
            //         document.getElementById("maselservicio").value = '';
            //     }


            //     // Obtener todos los campos de cantidad
            //     var camposCantidad = document.querySelectorAll("td[contenteditable='true']");
            //     camposCantidad.forEach(function (campoCantidad) {
            //         campoCantidad.addEventListener("click", function (event) {
            //             var range = document.createRange();
            //             range.selectNodeContents(campoCantidad);
            //             var selection = window.getSelection();
            //             selection.removeAllRanges();
            //             selection.addRange(range);
            //         });
            //     });
            // });

        }

        async function actualizaUnidad(id_unidad, id_producto, id_cliente) {
            // alert(unidad)
            // alert(id_producto)
            // console.log(id_cliente)
            await $.get(`/facturacion/editarUnidadProductoCliente/${id_producto}/${id_unidad}/${id_cliente}`, async function (data) {
                // console.log(data)
                // alert(data)
                const buscarProductoInput = document.getElementById("buscarProducto");
                if (buscarProductoInput) {
                    buscarProductoInput.focus();
                }

                await buscarVentaTemporal(caja, '', id_cliente);
            });

        }

        async function handleBlurKeydown(event) {
            if (event.key === "Enter" || event.key === " ") {
                const buscarProductoInput = document.getElementById("buscarProducto");
                if (buscarProductoInput) {
                    buscarProductoInput.focus();
                }
            }

        }

        async function handleCantidadKeydown(event, id_producto, id_unidad) {
            if (event.type === "blur") {
                const cantidad = parseFloat(event.target.innerText);
                if (cantidad > 0) {
                    // let id_cliente = 1;
                    let id_empleado = "<%= caja.id_cajero %>";
                    let almacen = "<%= caja.id_almacen %>";
                    // alert("la cantidad es " + id_cliente)
                    if (id_cliente == '') {
                        id_cliente = 1;
                    }
                    // editarCantidad(id_cliente, id_empleado, id_producto, cantidad);
                    let valores = [id_producto, id_unidad, cantidad, id_empleado, "ID CLIENTE == " + id_cliente, almacen, caja, "ID MESA == " + mesa, "N pedido == " + N_pedido]
                    console.log("Valores a editar ====> ", valores)
                    await $.get(`/facturacion/editarCantidadProductoCliente/${id_producto}/${id_unidad}/${cantidad}/${id_empleado}/${id_cliente}/${almacen}/${caja}/${mesa}/${N_pedido}`, async function (data) {
                        // console.log(data)
                        if (data == 'Cantidad insuficiente en éste almacen') {

                            notificacion('top-end', 'info', "La cantidad solicitada es insuficiente en éste almacen para cubrir el pedido, verifique otros almacenes para saber si queda la cantidad solicitada!", true)
                            // alert('La cantidad solicitada es insuficiente en éste almacen para cubrir el pedido, verifique otros almacenes para saber si queda la cantidad solicitada')
                        }
                        // alert(data)
                        const buscarProductoInput = document.getElementById("buscarProducto");
                        if (buscarProductoInput) {
                            buscarProductoInput.focus();
                        }

                        // await buscarVentaTemporal(caja,'', id_cliente);
                        if (mesa != 0) {
                            let cliente = ''
                            if (id_cliente != 1) {
                                cliente
                            }
                            buscarVentaTemporal('', mesa, cliente)
                        } else if (id_cliente != 1) {
                            buscarVentaTemporal('', 0, id_cliente);
                        } else {
                            buscarVentaTemporal(caja, '', id_cliente);
                        }
                    });
                } else {
                    alert('La cantidad introducida debe ser mayor a cero');
                    if (mesa != 0) {
                        let cliente = ''
                        if (id_cliente != 1) {
                            cliente
                        }
                        buscarVentaTemporal('', mesa, cliente)
                    } else if (id_cliente != 1) {
                        buscarVentaTemporal('', 0, id_cliente);
                    } else {
                        buscarVentaTemporal(caja, '', id_cliente);
                    }
                    //     if (mesa != 0) {
                    //         buscarVentaTemporal('', mesa, '')
                    //     } else if (id_cliente != 1) {
                    //         buscarVentaTemporal('', 0, id_cliente);
                    //     } else {
                    //         buscarVentaTemporal(caja, '', id_cliente);
                    //     }
                    //     // await buscarVentaTemporal(caja, '', id_cliente);;
                }
            }
        }



        function handleMask(event, mask) {
            with (event) {
                stopPropagation()
                preventDefault()
                if (!charCode) return
                var c = String.fromCharCode(charCode)
                if (c.match(/\D/)) return
                with (target) {
                    var val = value.substring(0, selectionStart) + c + value.substr(selectionEnd)
                    var pos = selectionStart + 1
                }
            }
            var nan = count(val, /\D/, pos) // nan va calcolato prima di eliminare i separatori
            val = val.replace(/\D/g, '')

            var mask = mask.match(/^(\D*)(.+9)(\D*)$/)
            if (!mask) return // meglio exception?
            if (val.length > count(mask[2], /9/)) return

            for (var txt = '', im = 0, iv = 0; im < mask[2].length && iv < val.length; im += 1) {
                var c = mask[2].charAt(im)
                txt += c.match(/\D/) ? c : val.charAt(iv++)
            }

            with (event.target) {
                value = mask[1] + txt + mask[3]
                selectionStart = selectionEnd = pos + (pos == 1 ? mask[1].length : count(value, /\D/, pos) - nan)
            }

            function count(str, c, e) {
                e = e || str.length
                for (var n = 0, i = 0; i < e; i += 1) if (str.charAt(i).match(c)) n += 1
                return n
            }
        }


        async function buscarProctoPorCodigo(codigo, almacen, cantidad, id_unidad, id_cliente, suma, caja) {
            // console.log(codigo, almacen, cantidad, id_cliente, suma)
            let id_camarero = 0;
            mesa = document.getElementById('id_mesa').value;
            if (mesa == "") {
                mesa = 0;
            }
            // alert(mesa)  

            if (mesa != 0) {
                id_camarero = document.getElementById('id_camarero').value;
            }
            console.log("Xla caja: ", caja)
            console.log("Xla mesa: ", mesa)
            console.log("Xel id_cliente: ", id_cliente)
            console.log("Xel N pedido: ", N_pedido)
            // id_cliente = document.getElementById('id_mesa').value;

            if (id_cliente == '') {
                // alert("es nulo debe ser 1")
                id_cliente = 1;
                N_pedido = 0;
            }
            if (N_pedido == "") {
                // alert(N_pedido)
                N_pedido = 0;
            }
            await $.get(`/facturacion/consultaProductoCodigoAlmacenCantidad/${codigo}/${almacen}/${cantidad}/${id_unidad}/${id_cliente}/${suma}/${caja}/${mesa}/${id_camarero}/${N_pedido}`, function (data) {

                if (data != "Producto actualizado correctamente" && data != "Producto actualizado correctamente") {

                }
                if (data == "Cantidad insuficiente para cubir el pedido") {
                    // alert(data);

                    notificacion('top-end', 'error', data, true)
                }
                // console.log('la data ====>',data)

                if (document.getElementById('id_mesa').value > 0) {
                    buscarVentaTemporal('', document.getElementById('id_mesa').value, document.getElementById('id_cliente').value)
                } else if (id_cliente != 1) {
                    buscarVentaTemporal('', 0, id_cliente);
                } else {
                    buscarVentaTemporal(caja, '', id_cliente);
                }
            });
        }

        document.getElementById("buscarProducto").onkeydown = async function (e) {
            if ((e.key === "Enter" || e.keyCode === 32) && e.target.value.trim() !== "") {
                e.preventDefault(); // Evitar que se realice el salto de línea por defecto en un campo de texto
                let codigo = e.target.value.trim();
                if (codigo == "") {
                    codigo = "aaaaaaaaaaaa";
                }
                // console.log("busco el producto")
                let almacen = "<%= caja.id_almacen %>";
                let cantidad = 1;
                let id_unidad = 1;
                // let id_cliente = 1;
                let suma = 1;// indica que se va a sumar la cantidad
                let data = await buscarProctoPorCodigo(codigo, almacen, cantidad, id_unidad, id_cliente, suma, caja);
                e.target.value = "";
                // console.log(data)
                if (data) {

                    // var descuento = (data.precio_detalle * data.descuento / 100) * cantidad;
                    // var itbis = (data.precio_detalle * data.itbis / 100) * cantidad;
                    // var importe = (data.precio_detalle * cantidad) - descuento + itbis;
                    // let html = "";

                    // html += "<tr>";
                    // //`id_script`, `titulo`, `contenido`, `fecha_creacion`, `id_tipo_producto`, `id_estado`

                    // html += `<td onclick='editarproducto(${data.id_producto})' style='color:blue;'>` + data.codigo + "</td>";
                    // // html +="<td>"+ data.empresa +"</td>";
                    // html += "<td>" + data.descripcion + "</td>";
                    // html += "<td contenteditable='true' style='text-align: right;'>" + cantidad + "</td>";
                    // html += "<td style='text-align: right;'>" + descuento + "</td>";
                    // html += "<td style='text-align: right;'>" + itbis + "</td>";
                    // html += "<td style='text-align: right;'>" + data.precio_detalle + "</td>";
                    // html += "<td style='text-align: right;'>" + importe + "</td>";
                    // html += "</tr>";



                    // var elementTablaFacturacionDetalle = document.getElementById("detalleFacturacion");
                    // elementTablaFacturacionDetalle.innerHTML = html;
                    // elementTablaFacturacionDetalle.insertAdjacentHTML("beforeend", html);


                }


                ////////////////////////////////////////////////////////////////////////
            }
        };

        document.getElementById("servicio").onchange = async function (e) {
            let nombre_cliente = document.getElementById("nombre_cliente").value;
            let cliente = ""
            // if (nombre_cliente != "") {
            //     cliente = document.getElementById("id_cliente").value;
            //     buscarVentaTemporal("", '', cliente);
            // }
            // else {
            //     buscarVentaTemporal(caja, '', 1);
            // }

            if (mesa != 0) {
                buscarVentaTemporal('', mesa, 1)
            } else if (id_cliente != 1) {
                buscarVentaTemporal('', 0, id_cliente);
            } else {
                buscarVentaTemporal(caja, '', id_cliente);
            }

        };


        // Agrega un event listener al botón btnProcesar
        document.getElementById('btnProcesar').addEventListener('click', function () {
            const tableRows = document.querySelectorAll('#tablaFacturaDetalle tr');
            const tabla = []; // Define la variable donde se almacenarán los datos de la tabla

            tableRows.forEach((row) => {
                const cells = row.getElementsByTagName('td');
                const rowData = {
                    id_producto: cells[0].textContent,
                    codigo: cells[1].textContent,
                    descripcion: cells[2].textContent,
                    precio_venta: parseFloat(cells[3].textContent.replace(/,/g, '').replace(' ', '')).toFixed(2), // Elimina comas, puntos y espacios, y ajusta a 2 decimales
                    cantidad: parseInt(cells[4].textContent),
                    cantidad_pendiente: parseFloat(cells[5].textContent),
                    cantidad_devuelta: parseFloat(cells[6].textContent),
                    unidad: cells[7].querySelector('select[name="unidades"]').value,
                    descuento: (parseFloat(cells[8].textContent.replace(/,/g, '').replace(' ', '')) / parseInt(cells[4].textContent) * parseInt(cells[6].textContent)).toFixed(2), // Elimina comas, puntos y espacios, y ajusta a 2 decimales
                    itbis: (parseFloat(cells[9].textContent.replace(/,/g, '').replace(' ', '')) / parseInt(cells[4].textContent) * parseInt(cells[6].textContent)).toFixed(2), // Elimina comas, puntos y espacios, y ajusta a 2 decimales
                    subtotal: (parseFloat(cells[10].textContent.replace(/,/g, '').replace(' ', '')) / parseInt(cells[4].textContent) * parseInt(cells[6].textContent)).toFixed(2), // Elimina comas, puntos y espacios, y ajusta a 2 decimales
                    importe: (parseFloat(cells[11].textContent.replace(/,/g, '').replace(' ', '')) / parseInt(cells[4].textContent) * parseInt(cells[6].textContent)).toFixed(2), // Elimina comas, puntos y espacios, y ajusta a 2 decimales
                };
                tabla.push(rowData);
            });

            // Obtiene los otros datos
            const subTotalDevolverInput = parseFloat(document.getElementById("subTotal_devolver").value.replace(/,/g, '').replace(' ', '')).toFixed(2);
            const masItbisDevolverInput = parseFloat(document.getElementById("masItbis_devolver").value.replace(/,/g, '').replace(' ', '')).toFixed(2);
            const descuentoDevolverInput = parseFloat(document.getElementById("descuento_devolver").value.replace(/,/g, '').replace(' ', '')).toFixed(2);
            const totalDevueltoInput = parseFloat(document.getElementById("totalDevuelto").value.replace(/,/g, '').replace(' ', '')).toFixed(2);
            const idVentaDevolver = document.getElementById("idVentaDevolver").value;
            const llevaNotaCredito = document.getElementById("llevaNotaCredito").checked;
            const comentario = document.getElementById("comentario").value;
            const estadoFactura = document.getElementById("estadoFactura").value;
            let almacen = "<%= caja.id_almacen %>";
            // alert(llevaNotaCredito)
            // Crea un objeto que contenga ambos conjuntos de datos
            const datosCompletos = {
                tabla: tabla,
                subTotalDevolver: subTotalDevolverInput,
                masItbisDevolver: masItbisDevolverInput,
                descuentoDevolver: descuentoDevolverInput,
                totalDevuelto: totalDevueltoInput,
                id_venta: idVentaDevolver,
                llevaNotaCredito: llevaNotaCredito,
                comentario: comentario,
                id_almacen: almacen,
                estado: estadoFactura,
            };
            // console.log(datosCompletos)
            // Ahora puedes enviar el objeto 'datosCompletos' al servidor usando una solicitud Fetch
            fetch(`/facturacion/anularFactura`, {
                method: 'POST', // Utiliza el método HTTP apropiado
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(datosCompletos), // Convierte los datos a JSON y envíalos
            })
                .then(response => response.json())
                .then(data => {
                    // Hacer algo con la respuesta del servidor si es necesario
                    // console.log(data);
                    if (data != "Algo anda mal en la venta temproral") {

                        id_cliente = 0;
                        // console.log(respo)
                        document.getElementById("servicio").checked = false;
                        buscarVentaTemporal(caja, '', "");
                        $('#modalDetalleDelPago').modal('hide');
                        var jsonData = JSON.stringify(data);
                        fetch("http://localhost:8081?printer=" + "POS80", {
                            method: "POST",
                            body: jsonData
                        })
                            .then(response => {
                                if (response.ok) {
                                    console.log("Texto enviado a imprimir.");
                                    location.reload();
                                } else {
                                    console.log("Error al enviar el texto a imprimir:", response.status);
                                }
                            })
                            .catch(error => {
                                console.log("Error al enviar el texto a imprimir:", error);
                            });
                    }

                })
                .catch(error => {
                    // Manejar errores en caso de que ocurra alguno durante la solicitud
                    console.error('Error:', error);
                });
        });

        document.getElementById("btnVerificarNotaCredito").addEventListener("click", function () {
            // Captura los valores ingresados en el modal
            const fecha = document.getElementById("fechaParametro").value;
            const secncfAfectado = document.getElementById("secncfAfectadoParametro").value;
            const secncfNota = document.getElementById("secncfNotaParametro").value;
            const idDevolucion = document.getElementById("numeroNota").value;

            // Crea un objeto que contenga ambos conjuntos de datos
            const datosCompletos = {
                fecha: fecha,
                secncf_afectado: secncfAfectado,
                secncf_nota: secncfNota,
                numeroDeNota: idDevolucion,
            };
            // console.log(datosCompletos)
            // Ahora puedes enviar el objeto 'datosCompletos' al servidor usando una solicitud Fetch
            fetch(`/facturacion/consultaNotaDeCreditosNoVencidasALaFechaEnVenta`, {
                method: 'POST', // Utiliza el método HTTP apropiado
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(datosCompletos), // Convierte los datos a JSON y envíalos
            })
                .then(response => response.json())
                .then(data => {
                    // Hacer algo con la respuesta del servidor si es necesario
                    // console.log(data);
                    if (data != "Algo anda mal en la venta temproral") {
                        if (data[0].resultado == "Nota de credito vencida!") {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: data,
                                showConfirmButton: false,
                                timer: 2500
                            })
                        } else if (data[0].resultado == "Nota de credito no existe!") {
                            Swal.fire({
                                position: 'center',
                                icon: 'error',
                                title: data[0].resultado,
                                showConfirmButton: false,
                                timer: 2500
                            })
                        } else if (data[0].resultado == "Nota de credito usada!") {
                            Swal.fire({
                                position: 'center',
                                icon: 'warning',
                                title: data[0].resultado,
                                showConfirmButton: false,
                                timer: 2500
                            })
                        } else {
                            if (parseFloat(montoACobrarInput.value.replace(",", "")) >= parseFloat(data[0].resultado.replace(",", ""))) {
                                montoNotaCreditoInput.value = data[0].resultado;


                                efectivoInput.value = '';
                                tarjetaDebitoInput.value = '';
                                tarjetaCreditoInput.value = '';
                                chequeInput.value = '';
                                pagoConBonoInput.value = '';
                                devolver.value = '';


                                var notaDeCreditoValue = parseFloat(montoNotaCreditoInput.value.replace(",", ""));
                                var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));

                                validarFormatoPagado();
                                formatAndSetNumber(montoNotaCreditoInput);


                                document.getElementById("notaCredito").value = '0'.repeat(11 - String(idDevolucion).length) + idDevolucion;

                            } else {
                                Swal.fire(`Monto de la nota: ${data[0].resultado} \n El monto de la nota de credito debe de ser menor o igual al monto facturado`, '', 'info')
                            }


                            /////


                            // console.log(resultado); // Esto mostrará "00000123"
                        }

                        //   if (data == "Caja guardada correctamente") {
                        //     Swal.fire({
                        //       position: 'top-end',
                        //       icon: 'success',
                        //       title: data,
                        //       showConfirmButton: false,
                        //       timer: 2500
                        //     })
                        //   }

                        $('#modalVerificarNotaCredito').modal('hide');
                    }

                })
                .catch(error => {
                    // Manejar errores en caso de que ocurra alguno durante la solicitud
                    console.error('Error:', error);
                });


            $.get(`/facturacion/consultaNotaDeCreditosNoVencidasALaFechaEnVenta/${fecha}/${secncfAfectado}/${secncfNota}/${idDevolucion}`, function (data) {
                //   cajaList("aaaaaaaaaaaa", '1') NA
                // console.log(data[0].resultado)
                // var tarjetaDebitoInput = document.getElementById("tarjetaDebito");
                //             var tarjetaCreditoInput = document.getElementById("tarjetaCredito");
                //             var chequeInput = document.getElementById("cheque");
                //             var notaCreditoInput = document.getElementById("notaCredito");
                //             var notaDeCreditoInput = document.getElementById("notaDeCredito");
                //             var montoNotaCreditoInput = document.getElementById("montoNotaCredito");
                //             var pagoConBonoInput = document.getElementById("pagoConBono");
                //             var efectivoInput = document.getElementById("efectivo");
                //             var montoACobrarInput = document.getElementById("monto_a_cobrar");

                //   alert(data[0].resultado);
                //           if (data[0].resultado == "Nota de credito vencida!") {
                //             Swal.fire({
                //               position: 'top-end',
                //               icon: 'warning',
                //               title: data,
                //               showConfirmButton: false,
                //               timer: 2500
                //             })
                //           } else if (data[0].resultado == "Nota de credito no existe!") {
                //             Swal.fire({
                //               position: 'center',
                //               icon: 'error',
                //               title: data[0].resultado,
                //               showConfirmButton: false,
                //               timer: 2500
                //             })
                //         } else if (data[0].resultado == "Nota de credito usada!") {
                //             Swal.fire({
                //               position: 'center',
                //               icon: 'warning',
                //               title: data[0].resultado,
                //               showConfirmButton: false,
                //               timer: 2500
                //             })
                //           }else{
                // if(parseFloat(montoACobrarInput.value.replace(",", "")) >= parseFloat(data[0].resultado.replace(",", ""))){
                // montoNotaCreditoInput.value = data[0].resultado;


                // efectivoInput.value = '';
                //                         tarjetaDebitoInput.value = '';
                //                         tarjetaCreditoInput.value = '';
                //                         chequeInput.value = '';
                //                         pagoConBonoInput.value = '';
                //                         devolver.value = '';


                //                                 var notaDeCreditoValue = parseFloat(montoNotaCreditoInput.value.replace(",", ""));
                //                                 var montoACobrarValue = parseFloat(montoACobrarInput.value.replace(",", ""));

                //                                 validarFormatoPagado();
                //                                 formatAndSetNumber(montoNotaCreditoInput);


                //                                 document.getElementById("notaCredito").value = '0'.repeat(11 - String(idDevolucion).length) + idDevolucion;

                // }else{
                //     Swal.fire(`Monto de la nota: ${data[0].resultado} \n El monto de la nota de credito debe de ser menor o igual al monto facturado`, '', 'info')
                // }


                //                     /////


                // // console.log(resultado); // Esto mostrará "00000123"
                //           }

                //         //   if (data == "Caja guardada correctamente") {
                //         //     Swal.fire({
                //         //       position: 'top-end',
                //         //       icon: 'success',
                //         //       title: data,
                //         //       showConfirmButton: false,
                //         //       timer: 2500
                //         //     })
                //         //   }

                //           $('#modalVerificarNotaCredito').modal('hide');
            });

            // Aquí puedes ejecutar la consulta SQL con los valores de los parámetros
            // Recuerda que debes usar un lenguaje de programación o librería para interactuar con la base de datos y pasar los valores a la consulta.

            // Cierra el modal

        });

    </script>

    <style>
        .active {
            background-color: yellow;
        }

        .ancho {
            max-width: 80%;

        }

        .anchotabla {
            max-width: 95%;

        }

        .anchotablafull {
            max-width: 100vw;

        }
    </style>
    <%- include('partials/_autoriza') %>
    <%- include('partials/_footer') %>